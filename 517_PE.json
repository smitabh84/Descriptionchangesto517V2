{
    "swagger": "2.0",
    "info": {
        "version": "v2.0",
        "title": "Nutanix REST API Explore Live!",
        "contact": {
            "name": "Nutanix, Inc.",
            "email": "admin@nutanix.com",
            "url": "http://www.nutanix.com"
        },
        "license": {
            "name": "EULA",
            "url": "http://www.nutanix.com/eula"
        }
    },
    "host": "{$$.env.Host}",
    "security": [
        {
            "basicAuth": []
        }
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "basePath": "/api/nutanix/v2.0/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "/alerts"
        },
        {
            "name": "/authconfig"
        },
        {
            "name": "/cloud"
        },
        {
            "name": "/cluster"
        },
        {
            "name": "/clusters"
        },
        {
            "name": "/comments"
        },
        {
            "name": "/data_at_rest_encryption"
        },
        {
            "name": "/data_at_rest_encryption_certificates"
        },
        {
            "name": "/disks"
        },
        {
            "name": "/events"
        },
        {
            "name": "/file_groups"
        },
        {
            "name": "/flr"
        },
        {
            "name": "/ha"
        },
        {
            "name": "/health_checks"
        },
        {
            "name": "/hosts"
        },
        {
            "name": "/http_proxies"
        },
        {
            "name": "/images"
        },
        {
            "name": "/iscsi_clients"
        },
        {
            "name": "/key_management_servers"
        },
        {
            "name": "/networks"
        },
        {
            "name": "/protection_domains"
        },
        {
            "name": "/remote_sites"
        },
        {
            "name": "/snapshots"
        },
        {
            "name": "/snmp"
        },
        {
            "name": "/storage_containers"
        },
        {
            "name": "/tasks"
        },
        {
            "name": "/upgrade"
        },
        {
            "name": "/vdisks"
        },
        {
            "name": "/virtual_disks"
        },
        {
            "name": "/vms"
        },
        {
            "name": "/volume_groups"
        },
        {
            "name": "/vstores"
        }
    ],
    "paths": {
        "/alerts": {
            "get": {
                "summary": "Get the list of Alerts.",
                "description": "Get the list of Alerts generated in the cluster.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "get/alerts/getAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "auto_resolved",
                        "in": "query",
                        "description": "Alerts which have been auto resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_ids",
                        "in": "query",
                        "description": "Entity ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "impact_types",
                        "in": "query",
                        "description": "Impact Types",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "classification",
                        "in": "query",
                        "description": "Classification",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_ids",
                        "in": "query",
                        "description": "Alert ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "get_causes",
                        "in": "query",
                        "description": "Get causes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "detailed_info",
                        "in": "query",
                        "description": "Get detailed info",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/alerts/acknowledge": {
            "post": {
                "summary": "Acknowledge Alerts.",
                "description": "Acknowledge alerts using a filter criteria.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/acknowledge/acknowledgeAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Severity",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "impact_types",
                        "in": "query",
                        "description": "Impact Type of alerts",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "classifications",
                        "in": "query",
                        "description": "Classification of alerts",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity Type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type_ids",
                        "in": "query",
                        "description": "Entity Type Ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.ManageAlertsDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/alerts/configuration": {
            "patch": {
                "summary": "Modify the Alert configuration.",
                "description": "Modify the configuration that is used to send Alert emails.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "patch/alerts/configuration/patchAlertConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "new Alert configuration.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.AlertConfigDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.appliance.configuration.AlertConfigDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the Alert configuration.",
                "description": "Get the configuration that is used to send Alert emails.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "get/alerts/configuration/getAlertConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.AlertConfigDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the Alert configuration.",
                "description": "Update the configuration that is used to send Alert emails.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "put/alerts/configuration/updateAlertConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "new Alert configuration.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.AlertConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.AlertConfigDTO"
                        }
                    }
                }
            }
        },
        "/alerts/policies": {
            "post": {
                "summary": "Create a new User Defined Alert Policy",
                "description": "Create a new User Defined Alert Policy.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/policies/createPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "New User Defined Alert Policy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "get": {
                "summary": "Get all User Defined Alert Policies",
                "description": "Get all User Defined Alert Policies",
                "tags": [
                    "/alerts"
                ],
                "operationId": "get/alerts/policies/getAlertPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_ids",
                        "in": "query",
                        "description": "Entity ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertPolicyDTO&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "put": {
                "summary": "Update a User Defined Alert Policy",
                "description": "Update a User Defined Alert Policy.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "put/alerts/policies/updatePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Alert Policy with updated configurations",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.alerts.AlertPolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.alerts.AlertPolicyDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/alerts/policies/conflicting_policies": {
            "post": {
		            "summary": "Create alerts for conflicting policies.",
                "description": "Create alerts for conflicting policies.",
               "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/policies/conflicting_policies/getConflictingPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.alerts.AlertPolicyDTO&gt;"
                        }
                    }
                }
            }
        },
        "/alerts/policies/{policy_id}": {
            "get": {
                "summary": "Get the User Defined Alert Policy",
                "description": "Get the User Defined Alert Policy",
                "tags": [
                    "/alerts"
                ],
                "operationId": "get/alerts/policies/{policy_id}/getAlertPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policy_id",
                        "in": "path",
                        "description": "Alert Policy ID ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.alerts.AlertPolicyDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "delete": {
                "summary": "Delete the specified User Defined Alert Policy",
                "description": "Delete the specified User Defined Alert Policy",
                "tags": [
                    "/alerts"
                ],
                "operationId": "delete/alerts/policies/{policy_id}/deleteAlertPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policy_id",
                        "in": "path",
                        "description": "Alert Policy ID ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/alerts/resolve": {
            "post": {
                "summary": "Resolve Alerts.",
                "description": "Resolve alerts using a filter criteria.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/resolve/resolveAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Severity",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "impact_types",
                        "in": "query",
                        "description": "Impact Type of alerts",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "classifications",
                        "in": "query",
                        "description": "Classifications of alerts",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity Type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type_ids",
                        "in": "query",
                        "description": "Entity Type Ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.ManageAlertsDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/alerts/{id}/acknowledge": {
            "post": {
                "summary": "Acknowledge Alert.",
                "description": "Acknowledge Alert with the specified Id.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/{id}/acknowledge/acknowledgeAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Alert Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.ResolveAcknowledgeAlertDTO"
                        }
                    }
                }
            }
        },
        "/alerts/{id}/resolve": {
            "post": {
                "summary": "Resolve Alert.",
                "description": "Resolve Alert with the specified Id.",
                "tags": [
                    "/alerts"
                ],
                "operationId": "post/alerts/{id}/resolve/resolveAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Alert Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.ResolveAcknowledgeAlertDTO"
                        }
                    }
                }
            }
        },
        "/authconfig": {
            "patch": {
                "summary": "Modify Auth configuration.",
                "description": "Modify the Auth configuration excluding directories configured in the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "patch/authconfig/patchAuthConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "an AuthConfigDTO instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.authconfig.AuthConfigDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.authconfig.AuthConfigDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Auth configuration.",
                "description": "Get the complete Auth configuration including directories configured in the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/getAuthConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.authconfig.AuthConfigDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Auth config.",
                "description": "Delete Auth configuration from the cluster. This will also delete all the directories configured in the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "delete/authconfig/deleteAuthConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Auth configuration.",
                "description": "Update the Auth configuration excluding directories configured in the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "put/authconfig/updateAuthConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "an AuthConfigDTO instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.AuthConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.AuthConfigDTO"
                        }
                    }
                }
            }
        },
        "/authconfig/add_auth_types": {
            "post": {
                "summary": "Add Auth types.",
                "description": "Add Auth types to the existing Auth types.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/add_auth_types/addAuthTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of Auth types",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/authconfig/auth_types": {
            "get": {
                "summary": "Get Auth types.",
                "description": "Get Auth types configured in Auth configuration.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/auth_types/getAuthTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Auth types.",
                "description": "Update Auth types configured in the Auth configuration.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "put/authconfig/auth_types/setAuthTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of Auth types",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.AuthConfigDTO"
                        }
                    }
                }
            }
        },
        "/authconfig/client_auth": {
            "post": {
                "summary": "Enable/disable client authentication.",
                "description": "Enable/disable client authentication on the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/client_auth/setClientAuthState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Enable client auth",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.authconfig.CaChainDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get client authentication status.",
                "description": "Get the client authentication status configured on the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/client_auth/getClientAuth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.authconfig.ClientAuthDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update client authentication.",
                "description": "Update client authentication on the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "put/authconfig/client_auth/updateClientAuth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Client auth updates",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.ClientAuthDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.ClientAuthDTO"
                        }
                    }
                }
            }
        },
        "/authconfig/client_auth/ca_chain": {
            "post": {
		            "summary": "Create client authentication ca chain",
                "description": "Create client authentication ca chain",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/client_auth/ca_chain/addClientAuthChain",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "formData",
                        "description": "Name of the Certificate",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "chain",
                        "in": "formData",
                        "description": "Certificate content",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.authconfig.CaChainDTO"
                        }
                    }
                }
            }
        },
        "/authconfig/client_auth/{name}": {
            "delete": {
                "summary": "Delete client chain certificate for authentication.",
                "description": "Delete client chain certificate on the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "delete/authconfig/client_auth/{name}/deleteClientAuthChain",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Certificate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/authconfig/directories": {
            "patch": {
                "summary": "Modify Directory.",
                "description": "Modify the specified Directory config.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "patch/authconfig/directories/patchDirectoryConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Directory instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.authconfig.DirectoryConfigDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add Directory.",
                "description": "Add Directory config to the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/directories/addDirectoryConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Directory instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Directories.",
                "description": "Get the list of Directories configured in the cluster.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/directories/getAllDirectoryConfigs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.authconfig.DirectoryConfigDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Edit Directory.",
                "description": "Edit the specified Directory config.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "put/authconfig/directories/updateDirectoryConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Directory instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                }
            }
        },
        "/authconfig/directories/connection_status": {
            "post": {
                "summary": "Configure connection status for directories",
                "description": "Configure connection status for directories",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/directories/connection_status/testConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Username, active directory name and password to authenticate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.authconfig.TestDirectoryConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/authconfig/directories/{name}": {
            "get": {
                "summary": "Get Directory.",
                "description": "Get Directory with the specified name.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/directories/{name}/getDirectoryConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Directory",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.authconfig.DirectoryConfigDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Directory.",
                "description": "Delete Directory config with the specified name.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "delete/authconfig/directories/{name}/deleteDirectoryConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Directory",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/authconfig/directory_domains": {
            "get": {
              "summary": "getDirectoryDomainLis",
                "description": "getDirectoryDomainLis",
                
                "tags": [
                    "/authconfig"
                ],
                "operationId": "get/authconfig/directory_domains/getDirectoryDomainList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/authconfig/remove_auth_types": {
            "post": {
                "summary": "Remove Auth types.",
                "description": "Remove Auth types from the existing Auth types.",
                "tags": [
                    "/authconfig"
                ],
                "operationId": "post/authconfig/remove_auth_types/deleteAuthTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of Auth types",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LOCAL",
                                    "DIRECTORY_SERVICE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cloud/azure/upload_certificate": {
            "post": {
  		         "summary": "Remove Auth types.",
                "description": "Remove Auth types from the existing Auth types.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "post/cloud/azure/upload_certificate/uploadAzureCert",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "certificate",
                        "in": "formData",
                        "description": "Certificate content",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/credentials": {
            "post": {
                "summary": "Add a cloud credential.",
                "description": "Add a cloud credential for accessing cloud sites.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "post/cloud/{cloud_type}/credentials/addCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "An instance of CloudCredentialsDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CloudCredentialsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CloudCredentialsDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get cloud credentials.",
                "description": "Get cloud credentials for accessing cloud sites.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "get/cloud/{cloud_type}/credentials/getCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of cloud credentials to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove all cloud credentials.",
                "description": "Remove all cloud credentials for accessing cloud sites.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "delete/cloud/{cloud_type}/credentials/removeAllCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/credentials/{name}": {
            "delete": {
                "summary": "Remove a cloud credential.",
                "description": "Remove a cloud credential for accessing cloud sites.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "delete/cloud/{cloud_type}/credentials/{name}/removeCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the credential",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/cvms": {
            "get": {
                "summary": "Get a list of CVMs.",
                "description": "Get a list of CVMs that installed.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "get/cloud/{cloud_type}/cvms/getCvms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Region",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credential_name",
                        "in": "query",
                        "description": "Name of the credential",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of cloud cvms to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/defaultcredentials": {
            "post": {
                "summary": "Set a default cloud credential to use.",
                "description": "Set a default cloud credential for accessing cloud sites.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "post/cloud/{cloud_type}/defaultcredentials/setDefaultCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Name of the credential",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CloudCredentialsDTO"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/deploy_remote_site": {
            "post": {
                "summary": "Deploy a cloud CVM and create a remote site.",
                "description": "Deploy a cloud CVM and create a remote site.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "post/cloud/{cloud_type}/deploy_remote_site/deployRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "An instance of DeployCloudRemoteSiteRequestDTO",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.DeployCloudRemoteSiteRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/images": {
            "get": {
                "summary": "Get a list of CVM images.",
                "description": "Get a list of CVM images that can be installed.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "get/cloud/{cloud_type}/images/getCvmImages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credential_name",
                        "in": "query",
                        "description": "Name of the credential",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Region of the cvm image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of cloud images to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "list_local_only",
                        "in": "query",
                        "description": "Is list local, to be specified only for Azure cloud type",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/regions": {
            "get": {
               "summary": "Get a list of CVM images.",
                "description": "Get a list of CVM images that can be installed.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "get/cloud/{cloud_type}/regions/getAvailableRegions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credential_name",
                        "in": "query",
                        "description": "Name of the credential",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.CloudRegion&gt;"
                        }
                    }
                }
            }
        },
        "/cloud/{cloud_type}/subnets": {
            "get": {
                "summary": "Get a list of subnets.",
                "description": "Get a list of subnets.",
                "tags": [
                    "/cloud"
                ],
                "operationId": "get/cloud/{cloud_type}/subnets/getSubnets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cloud_type",
                        "in": "path",
                        "description": "Cloud type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Region",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credential_name",
                        "in": "query",
                        "description": "Name of the credential",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of subnets to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;"
                        }
                    }
                }
            }
        },
        "/cluster": {
            "patch": {
                "summary": "Modify Cluster params.",
                "description": "Modify the params of the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "patch/cluster/patchClusterParams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Cluster instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ClusterDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Cluster details.",
                "description": "Get the details of the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/getClusterInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Cluster params.",
                "description": "Update the params of the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "put/cluster/editClusterParams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Cluster instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/domain_fault_tolerance_status": {
            "get": {
                "summary": "List domain fault tolerance status for all the domains",
                "description": "List domain fault tolerance status of the cluster for all the domains",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/domain_fault_tolerance_status/getDomainFaultToleranceStatuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.DomainFaultToleranceStatusDTO"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/domain_fault_tolerance_status/{domainType}": {
            "get": {
                "summary": "Get domain fault tolerance status for the specified domain",
                "description": "Get domain fault tolerance status of the cluster for the specified domain",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/domain_fault_tolerance_status/{domainType}/getDomainFaultToleranceStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domainType",
                        "in": "path",
                        "description": "Type of tolerance domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.DomainFaultToleranceStatusDTO"
                        }
                    }
                }
            }
        },
        "/cluster/metro_witness": {
            "post": {
                "summary": "Add Witness VM details",
                "description": "Add witness VM details.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "post/cluster/metro_witness/addMAWitness",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Witness VM details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.WitnessSiteDTO"
                        }
                    },
                    {
                        "name": "test_only",
                        "in": "query",
                        "description": "Witness VM details",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.WitnessSiteDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "get": {
                "summary": "List All Metro Availability Witnesses",
                "description": "List All Metro Availability Witnesses",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/metro_witness/getAllMAWitnesses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.WitnessSiteDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/cluster/metro_witness/{uuid}": {
            "delete": {
                "summary": "Delete a Metro Availability Witness",
                "description": "Delete a Metro Availability Witness",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/metro_witness/{uuid}/removeWitnessSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "MA Witness uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recover",
                        "in": "query",
                        "description": "recover from an unsuccessful delete operation",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "put": {
                "summary": "Update a Metro Availability Witness",
                "description": "Update a Metro Availability Witness",
                "tags": [
                    "/cluster"
                ],
                "operationId": "put/cluster/metro_witness/{uuid}/updateWitnessSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "MA Witness uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "MA Witness update details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.WitnessSiteDTO$UpdateWitnessSiteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.WitnessSiteDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/cluster/name_servers": {
            "post": {
                "summary": "Add name server.",
                "description": "Add the server to the name servers configured on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "post/cluster/name_servers/addNameServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Name of a name server",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Name Servers.",
                "description": "Get the list of Name Servers configured on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/name_servers/getNameServers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/name_servers/{nameServer}": {
            "delete": {
                "summary": "Delete the specified Name Server.",
                "description": "Delete a Name Server with the specified name.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/name_servers/{nameServer}/removeNameServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nameServer",
                        "in": "path",
                        "description": "Name of a name server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/cluster/nfs_whitelist": {
            "post": {
                "summary": "Add NFS subnet whitelist entry.",
                "description": "Add the address to the NFS subnet whitelist.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "post/cluster/nfs_whitelist/addNfsSubnetWhitelist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "NFS Whilelist",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get NFS subnet whitelist.",
                "description": "Get the NFS subnet whitelist on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/nfs_whitelist/getNfsSubnetWhitelist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/nfs_whitelist/{name}": {
            "delete": {
                "summary": "Delete NFS the specified subnet whitelist entry.",
                "description": "Delete an address from the NFS subnet whitelist.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/nfs_whitelist/{name}/removeNfsSubnetWhitelist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "NFS Whitelist",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/ntp_servers": {
            "post": {
                "summary": "Add NTP server.",
                "description": "Add the server to the NTP servers configured on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "post/cluster/ntp_servers/addNtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Name of NTP server",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of NTP servers.",
                "description": "Get the list of NTP servers configured on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/ntp_servers/getNtpServers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/cluster/ntp_servers/{ntp_server}": {
            "delete": {
                "summary": "Delete an NTP server.",
                "description": "Delete an NTP server with the specified name.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/ntp_servers/{ntp_server}/removeNtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ntp_server",
                        "in": "path",
                        "description": "Name of NTP server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/public_keys": {
            "post": {
                "summary": "Add a Public Key.",
                "description": "Add a Public Key to the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "post/cluster/public_keys/addPublicKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Public Key instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Public Keys.",
                "description": "Get the list of Public Keys configured in the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/public_keys/getPublicKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/public_keys/{name}": {
            "get": {
                "summary": "Get a Public Key.",
                "description": "Get a Public Key with the specified name.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/public_keys/{name}/getPublicKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Public Key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Public Key.",
                "description": "Delete a Public Key with the specified name.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/public_keys/{name}/deletePublicKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Public Key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/rackable_units": {
            "get": {
                "summary": "Get the list of Rackable Units.",
                "description": "Get the list of Rackable Units configured on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/rackable_units/getRackableUnits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.RackableUnitDTO"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/rackable_units/{uuid}": {
            "get": {
                "summary": "Get the specified Rackable Unit.",
                "description": "Get a Rackable Unit with the specified id.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/rackable_units/{uuid}/getRackableUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Rackable Unit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.RackableUnitDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the specified Rackable Unit.",
                "description": "Delete a Rackable Unit with the specified id.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/rackable_units/{uuid}/deleteRackableUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Rackable Unit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/remote_support": {
            "get": {
                "summary": "Get Remote Support settings.",
                "description": "Get the status of Remote Support settings on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/remote_support/getRemoteSupportStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.RemoteSupportConfigDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Remote Support settings.",
                "description": "Update the Remote Support settings on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "put/cluster/remote_support/editRemoteSupport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Timed Bool instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.TimedBoolDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/cluster/search": {
            "get": {
                "summary": "Get spotlight search results.",
                "description": "Perform a spotlight search on the cluster.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/search/doSpotlightSearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity_types",
                        "in": "query",
                        "description": "Entity types",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_names",
                        "in": "query",
                        "description": "Field Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxCount",
                        "in": "query",
                        "description": "Maximum entities to retrieve, the default value is 100",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.SpotlightSearchResultDTO"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/smtp": {
            "patch": {
                "summary": "Modify the SMTP server config.",
                "description": "Modify the SMTP server configuration.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "patch/cluster/smtp/patchSmtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SMTP Server instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SmtpServerDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.appliance.configuration.SmtpServerDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the SMTP server config.",
                "description": "Get the SMTP server configuration.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/smtp/getSmtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.SmtpServerDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete SMTP server config.",
                "description": "Delete the SMTP server configuration.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "delete/cluster/smtp/removeSmtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the SMTP server config.",
                "description": "Update the SMTP server configuration.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "put/cluster/smtp/updateSmtpServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SMTP Server instance",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SmtpServerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SmtpServerDTO"
                        }
                    }
                }
            }
        },
        "/cluster/smtp/security_modes": {
            "get": {
                "summary": "Get the SMTP security modes.",
                "description": "Get the list of supported security modes for the SMTP server.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/smtp/security_modes/getSmtpServerSecurityModeType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "STARTTLS",
                                    "SSL",
                                    "NONE"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cluster/stats": {
            "get": {
                "summary": "Get the list of Cluster stats.",
                "description": "Get the stats for the specified metrics. If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/cluster"
                ],
                "operationId": "get/cluster/stats/getClusterStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/clusters": {
            "get": {
                "summary": "Get the list of clusters.",
                "description": "Get the list of clusters.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/getClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of Clusters to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_attribute_list",
                        "in": "query",
                        "description": "Search attribute list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.ClusterDTO&gt;"
                        }
                    }
                }
            }
        },
        "/clusters/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Cluster.",
               "description": "Get the list of alerts generated on any Cluster.",
                
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/alerts/getClusterAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/clusters/events": {
          
            "get": {
                "summary": "Get the list of events generated on any Cluster.",
                
                "description": "Get the list of events generated on any Cluster.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/events/getClusterEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/clusters/{id}": {
            "get": {
                "summary": "Get a Cluster.",
                "description": "Get a Cluster with the specified id.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/{id}/getCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO"
                        }
                    }
                }
            }
        },
        "/clusters/{id}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Cluster.",
                 "description": "Get the list of alerts generated on a specified Cluster.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/{id}/alerts/getAlertsForCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of a Cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/clusters/{id}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Cluster.",
                   "description": "Get the list of events generated on a specified Cluster.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/{id}/events/getEventsForClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of a Cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/clusters/{id}/stats": {
            "get": {
                "summary": "Get the stats for a specified Cluster.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/clusters"
                ],
                "operationId": "get/clusters/{id}/stats/getStatsForCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of a Cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "summary": "Create a new comment.",
                "description": "Create a new comment attached to a parent entity.",
                "tags": [
                    "/comments"
                ],
                "operationId": "post/comments/createComment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Comment to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.comment.CommentRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.comment.CommentDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation."
                    }
                }
            }
        },
        "/data_at_rest_encryption": {
            "get": {
                "summary": "Get encryption status.",
                "description": "Get encryption status of the cluster.",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "get/data_at_rest_encryption/getEncryptionStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.encryption.ClusterEncryptionStatusDTO"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption/download_encryption_key": {
            "post": {
                "summary": "Download encryption key.",
                "description": "Download encryption key encrypted with the password.",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "post/data_at_rest_encryption/download_encryption_key/downloadEncryptionKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "password used to encrypt the key.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.KeyBackupPasswordDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.KeyBackupResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/data_at_rest_encryption/enable": {
            "post": {
                "summary": "Enable encryption.",
                "description": "Enable encryption on the cluster.",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "post/data_at_rest_encryption/enable/enableEncryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Desired cluster protection status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.EnableEncryptionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption/recent_certificate_test_results": {
            "get": {
                "summary": "Get recent certificate test results.",
                "description": "Get recent certificate test results.",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "get/data_at_rest_encryption/recent_certificate_test_results/getRecentCertificateTestResults",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host_uuids",
                        "in": "query",
                        "description": "List of Host uuids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kms_server_names",
                        "in": "query",
                        "description": "List of Key Management Server names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.encryption.KMSTestResultsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption/rekey": {
            "post": {
                "summary": "Sets new passwords for encryption capable disks.",
                "description": "Sets new passwords for encryption capable disks",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "post/data_at_rest_encryption/rekey/rekey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of disk uuids on which rekey needs to be performed",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption/software/rekey": {
            "post": {
               "summary": "data_at_rest_encryption/software/rekey.",
                "description": "data_at_rest_encryption/software/rekey",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "post/data_at_rest_encryption/software/rekey/refreshSoftwareKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Software Rekey request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.RekeyRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.RekeyResponseDto"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption/test": {
            "post": {
                "summary": "Test encryption configuration.",
                "description": "Test encryption configuration of the cluster.",
                "tags": [
                    "/data_at_rest_encryption"
                ],
                "operationId": "post/data_at_rest_encryption/test/testEncryptionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of host ids and key management server names on which test to be performed",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.TestEncryptionConfigurationRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.encryption.TestEncryptionConfigurationResponseDTO"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/ca_certificates": {
            "post": {
                "summary": "Add trusted CA certificate.",
                "description": "Add trusted CA certificate to the cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "post/data_at_rest_encryption_certificates/ca_certificates/addCACertificate",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "certificate_file",
                        "in": "formData",
                        "description": "Certificate file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.CertificateAuthorityDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all CA certificates.",
                "description": "Get all CA Certificates from cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "get/data_at_rest_encryption_certificates/ca_certificates/getCACertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.CertificateAuthorityDTO"
                            }
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/ca_certificates/{name}": {
            "delete": {
                "summary": "Delete Certificate Authority.",
                "description": "Delete a CA certificate from cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "delete/data_at_rest_encryption_certificates/ca_certificates/{name}/deleteCACertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Certificate Authority name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/certification_information": {
            "get": {
                "summary": "Get Certification information.",
                "description": "Get Certification Signing information.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "get/data_at_rest_encryption_certificates/certification_information/getCertificationInformation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.CertificationInformationDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the Certification information.",
                "description": "Update the Certification information.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "put/data_at_rest_encryption_certificates/certification_information/updateCertificationInformation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "CertificationInformation instance",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.CertificationInformationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.CertificationInformationDTO"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/csr_for_discovered_node": {
            "get": {
                "summary": "Download CSR files",
                "description": "Download CSR files from cluster",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "get/data_at_rest_encryption_certificates/csr_for_discovered_node/downloadCSRFromDiscoveredNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_ip",
                        "in": "query",
                        "description": "node ip address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/csrs": {
            "get": {
                "summary": "Download CSR files",
                "description": "Download CSR files from cluster",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "get/data_at_rest_encryption_certificates/csrs/downloadCSRs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_uuid_list",
                        "in": "query",
                        "description": "List of node ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/javax.ws.rs.core.Response"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/svm_certificate": {
            "delete": {
                "summary": "Delete certificate.",
                "description": "Delete a svm certificate from cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "delete/data_at_rest_encryption_certificates/svm_certificate/deleteCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_uuid",
                        "in": "query",
                        "description": "Id of the node on which certificate is installed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "server_name",
                        "in": "query",
                        "description": "Key management Server name for which certificate is installed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/svm_certificates": {
            "post": {
                "summary": "Add certificates.",
                "description": "Add certificates to the cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "post/data_at_rest_encryption_certificates/svm_certificates/uploadCertificates",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "certificate_file",
                        "in": "formData",
                        "description": "Certificate file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "key_management_server_name",
                        "in": "query",
                        "description": "Key Management Server name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/svm_certificates/multi_file": {
            "post": {
                "summary": "Add certificates.",
                "description": "Add certificates to the cluster via multi-file upload.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "post/data_at_rest_encryption_certificates/svm_certificates/multi_file/uploadCertificatesViaMultiFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Certificate list",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.MultiFileCertificateUploadDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/data_at_rest_encryption_certificates/svm_certificates/replace": {
            "post": {
                "summary": "Replace expired svm certificate.",
                "description": "Replace svm certificate on the cluster.",
                "tags": [
                    "/data_at_rest_encryption_certificates"
                ],
                "operationId": "post/data_at_rest_encryption_certificates/svm_certificates/replace/replaceExpiredCertificate",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "certificate_file",
                        "in": "formData",
                        "description": "Certificate file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "key_management_server_name",
                        "in": "query",
                        "description": "Key Management Server name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_uuid",
                        "in": "query",
                        "description": "ServiceVmId of the node",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/disks": {
            "get": {
                "summary": "Get the list of Disks.",
                "description": "Get the list of Disks configured in the cluster.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/getDisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of Disks to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_attribute_list",
                        "in": "query",
                        "description": "Search attribute list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.DiskDTO&gt;"
                        }
                    }
                }
            }
        },
        "/disks/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Disk.",
                "description": "Get the list of alerts generated on any Disk.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/alerts/getDiskAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/disks/events": {
            "get": {
                "summary": "Get the list of events generated on any Disk.",
                "description": "Get the list of events generated on any Disk.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/events/getDiskEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/disks/{uuid}": {
            "get": {
                "summary": "Get a Disk.",
                "description": "Get a Disk with the specified id.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/{uuid}/getDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Disk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.DiskDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Mark specified Disk for Removal.",
                "description": "Mark specified Disk for removal. Use 'force' option to ignore all the system validations.",
                "tags": [
                    "/disks"
                ],
                "operationId": "delete/disks/{uuid}/beginRemoveDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Disk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "Force the operation",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "bypass_upgrade_check",
                        "in": "query",
                        "description": "Skip upgrade check",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/disks/{uuid}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Disk.",
                "description": "Get the list of alerts generated on a specified Disk.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/{uuid}/alerts/getAlertsForDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Disk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/disks/{uuid}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Disk.",
                 "description":"Get the list of events generated on a specified Disk",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/{uuid}/events/getEventsForDisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Disk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/disks/{uuid}/stats": {
            "get": {
                "summary": "Get the stats for a specified Disk.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/disks"
                ],
                "operationId": "get/disks/{uuid}/stats/getDiskStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Disk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "summary": "Get the list of Events.",
                "description": "Get the list of Events generated in the cluster.",
                "tags": [
                    "/events"
                ],
                "operationId": "get/events/getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_ids",
                        "in": "query",
                        "description": "Entity ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_ids",
                        "in": "query",
                        "description": "Event ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "detailed_info",
                        "in": "query",
                        "description": "Get detailed info",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/events/acknowledge": {
            "post": {
                "summary": "Acknowledge events.",
                "description": "Acknowledge events using a filter criteria.",
                "tags": [
                    "/events"
                ],
                "operationId": "post/events/acknowledge/acknowledgeEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Severity",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "Entity Type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entity_type_ids",
                        "in": "query",
                        "description": "Entity Type Ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.alerts.ManageAlertsDTO"
                        }
                    }
                }
            }
        },
        "/events/{id}/acknowledge": {
            "put": {
                "summary": "Acknowledge Event.",
                "description": "Acknowledge Event with the specified Id.",
                "tags": [
                    "/events"
                ],
                "operationId": "put/events/{id}/acknowledge/acknowledgeEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/file_groups": {
            "get": {
                "summary": "List file groups.",
                "description": "List file groups.",
                "tags": [
                    "/file_groups"
                ],
                "operationId": "get/file_groups/listFileGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "UUID of file group",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.FileGroupDTO&gt;"
                        }
                    }
                }
            }
        },
        "/file_groups/{uuid}/delete_files": {
            "post": {
                "summary": "Remove files for a specific file group.",
                "description": "Remove files for a specific file group.",
                "tags": [
                    "/file_groups"
                ],
                "operationId": "post/file_groups/{uuid}/delete_files/deleteFiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of file group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/flr/{vm_uuid}/attach_disk": {
            "post": {
               "summary": "Attach disk for a particular vm uuid",
                "description": "Attach disk for a particular vm uuid",
                "tags": [
                    "/flr"
                ],
                "operationId": "post/flr/{vm_uuid}/attach_disk/attachFlrDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Uuid of the VM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Snapshot id and specific disk to attach",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.AttachDiskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/flr/{vm_uuid}/attached_disks": {
            "get": {
              "summary" : "Get Details of the VM disks",
               "description":"Get Details of the VM disks",
                "tags": [
                    "/flr"
                ],
                "operationId": "get/flr/{vm_uuid}/attached_disks/getAttachedFlrSnapshotOfVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Uuid of the VM",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.VMAttachedSnapshotInfoDTO"
                            }
                        }
                    }
                }
            }
        },
        "/flr/{vm_uuid}/attached_disks/{snapshot_id}": {
            "get": {
              "summary" : "Get Details of the attached disks",
               "description":"Get Details of the attached disks",
                "tags": [
                    "/flr"
                ],
                "operationId": "get/flr/{vm_uuid}/attached_disks/{snapshot_id}/getAttachedFlrSnapshotOfVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Uuid of the VM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Id of the snapshot",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.VMAttachedSnapshotInfoDTO"
                            }
                        }
                    }
                }
            }
        },
        "/flr/{vm_uuid}/detach_disk": {
            "post": {
               "summary": "Deattach disk for a particular vm uuid",
                "description": "Deattach disk for a particular vm uuid",
                "tags": [
                    "/flr"
                ],
                "operationId": "post/flr/{vm_uuid}/detach_disk/detachFlrDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Uuid of the VM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Specific disk to detach",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.DetachDiskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/flr/{vm_uuid}/snapshots": {
            "get": {
              "summary" : "Get Details of the VM snaphots",
               "description":"Get Details of the VM snaphots",
                "tags": [
                    "/flr"
                ],
                "operationId": "get/flr/{vm_uuid}/snapshots/getFlrSnapshotsOfVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Uuid of the VM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_count",
                        "in": "query",
                        "description": "Snapshot Count",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.QueryVMSnapshotInfoDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ha": {
            "get": {
                "summary": "Get current HA configuration.",
                "description":"Get current HA configuration.",
                "tags": [
                    "/ha"
                ],
                "operationId": "get/ha/getHaConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.HaConfigDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Enable, disable or modify HA configuration.",
                 "description":"Enable, disable or modify HA configuration.",
                "tags": [
                    "/ha"
                ],
                "operationId": "put/ha/updateHaConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "HA configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.HaUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/health_checks": {
            "patch": {
                "summary": "Modify Health Check details.",
                "description": "Modify the specified health check details.",
                "tags": [
                    "/health_checks"
                ],
                "operationId": "patch/health_checks/patchHealthCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An Health Check instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.health.check.HealthCheckDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Health Checks.",
                "description": "Get the list of Health Checks configured in the cluster.",
                "tags": [
                    "/health_checks"
                ],
                "operationId": "get/health_checks/getHealthChecks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "check_ids",
                        "in": "query",
                        "description": "Check Ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "global_config",
                        "in": "query",
                        "description": "Whether to get the global config list or not.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_internal_checks",
                        "in": "query",
                        "description": "Whether to include internal checks or not.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "category_types",
                        "in": "query",
                        "description": "Categories of the Health Check.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.health.check.HealthCheckDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Health Check details.",
                "description": "Update the specified health check details.",
                "tags": [
                    "/health_checks"
                ],
                "operationId": "put/health_checks/updateHealthCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An Health Check instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO"
                        }
                    }
                }
            }
        },
        "/health_checks/{id}": {
            "get": {
                "summary": "Get Health Check details.",
                "description": "Get the health check with the specified id.",
                "tags": [
                    "/health_checks"
                ],
                "operationId": "get/health_checks/{id}/getHealthCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the health check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "global_config",
                        "in": "query",
                        "description": "Whether to get the global config list or not.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO"
                        }
                    }
                }
            }
        },
        "/hosts": {
            "get": {
                "summary": "Get the list of Physical Hosts.",
                "description": "Get the list of Physical Hosts configured in the cluster.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/getHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of Physical Hosts to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_attribute_list",
                        "in": "query",
                        "description": "Search attribute list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.NodeDTO&gt;"
                        }
                    }
                }
            },
            "put": {
               "summary": "Edit Host",
                "description": "Edit Host",
                "tags": [
                    "/hosts"
                ],
                "operationId": "put/hosts/editHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.NodeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Host.",
                "description":"Get the list of alerts generated on any Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/alerts/getHostAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/events": {
            "get": {
                "summary": "Get the list of events generated on any Host.",
                "description":"Get the list of events generated on any Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/events/getHostEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/failover_cluster": {
            "post": {
                  "summary": "Configure failover for a cluster for a host",
                "description": "Configure failover for a cluster for a host",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/failover_cluster/configureFailoverCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.ConfigureHypervNodeRequestDTO$FailoverClusterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get details of failover clusters",
                "description":"Get details of failover clusters",
               
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/failover_cluster/getFailoverClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.hyperv.ConfigureHypervNodeRequestDTO$FailoverClusterDTO"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/gpu_profiles": {
            "get": {
                "summary": "Get the list of virtual GPU profiles for all physical Hosts.",
                "description": "Get the list of virtual GPU profiles for all physical Hosts.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/gpu_profiles/getVirtualGpuProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.uhura.VirtualGPUProfileDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/host_gpus": {
            "get": {
                "summary": "Get the list of GPUs for all physical Host.",
                "description": "Get the list of GPUs for all physical Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/host_gpus/getHostGpus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of host GPUs to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.uhura.HostGPUDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/join_domain": {
            "post": {
                "summary": "Request to join nodes to a domain",
                "description": "Request to join nodes to a domain",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/join_domain/joinNodesToDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.ConfigureHypervNodeRequestDTO$HypervNodeDomainConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO"
                        }
                    }
                }
            }
        },
        "/hosts/restart": {
            "post": {
               "summary": "Request to restart nodes",
                "description": "Request to restart nodes",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/restart/restartNodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.ConfigureHypervNodeRequestDTO$RestartConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO"
                        }
                    }
                }
            }
        },
        "/hosts/set_default_vm_vhd_location": {
            "post": {
               "summary": "Request to set default vhd location for a VM",
                "description": "Request to set default vhd location for a VM",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/set_default_vm_vhd_location/setDefaultVmVhdLocation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.ConfigureHypervNodeRequestDTO$DefaultVmVhdLocationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO"
                        }
                    }
                }
            }
        },
        "/hosts/unjoin_domain": {
            "post": {
                 "summary": "Request to unjoin nodes from a domain",
                "description": "Request to unjoin nodes from a domain",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/unjoin_domain/unjoinNodeFromDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.ConfigureHypervNodeRequestDTO$HypervNodeDomainConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}": {
            "get": {
                "summary": "Get a Physical Host.",
                "description": "Get a Physical Host with the specified id.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/getHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Physical Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO"
                        }
                    }
                }
            },
            "delete": {
               "summary": "Delete a host detail",
                "description": "Delete a host detail",
                "tags": [
                    "/hosts"
                ],
                "operationId": "delete/hosts/{uuid}/beginRemoveHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bypass_space_checks",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ignore_add_in_progress",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "bypass_upgrade_check",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Host.",
                "description": "Get the list of alerts generated on a specified Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/alerts/getAlertsForHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/detach_node_from_metadata_store": {
            "post": {
               "summary": "Detach node from metadata store",
                "description": "Detach node from metadata store",
              
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/{uuid}/detach_node_from_metadata_store/detachNodeFromMetadataStore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/enable_metadata_store": {
            "post": {
              "summary": "Enable metadata store",
                "description": "Enable metadata store",
              
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/{uuid}/enable_metadata_store/enableMetadataStore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/enable_monitoring": {
            "post": {
              "summary": "Enable monitoring for a Host with a specified UUID",
                "description": "Enable monitoring for a Host with a specified UUID",
              
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/{uuid}/enable_monitoring/setHostMonitoringStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/enter_maintenance_mode": {
            "post": {
                "summary": "Put a host in maintenance mode.",
                "description": "Put a host in maintenance mode. <br/><br/>It can be specified if Virtual Machines currently running on the host need to be powered off, live migrated or cold migrated. The host will be marked as unschedulable, so that no new Virtual Machines can be instantiated on it. Subsequently, an attempt is made to evacuate VMs from the host. <br/><br/>If the evacuation attempt fails (e.g., because there are insufficient resources available elsewhere in the cluster), the host will remain in the entering maintenance mode state, where it is marked unschedulable, waiting for user remediation. <br/><br/>This operation is idempotent and can be run again with different options like powering off the Virtual Machines, live or cold migrating them. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. <br/><br/>The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/{uuid}/enter_maintenance_mode/enterMaintenanceMode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of host to put in maintenance mode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Maintenance mode options",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.MaintenanceModeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Host.",
                "description": "Get the list of events generated on a specified Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/events/getEventsForHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/exit_maintenance_mode": {
            "post": {
                "summary": "Pull a host out of maintenance mode or abort a prior attempt.",
                "description": "Pull a host out of maintenance mode or abort a prior attempt to enter maintenance mode even if the attempt is ongoing. <br/><br/>This is a synchronous idempotent operation. If the host is no longer in maintenance mode, this command has no effect.  <br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the host logical timestamp. The logical timestamp can be obtained from the host object.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "post/hosts/{uuid}/exit_maintenance_mode/exitMaintenanceMode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of host to pull out of maintenance mode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Logical timestamp associated with host object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_gpus": {
            "get": {
                "summary": "Get the list of GPUs for a physical Host.",
                "description": "Get the list of GPUs for a physical Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_gpus/getGpusforHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of host GPUs to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.uhura.HostGPUDTO&gt;"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_gpus/{gpu_uuid}": {
            "get": {
                "summary": "Get a particular GPU for a physical Host.",
                "description": "Get a particular GPU for a physical Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_gpus/{gpu_uuid}/getGpuforHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gpu_uuid",
                        "in": "path",
                        "description": "UUID of the Host GPU",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.uhura.HostGPUDTO"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_gpus/{gpu_uuid}/stats": {
            "get": {
                "summary": "Get stats for a particular GPU for a physical Host.",
                "description": "Get stats for a particular GPU for a physical Host.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_gpus/{gpu_uuid}/stats/getHostGpuStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gpu_uuid",
                        "in": "path",
                        "description": "UUID of the Host GPU",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_nics": {
            "get": {
              "summary" :" Get host nics for a specified uuid",
              "description" :"Get host nics for a specified uuid",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_nics/getHostInterfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pnic_id",
                        "in": "query",
                        "description": "ID of Host Nic",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.network.HostNicDTO"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_nics/{pnic_id}": {
            "get": {
                "summary" :" Get host interface",
              "description" :" Get host interface",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_nics/{pnic_id}/getHostInterface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pnic_id",
                        "in": "path",
                        "description": "ID of Host Nic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.network.HostNicDTO"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/host_nics/{pnic_id}/stats": {
            "get": {
              "summary" :" Get stats for a host nics with a specified uuid",
              "description" :" Get stats for a host nics with a specified uuid",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/host_nics/{pnic_id}/stats/getHostInterfaceStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pnic_id",
                        "in": "path",
                        "description": "ID of the Host Nic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/stats": {
            "get": {
                "summary": "Get the stats for a specified Physical Host.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/stats/getHostStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Physical Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/virtual_nics": {
            "get": {
               "summary" :" Get virtual_nics for a specified uuid",
              "description" :"Get virtual_nics for a specified uuid",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/virtual_nics/getHostVirtualInterfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vnic_id",
                        "in": "query",
                        "description": "ID of Host Virtual Nic",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.network.HostVirtualNicDTO"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/virtual_nics/{vnic_id}": {
            "get": {
              "summary" :" Get details of virtual_nics for a specified uuid",
              "description" :"Get details of virtual_nics for a specified uuid",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/virtual_nics/{vnic_id}/getHostVirtualInterface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vnic_id",
                        "in": "path",
                        "description": "ID of Host Virtual Nic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.network.HostVirtualNicDTO"
                        }
                    }
                }
            }
        },
        "/hosts/{uuid}/virtual_nics/{vnic_id}/stats": {
            "get": {
               "summary" :" Get stats for virtual_nics with a specified uuid",
              "description" :"Get stats for virtual_nics with a specified uuid",
                "tags": [
                    "/hosts"
                ],
                "operationId": "get/hosts/{uuid}/virtual_nics/{vnic_id}/stats/getHostVirtualInterfaceStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vnic_id",
                        "in": "path",
                        "description": "ID of the Host Virtual Nic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/http_proxies": {
            "patch": {
                "summary": "Modify an HTTP Proxy.",
                "description": "Modify the specified HTTP Proxy.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "patch/http_proxies/patchHttpProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An HTTP Proxy instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.HttpProxyDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add an HTTP Proxy.",
                "description": "Add an HTTP Proxy to the cluster.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "post/http_proxies/addHttpProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An HTTP Proxy instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.HttpProxyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of HTTP Proxies.",
                "description": "Get the list of HTTP Proxies configured in the cluster.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "get/http_proxies/getHttpProxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.HttpProxyDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an HTTP Proxy.",
                "description": "Update the specified HTTP Proxy.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "put/http_proxies/editHttpProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An HTTP Proxy instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.HttpProxyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/http_proxies/{name}": {
            "get": {
                "summary": "Get an HTTP Proxy.",
                "description": "Get an HTTP Proxy with the specified name.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "get/http_proxies/{name}/getHttpProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of an HTTP Proxy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.HttpProxyDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an HTTP Proxy.",
                "description": "Delete an HTTP Proxy with the specified name.",
                "tags": [
                    "/http_proxies"
                ],
                "operationId": "delete/http_proxies/{name}/deleteHttpProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of an HTTP Proxy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/images": {
            "post": {
                "summary": "Create a Disk Image.",
                "description": "Create a Image with specified configuration. <br/><br/>There are two modes of creation, one mode you either provide some source (URL, vmdisk, or uploaded file) or you just create the metadata for the image. <br/>If a UUID is specified for the Image, this operation will be idempotent. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/images"
                ],
                "operationId": "post/images/createImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Image Creation Specs",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ImageSpecDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Disk Images.",
                "description": "Get the list of Images",
                "tags": [
                    "/images"
                ],
                "operationId": "get/images/getImages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include_vm_disk_sizes",
                        "in": "query",
                        "description": "Include VmDisk sizes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_vm_disk_paths",
                        "in": "query",
                        "description": "Include VmDisk paths",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.ImageInfoDTO&gt;"
                        }
                    }
                }
            }
        },
        "/images/{uuid}": {
            "get": {
                "summary": "Get details of a specific Image based on the given Id.",
                "description": "Get details of a specific Disk Image based on the given Id.",
                "tags": [
                    "/images"
                ],
                "operationId": "get/images/{uuid}/getImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_vm_disk_sizes",
                        "in": "query",
                        "description": "Include VmDisk size",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_vm_disk_paths",
                        "in": "query",
                        "description": "Include VmDisk path",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.ImageInfoDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Disk Image.",
                "description": "Delete a Disk Image. <br/><br/>This is an idempotent operation.<br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Image logical timestamp. The logical timestamp can be obtained from the Image Info object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/images"
                ],
                "operationId": "delete/images/{uuid}/deleteImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "Logical timestamp for synchronized delete",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a Disk Image.",
                "description": "Update a Disk Image. <br/><br/>Fields that are not set or are not specified are ignored.<br/><br/>If an Image is already in ACTIVE state then its source can't be updated. But you can still update the image name, image type and image annotation.<br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Image logical timestamp. The logical timestamp can be obtained from the Image object.",
                "tags": [
                    "/images"
                ],
                "operationId": "put/images/{uuid}/updateImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Disk Image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Disk Image Update Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ImageSpecDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/iscsi_clients": {
            "get": {
                "summary": "Retrieve Iscsi Client configuration",
               "description" :  "Retrieve Iscsi Client configuration",
                "tags": [
                    "/iscsi_clients"
                ],
                "operationId": "get/iscsi_clients/getIscsiClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.volumegroups.IscsiClientDTO&gt;"
                        }
                    }
                }
            }
        },
        "/iscsi_clients/{uuid}": {
            "get": {
                "summary": "Retrieve Iscsi Client configuration with a particular uuid",
                 "description" :  "Retrieve Iscsi Client configuration with a particular uuid",
                "tags": [
                    "/iscsi_clients"
                ],
                "operationId": "get/iscsi_clients/{uuid}/getIscsiClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier for the iscsi client",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.volumegroups.IscsiClientDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Modify an existing Iscsi Client configuration",
                "description" :  "Modify an existing Iscsi Client configuration",
                "tags": [
                    "/iscsi_clients"
                ],
                "operationId": "put/iscsi_clients/{uuid}/updateVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Iscsi client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Update Iscsi client",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.IscsiClientDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.IscsiClientDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/key_management_servers": {
            "patch": {
                "summary": "Modify the KeyManagementServer.",
                "description": "Modify the KeyManagementServer configuration.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "patch/key_management_servers/patchKeyManagementServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Key Management Server instance",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.KeyManagementServerDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "post": {
                "summary": "Add a Key Management Server.",
                "description": "Add a Key Management Server to the cluster.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "post/key_management_servers/addKeyManagementServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Key Management Server instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "get": {
                "summary": "Get all Key Management Servers.",
                "description": "Get all Key Management Servers from cluster.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "get/key_management_servers/getKeyManagementServers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.KeyManagementServerDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "put": {
                "summary": "Update the KeyManagementServer.",
                "description": "Update the KeyManagementServer configuration.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "put/key_management_servers/updateKeyManagementServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Key Management Server instance",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    },
                    {
                        "name": "force_update",
                        "in": "query",
                        "description": "Set when you need to updateKey Management Server that is currently storing encryption keys for the cluster",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/key_management_servers/type": {
            "get": {
                "summary": "Get Key Management Server Type.",
                "description": "Get Key Management Server Type.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "get/key_management_servers/type/getKeyManagementServerType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.KMSTypeDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "put": {
                "summary": "Select Key Management Server Type.",
                "description": "Select Key Management Server Type to be LKM or EKM.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "put/key_management_servers/type/selectKeyManagementServerType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Type of the Key Management Server",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.KMSTypeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/key_management_servers/{name}": {
            "get": {
                "summary": "Get Key Management Server.",
                "description": "Get Key Management Server specified by the name.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "get/key_management_servers/{name}/getKeyManagementServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Key Management Server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.KeyManagementServerDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "delete": {
                "summary": "Delete the KeyManagementServer.",
                "description": "Delete a KeyManagementServer with the specified name.",
                "tags": [
                    "/key_management_servers"
                ],
                "operationId": "delete/key_management_servers/{name}/deleteKeyManagementServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Key Management Server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/networks": {
            "post": {
                "summary": "Create a network.",
                "description": "Create a network with specified L2 and L3 configuration. <br/><br/>Each VM network interface is bound to a virtual network (see POST /vms/nic_create/). While a virtual network is in use by a VM, it cannot be modified or deleted. <br/><br/>Currently, the only supported L2 type is VLAN. Each virtual network is bound to a single VLAN, and trunking VLANs to a virtual network is not supported. A virtual network on VLAN 66 would be named 'vlan.66'. Each virtual network maps to a hypervisor-specific default vswitch. On KVM, this is 'br0'. To use a different vswitch (e.g., with different uplinks), you can append the vswitch name to the network identifier. For example, 'vlan.66.br1'. This virtual switch should exists on all hosts, and the physical switch ports for the vswitch uplinks are properly configured to receive VLAN-tagged traffic. <br/><br/>On hypervisors where it is supported, a virtual network may have an IPv4 configuration. Such a network is a 'managed L3' network. A network without a IPv4 configuration is an 'unmanaged L3' network. A network must be configured as 'managed L3' or 'unmanaged L3' at creation time. It is not possible to convert one to the other. A particular L2 (i.e., a particular VLAN) may have at most one managed network defined at a time. <br/><br/>To create a managed network, the user specifies the 'ipConfig'. This consists of an IPv4 default gateway address and subnet in CIDR notation. The user may optionally specify a DHCP server address, to avoid conflict with other services on the network. By default, the last available host address in the subnet is used. Every virtual NIC on a managed network must be assigned an IPv4 address at NIC creation time. <br/><br/>All DHCP traffic on the network will be rerouted to an internal DHCP server, who hands out configured IPv4 addresses. DHCP traffic on the physical network will not reach the virtual network, and vice versa. A managed network may have zero or more non-overlapping DHCP pools. Each pool must be entirely contained within the network's managed subnet. In the absence of a DHCP pool, the user must specify an IPv4 address when creating a virtual network adapter (see POST /vms/nic_create). If the managed network has a DHCP pool, the user need not provide an address; the NIC will automatically be assigned an IPv4 address from one of the pools at creation time, provided at least one address is available. Addresses in the DHCP pool are not reserved. That is, a user may manually specify an address belonging to the pool when creating a virtual adapter.",
                "tags": [
                    "/networks"
                ],
                "operationId": "post/networks/createNetwork",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Network config info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.NetworkConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$NetworkIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get list of networks.",
                "description": "Get list of networks configured in the cluster.",
                "tags": [
                    "/networks"
                ],
                "operationId": "get/networks/getNetworks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;"
                        }
                    }
                }
            }
        },
        "/networks/{uuid}": {
            "get": {
                "summary": "Get info of a network.",
                "description": "Get info of a network in the cluster.",
                "tags": [
                    "/networks"
                ],
                "operationId": "get/networks/{uuid}/getNetwork",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the network",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.NetworkConfigDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a network.",
                "description": "Delete a network. <br/><br/>A network cannot be deleted while Virtual Machines are still attached to it. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.",
                "tags": [
                    "/networks"
                ],
                "operationId": "delete/networks/{uuid}/deleteNetwork",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the network",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "Logical timestamp for synchronized delete",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a network.",
                "description": "Update a network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.",
                "tags": [
                    "/networks"
                ],
                "operationId": "put/networks/{uuid}/updateNetwork",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the network",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Updated network spec",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.NetworkConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/networks/{uuid}/addresses": {
            "get": {
                "summary": "Get IP addresses assigned in the specified managed network.",
                "description": "Get IP addresses assigned in the specified managed network.",
                "tags": [
                    "/networks"
                ],
                "operationId": "get/networks/{uuid}/addresses/getNetworkAddressTable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the network",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;"
                        }
                    }
                }
            }
        },
        "/networks/{uuid}/blacklist_ip/{ipaddress}": {
            "delete": {
                "summary": "Remove an IP address from the managed network blacklist.",
                "description": "Remove an IP address from the blacklist that prevents it from being used by the managed network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.",
                "tags": [
                    "/networks"
                ],
                "operationId": "delete/networks/{uuid}/blacklist_ip/{ipaddress}/unreserveIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the network",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ipaddress",
                        "in": "path",
                        "description": "IP address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/networks/{uuid}/blacklist_ip_addresses": {
            "post": {
                "summary": "Blacklist an IP address from managed network.",
                "description": "Blacklist an IP address from being used by a managed network. <br/><br/>A blacklisted IP address cannot be assigned to a VM network adapter. This property may be useful for avoiding conflicts between VMs and other hosts on the physical network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.",
                "tags": [
                    "/networks"
                ],
                "operationId": "post/networks/{uuid}/blacklist_ip_addresses/reserveIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the network",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "IP address to reserve",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains": {
            "post": {
                "summary": "Add a Protection Domain.",
                "description": "A protection domain to be used for Disaster Recovery and Backups.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/addProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Protection Domain instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Protection Domains.",
                "description": "Get the list of Protection Domains configured in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/getProtectionDomains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Protection Domain names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metro_avail",
                        "in": "query",
                        "description": "Metro Availability Protection Domain",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "vstore_name",
                        "in": "query",
                        "description": "vStore name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote_site_name",
                        "in": "query",
                        "description": "Remote Site name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote_site_to_forward",
                        "in": "query",
                        "description": "Remote Site to forward",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "description": "Include deleted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ProtectionDomainDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Protection Domain.",
               "description" : "Get the list of alerts generated on any Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/alerts/getProtectionDomainAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/consistency_groups": {
            "get": {
                "summary": "Get list of Consistency groups.",
                "description": "Get list of Consistency groups in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/consistency_groups/getConsistencyGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domains",
                        "in": "query",
                        "description": "Protection Domain names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consistency_groups",
                        "in": "query",
                        "description": "Consistency Group names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "description": "Include deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ConsistencyGroupDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/dr_snapshots": {
            "get": {
                "summary": "Get the list of Snapshots.",
                "description": "Get the list of Snapshots created in Protection Domains.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/dr_snapshots/getAllProtectionDomainSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of DR Snapshots to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "full_details",
                        "in": "query",
                        "description": "Whether to include consistency group / vm details",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/events": {
            "get": {
                "summary": "Get the list of events generated on any Protection Domain.",
               "description": "Get the list of events generated on any Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/events/getProtectionDomainEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/oob_schedules": {
            "get": {
                "summary": "Get the list of Out-Of-Band schedules in Protection Domains.",
                "description": "Get the list of Out-Of-Band schedules in Protection Domains  configured in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/oob_schedules/getOutOfBandSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Names of Protection Domains",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.OutOfBandSchedulePoliciesDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/pending_actions": {
            "get": {
                "summary": "Get list of pending actions.",
                "description": "Get list of pending actions in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/pending_actions/getPendingActions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Names of Protection Domains",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/pending_replications": {
            "get": {
                "summary": "Get list of pending replications.",
                "description": "Get list of pending replications in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/pending_replications/getProtectionDomainPendingReplications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Protection Domain names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remote_site_names",
                        "in": "query",
                        "description": "Remote Site names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PendingReplicationDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/replications": {
            "get": {
                "summary": "Get list of replications.",
                "description": "Get list of replications in the cluster.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/replications/getReplications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Protection Domain names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remote_site_names",
                        "in": "query",
                        "description": "Remote Site names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ReplicationDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/status": {
            "get": {
                "summary": "Get the Data Protection status for all Protection Domains.",
                "description": "Get the Data Protection status for all Protection Domains.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/status/getStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.dr.BackupAndDrStatus"
                        }
                    }
                }
            }
        },
        "/protection_domains/unprotected_vms": {
            "get": {
                "summary": "Get list of unprotected VMs in a cluster.",
                "description": "Get list of unprotected VMs in a cluster that can participate in Nutanix native Backup and DR.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/unprotected_vms/getUnprotectedVms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host_uuids",
                        "in": "query",
                        "description": "Host Uuids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vm_ids",
                        "in": "query",
                        "description": "VM IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vm_names",
                        "in": "query",
                        "description": "VM Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storage_container_names",
                        "in": "query",
                        "description": "Storage Container Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.stats.VMDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}": {
            "get": {
                "summary": "Get a Protection Domain.",
                "description": "Get a Protection Domain with the specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/getProtectionDomainByName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metro_avail",
                        "in": "query",
                        "description": "Whether to include only Metro Availability related protection domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "vstore_name",
                        "in": "query",
                        "description": "vStore name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote_site_name",
                        "in": "query",
                        "description": "Remote Site name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote_site_to_forward",
                        "in": "query",
                        "description": "Remote Site to forward",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Protection Domain.",
                "description": "Mark a Protection domain for removal. Protection domain will be removed from the cluster when all outstanding operations on it are cancelled.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{name}/markProtectionDomainForRemoval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "skip_remote_check",
                        "in": "query",
                        "description": "Skip checking remote Protection Domain",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/activate": {
            "post": {
                "summary": "Activate a protection domain",
                "description": "Activate a protection domain with the specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/activate/markProtectionDomainActive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Id of the snapshot",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/protection_domains/{name}/add_entities": {
            "post": {
                "summary": "Request to add entities to protection domain",
                "description": "Request to add entities to protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/add_entities/addEntitiesToProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.AddRemoveEntityRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Protection Domain.",
                  "description": "Get the list of alerts generated on a specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/alerts/getAlertsForProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/consistency_groups": {
            "get": {
                "summary": "Get list of Consistency groups in a Protection Domain.",
                "description": "Get list of Consistency groups in a specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/consistency_groups/getConsistencyGroupsInPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ConsistencyGroupDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/deactivate": {
            "post": {
                "summary": "Deactivate a protection domain.",
                "description": "Deactivate a protection domain. If you delete this protection domain after this, it will destroy all the VMs and VGs protected in this protection domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/deactivate/markProtectionDomainInactive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/dr_snapshots": {
            "get": {
                "summary": "Get the list of Snapshots in a Protection Domain.",
                "description": "Get the list of Snapshots created in a specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/dr_snapshots/getSnapshotsForPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of DR Snapshots to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "full_details",
                        "in": "query",
                        "description": "Whether to include consistency group / vm details",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "oob_schedule_ids",
                        "in": "query",
                        "description": "OOB Schedule Ids for filtering",
                        "required": false,
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/dr_snapshots/remove_list": {
            "post": {
                "summary": "Remove snapshot from the protection domain",
                "description": "Remove snapshot from the protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/dr_snapshots/remove_list/removeSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/dr_snapshots/retain_list": {
            "post": {
                 "summary": "Retain snapshot from the protection domain",
                "description": "Retain snapshot from the protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/dr_snapshots/retain_list/retainSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Protection Domain.",
                "description": "Get the list of events generated on a specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/events/getEventsForProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/migrate": {
            "post": {
                "summary": "Migrate an active Protection Domain to a DR site.",
                "description": "Mark the specified Protection domain as inactive and failover to the given Remote Site.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/migrate/migrateProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    },
                    {
                        "name": "skip_vm_mobility_check",
                        "in": "query",
                        "description": "Flag to specify whether mobility check has to be skipped",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.dr.VirtualMachine&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/min_snapshots": {
            "put": {
               "summary": "Update Minimum Snapshot for a protection domain",
                "description": "Update Minimum Snapshot for a protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{name}/min_snapshots/updateMinSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Integer&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/oob_schedules": {
            "post": {
                "summary": "Add a out of band snapshot schedule in a Protection Domain.",
                "description": "Add a out of band(i.e one time) snapshot schedule in a Protection Domain having specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/oob_schedules/addOutOfBandSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "A Out of band snapshot schedule instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.OutOfBandSchedulePoliciesDTO$Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.OutOfBandSchedulePoliciesDTO$Schedule"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "get": {
                "summary": "Get the list of Out-Of-Band schedules in a Protection Domain.",
                "description": "Get the list of Out-Of-Band schedules in a Protection Domain with the specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/oob_schedules/getOutOfBandSchedulesForPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.OutOfBandSchedulePoliciesDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/oob_schedules/remove_list": {
            "post": {
                "summary": "Remove Out-of-Band schedules in a Protection Domain.",
                "description": "Remove Out-Of-Band schedules in a Protection Domain with the specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/oob_schedules/remove_list/removeOutOfBandSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "List of aperioidic schedule's ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/oob_schedules/{schedule_id}": {
            "delete": {
                "summary": "Delete a Out-Of-Band schedule.",
                "description": "Delete a Out-Of-Band schedule having specified id.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{name}/oob_schedules/{schedule_id}/removeOutOfBandSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schedule_id",
                        "in": "path",
                        "description": "Id of the Out-Of-Band schedule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/pending_actions": {
            "get": {
                "summary": "Get list of pending actions in the Protection Domain.",
                "description": "Get list of pending actions in the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/pending_actions/getPendingActionsForPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/protection_domains/{name}/pending_replications": {
            "get": {
                "summary": "Get list of pending replications in the Protection Domain.",
                "description": "Get list of pending replications in the Protection Domain with the specified name.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/pending_replications/getPendingReplicationsInPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "remote_site_names",
                        "in": "query",
                        "description": "Names of Remote Sites",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PendingReplicationDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/protect_vms": {
            "post": {
                "summary": "Add Virtual Machines to a Protection Domain.",
                "description": "Add Virtual Machines to a Protection Domain to enable Backup and disaster recovery.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/protect_vms/addVmsByNamesToProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Add VMs request instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.AddVMsToPdRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/remove_entities": {
            "post": {
                "summary": "Remove entities from a Protection Domain.",
                "description": "Remove entities from a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/remove_entities/removeEntitiesFromProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.AddRemoveEntityRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/replications": {
            "get": {
                "summary": "Get list of replications in a Protection Domain.",
                "description": "Get list of replications in a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/replications/getReplicationsForPd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ReplicationDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/restore_entities": {
            "post": {
                "summary": "Rollback Virtual Machines and/or NFS files.",
                "description": "Rollback Virtual Machines and/or NFS files in a Protection Domain to a given Snapshot",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/restore_entities/restoreEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Restore request instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RestoreEntitiesRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RestoreEntitiesDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/protection_domains/{name}/rollback": {
            "post": {
                "summary": "Rollback an active Protection domain.",
                "description": "Rollback the specified active Protection domain to a given snapshot.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/rollback/rollbackProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Id of the snapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/schedules": {
            "post": {
                "summary": "Add a snapshot schedule to a Protection Domain.",
                "description": "Add a snapshot schedule to the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/schedules/addCronSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "A snapshot schedule instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Retrieve all snapshot schedules from a Protection Domain.",
                "description": "Retrieve all snapshot schedules from the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/schedules/getCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "timezone_offset",
                        "in": "query",
                        "description": "Timezone offset in seconds w.r.t GMT",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.CronScheduleDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/schedules/add_list": {
            "post": {
               "summary": "Add Cron Schedules for a Protection Domain.",
                "description": "Add Cron Schedules for a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/schedules/add_list/addCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                            }
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/schedules/remove_list": {
            "post": {
               "summary": "Remove Cron Schedules for a Protection Domain.",
                "description": "Remove Cron Schedules for a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/schedules/remove_list/removeCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/schedules/resume": {
            "put": {
             "summary": "Resume Cron schedules for a protection domain",
             "description": "Resume Cron schedules for a protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{name}/schedules/resume/resumeCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/schedules/suspend": {
            "put": {
              "summary":"Suspend Cron schedules for a protection domain",
              "description":"Suspend Cron schedules for a protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{name}/schedules/suspend/suspendCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/snapshots/{snapshot_id}/clone": {
            "post": {
                "summary": "Restore Virtual Machines and/or NFS files.",
                "description": "Restore Virtual Machines and/or NFS files in a Protection Domain to a given Snapshot",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/snapshots/{snapshot_id}/clone/restoreSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Snapshot Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "Restore request instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RestoreEntitiesRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.FileGroupDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/snapshots/{snapshot_id}/replicate": {
            "post": {
                "summary": "Replicate Snapshot.",
                "description": "Replicate the given snapshot in a Protection Domain to a given remote site",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/snapshots/{snapshot_id}/replicate/replicateSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Snapshot Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "Replicate request instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ReplicateSnapshotRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/sra_state": {
            "get": {
              "summary":"Get sra state of a Protection Domain.",
               "description": "Get sra state of a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/sra_state/getProtectionDomainState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            },
            "put": {
               "summary":"Update Protection Domain state with sra state",
               "description": "Update Protection Domain state with sra state",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{name}/sra_state/updateProtectionDomainState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/stats": {
            "get": {
                "summary": "Get the stats for a specified Protection Domain.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/stats/getProtectionDomainStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/track_oob_schedule/{id}": {
            "get": {
              "summary":"trackReplicationForOobSchedule",
               "description": "trackReplicationForOobSchedule",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "get/protection_domains/{name}/track_oob_schedule/{id}/trackReplicationForOobSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.ReplicationDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/unprotect_vms": {
            "post": {
                "summary": "Remove Virtual Machines from a Protection Domain.",
                "description": "Remove Virtual Machines from a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/unprotect_vms/removeVmsFromProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "List of VMs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{name}/validate_migrate": {
            "post": {
              "summary": "Validate Protection domain Migration.",
                "description": "Validate Protection domain Migration.",
               
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{name}/validate_migrate/validatePdMigration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "List of the names of the remote sites",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.dr.RemoteSiteRecoverabilityDTO&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/break_replication_timeout": {
            "put": {
                "summary": "Updates Metro Availability timeout for a specific protection domain.",
                "description": "Updates Metro Availability timeout for a specific protection domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{pd_name}/break_replication_timeout/updateStretchCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Metro Availability setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.ProtectionDomainDTO$Stretch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/consistency_groups/{cg_name}": {
            "put": {
                "summary": "Updates Consistency Group for a specific protection domain.",
                "description": "Updates Consistency Group for a specific protection domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{pd_name}/consistency_groups/{cg_name}/updateConsistencyGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cg_name",
                        "in": "path",
                        "description": "Name of the Consistency Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "Consistency group details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.ConsistencyGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.ConsistencyGroupDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/failure_handling": {
            "put": {
                "summary": "Change failure handling mode for a protection domain",
                "description": "Change failure handling mode for a protection domain",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{pd_name}/failure_handling/updateStretchFailureHandling",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Protection domain name and Failure handling mode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.FailureHandlingDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.ProtectionDomainDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/metro_avail_disable": {
            "post": {
                "summary": "Disables Metro Availability for a specific protection domain.",
                "description": "Disables Metro Availability for a specific protection domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{pd_name}/metro_avail_disable/stopStretchCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "skip_remote_check",
                        "in": "query",
                        "description": "Skip checking remote Protection Domain",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/metro_avail_enable": {
            "post": {
                "summary": "Enables Metro Availability for a specific protection domain.",
                "description": "Enables Metro Availability for a specific protection domain based on VStore and remote site.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{pd_name}/metro_avail_enable/startStretchCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "re_enable",
                        "in": "query",
                        "description": "Re-enable operation",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_remote_check",
                        "in": "query",
                        "description": "Skip checking remote Protection Domain",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "Skip checking remote container emptiness",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "arg4",
                        "in": "body",
                        "description": "VStore name and Remote site name",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO$Stretch"
                        }
                    },
                    {
                        "name": "skip_clones_check",
                        "in": "query",
                        "description": "Skip clones check",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/promote": {
            "post": {
                "summary": "Promotes to active Metro Availability role for a specific protection domain.",
                "description": "Promotes to active Metro Availability role for a specific protection domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{pd_name}/promote/promoteStretchCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "skip_remote_check",
                        "in": "query",
                        "description": "Skip checking remote Protection Domain",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "Force to perform the action",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/schedules": {
            "delete": {
                "summary": "Remove all snapshot schedules from a Protection Domain.",
                "description": "Remove all snapshot schedules from the specified ProtectionDomain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{pd_name}/schedules/clearCronSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/schedules/{id}": {
            "delete": {
                "summary": "Remove a snapshot schedule from a Protection Domain.",
                "description": "Remove a snapshot schedule from the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{pd_name}/schedules/{id}/removeCronSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the snapshot schedule",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Replace a snapshot schedule of a Protection Domain.",
                "description": "Replace a snapshot schedule of the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{pd_name}/schedules/{id}/replaceCronSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the snapshot schedule",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "A snapshot schedule instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.CronScheduleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.CronScheduleDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{pd_name}/schedules/{id}/retention_policies": {
            "post": {
                "summary": "Set retention policies of a snapshot schedule of a Protection Domain.",
                "description": "Set retention policies of specified snapshot schedule from the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{pd_name}/schedules/{id}/retention_policies/setRetentionPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the snapshot schedule",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "The retention policies instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RetentionPolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Clear retention policies of a snapshot schedule of a Protection Domain.",
                "description": "Clear retention policies of specified snapshot schedule from the specified Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{pd_name}/schedules/{id}/retention_policies/clearRetentionPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pd_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the snapshot schedule",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.dr.CronScheduleDTO"
                        }
                    }
                }
            }
        },
        "/protection_domains/{protection_domain_name}/dr_snapshots/{snapshot_id}": {
            "delete": {
                "summary": "Delete a snapshot.",
                "description": "Delete a snapshot of a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{protection_domain_name}/dr_snapshots/{snapshot_id}/removeSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Id of the snapshot",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{protection_domain_name}/dr_snapshots/{snapshot_id}/retain": {
            "post": {
                "summary": "Retain a snapshot.",
                "description": "Retain a snapshot of a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "post/protection_domains/{protection_domain_name}/dr_snapshots/{snapshot_id}/retain/modifySnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Id of the snapshot",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "Retention time in microseconds, If value is less thanthe current epoch time in microseconds, then it will delete this snapshot. To retain a snapshot forever give null or no value in the payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Long&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/protection_domains/{protection_domain_name}/replications/{id}": {
            "delete": {
                "summary": "Abort a replication.",
                "description": "Abort a replication in a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "delete/protection_domains/{protection_domain_name}/replications/{id}/abortReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the replication",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the state of the replication.",
                "description": "Update the state of the replication in a Protection Domain.",
                "tags": [
                    "/protection_domains"
                ],
                "operationId": "put/protection_domains/{protection_domain_name}/replications/{id}/updateReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_name",
                        "in": "path",
                        "description": "Name of the Protection Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the replication",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "One of pause, resume or abort",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites": {
            "patch": {
                "summary": "Modify a Remote Site.",
                "description": "Modify the configuration of the specified Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "patch/remote_sites/patchRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Remote Site instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.dr.RemoteSiteDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a Remote Site.",
                "description": "A remote cluster to be used as a DR site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/addRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Remote Site instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Remote Sites.",
                "description": "Get the list of Remote Sites configured in the cluster.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/getAllRemoteSites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Remote Site names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metro_compatible",
                        "in": "query",
                        "description": "Remote Site stretchable",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "full_details",
                        "in": "query",
                        "description": "Remote cluster detail",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "remoteVStores",
                        "in": "query",
                        "description": "Remote container to fetch",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "description": "Include deleted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.RemoteSiteDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a Remote Site.",
                "description": "Update the configuration of the specified Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "put/remote_sites/updateRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Remote Site instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.RemoteSiteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Remote Site.",
                "description": "Get the list of alerts generated on any Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/alerts/getRemoteSiteAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation."
                    }
                }
            }
        },
        "/remote_sites/dr_snapshots": {
            "get": {
                "summary": "Get the list of Snapshots.",
                "description": "Get the list of all Snapshots created in Remote Sites.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/dr_snapshots/getAllRemoteSiteSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of DR Snapshots to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "full_details",
                        "in": "query",
                        "description": "Whether to include consistency group / vm details",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/events": {
            "get": {
                "summary": "Get the list of events generated on any Remote Site.",
                "description": "Get the list of events generated on any Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/events/getRemoteSiteEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/networks": {
            "get": {
                 "summary": "Get network details for remote sites",
                "description": "Get network details for remote sites",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/networks/getNetworks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "remote_site",
                        "in": "query",
                        "description": "Name of the Cluster",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.network.NetworkInfoDTO&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/pending_replications": {
            "get": {
                "summary": "Get all pending replications.",
                "description": "Get the list of backlogged/pending replications in the cluster.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/pending_replications/getPendingReplications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Protection Domain Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remote_site_names",
                        "in": "query",
                        "description": "Remote Site Names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PendingReplicationDTO"
                            }
                        }
                    }
                }
            }
        },
        "/remote_sites/policies/{policy_uuid}": {
            "delete": {
              "summary": "Delete a particular policy for remote sites",
              "description": "Delete policy with a particular uuid for remote sites",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "delete/remote_sites/policies/{policy_uuid}/deleteBandwidthPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policy_uuid",
                        "in": "path",
                        "description": "Bandwidth policy Uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}": {
            "get": {
                "summary": "Get a Remote Site.",
                "description": "Get a Remote Site with the specified name.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/getRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Remote Site.",
                "description": "Delete a Remote Site with the specified name from the cluster.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "delete/remote_sites/{name}/markRemoteSiteForRemoval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/add_remote_ip": {
            "post": {
                "summary": "Add Remote IP for remote sites.",
                "description": "Add Remote IP for remote sites.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/add_remote_ip/addRemoteIp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Remote Site.",
                "description": "Get the list of alerts generated on a specified Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/alerts/getAlertsForRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation."
                    }
                }
            }
        },
        "/remote_sites/{name}/compression": {
            "post": {
               "summary": "Enable compression for remote sites.",
                "description": "Enable compression for remote sites.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/compression/enableCompression",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/connection_status": {
            "get": {
               "summary": "Get connection status for the remote sites",
                "description": "Get connection status for the remote sites",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/connection_status/testRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.dr.TestRemoteSiteConnectionResponseDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/dr_snapshots": {
            "get": {
                "summary": "Get the list of Snapshots.",
                "description": "Get the list of Snapshots created in a particular Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/dr_snapshots/getSnapshotsForRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of DR Snapshots to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "full_Details",
                        "in": "query",
                        "description": "Whether to include consistency group / vm details",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/dr_snapshots/download_snapshot": {
            "post": {
               "summary": "Download snapshot compression for remote sites.",
                "description": "Enable compression for remote sites.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/dr_snapshots/download_snapshot/downloadSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.DownloadDrSnapshotRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/dr_snapshots/remove_list": {
            "post": {
                "summary": "Remove snapshot  for remote sites.",
                "description": "Remove snapshot  for remote sites.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/dr_snapshots/remove_list/removeSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoveDrSnapshotRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Remote Site.",
                 "description": "Get the list of events generated on a specified Remote Site.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/events/getEventsForRemoteSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/map_vstore": {
            "post": {
                "summary": "Map vstore for a specified remote site",
                "description": "Map vstore for a specified remote site",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/map_vstore/mapVStores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/max_bandwidth": {
            "post": {
               "summary": "Set Maximum bandwidth for a specified remote site",
                "description": "Set Maximum bandwidth for a specified remote site",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/max_bandwidth/updateMaxBandwidth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Integer&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/pending_replications": {
            "get": {
                "summary": "Get all pending replications for the specified Remote Site.",
                "description": "Get the list of backlogged/pending replications for the specified Remote Site in the cluster.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/pending_replications/getPendingReplicationsInRemote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "protection_domain_names",
                        "in": "query",
                        "description": "Names of Protection Domains",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.dr.PendingReplicationDTO"
                            }
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/proxy": {
            "post": {
               "summary": "Enable proxy for a specified remote site",
               "description": "Enable proxy for a specified remote site",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/proxy/enableProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/remove_remote_ip": {
            "post": {
              
                  "summary": "Remove remote IP for a specified remote site",
                  "description": "Remove remote IP for a specified remote site",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/remove_remote_ip/removeRemoteIp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/stats": {
            "get": {
                "summary": "Get the stats for a specified Remote Site.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "get/remote_sites/{name}/stats/getRemoteSiteStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the Remote Site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/remote_sites/{name}/unmap_vstore": {
            "post": {
              "summary": "UnMap vStores for a specified remote site",
               "description": "UnMap vStores for a specified remote site",
                "tags": [
                    "/remote_sites"
                ],
                "operationId": "post/remote_sites/{name}/unmap_vstore/unmapVStores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO"
                        }
                    }
                }
            }
        },
        "/snapshots": {
            "post": {
                "summary": "Create Virtual Machine snapshots.",
                "description": "Create Virtual Machine snapshots. <br/><br/>If a UUID is specified for the snapshot, this operation will be idempotent. <br/><br/>If multiple VMs are specified, all of their configurations and disks will fall into the same consistency group. Since this operation requires the coordination of multiple resources, it should not be abused by specifying more than several VMs at a time. <br/><br/>Snapshots are crash-consistent. They do not include the VM's current memory image, only the VM configuration and its disk contents. The snapshot is taken atomically across all of a VM's configuration and disks to ensure consistency. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/snapshots"
                ],
                "operationId": "post/snapshots/createSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Create a snapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.SnapshotCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get a list of snapshots in a cluster.",
                "description": "Get a list of snapshots in a cluster.",
                "tags": [
                    "/snapshots"
                ],
                "operationId": "get/snapshots/getSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "query",
                        "description": "Uuid of the vm",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.SnapshotInfoDTO&gt;"
                        }
                    }
                }
            }
        },
        "/snapshots/{uuid}": {
            "get": {
                "summary": "Get details of a specified snapshot.",
                "description": "Get details of a specified snapshot.",
                "tags": [
                    "/snapshots"
                ],
                "operationId": "get/snapshots/{uuid}/getSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Snapshot",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.SnapshotInfoDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a snapshot.",
                "description": "Delete a snapshot. <br/><br/>This operation is idempotent. The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the snapshot logical timestamp. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/snapshots"
                ],
                "operationId": "delete/snapshots/{uuid}/deleteSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Snapshot",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "Logical timestamp",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/snapshots/{uuid}/clone": {
            "post": {
                "summary": "Clone a Snapshot.",
                "description": "Clone a Snapshot. <br/><br/>If a UUID is specified for the cloned snapshot, then the operation will be idempotent. <br/><br/>If overrideNetworkConfig is set to true in the clone spec, then the source snapshot's network configuration is overridden by one specified in the nic list. If false, the clone will inherit its basic network configuration from the source, minus MAC and IP address. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/snapshots"
                ],
                "operationId": "post/snapshots/{uuid}/clone/cloneSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Snapshot",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Clone a Snapshot",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.SnapshotCloneDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/snmp": {
            "get": {
                "summary": "Get SNMP configuration.",
                "description": "Get the complete SNMP configuration including Users, Transports and Traps configured in the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/getSnmpInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.SnmpInfoDTO"
                        }
                    }
                }
            }
        },
        "/snmp/add_transports": {
            "post": {
                "summary": "Add SNMP Transports.",
                "description": "Add SNMP Transports to the existing SNMP Transports.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "post/snmp/add_transports/addSnmpTransports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of SNMP Transports",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTransportDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTransportDTO"
                            }
                        }
                    }
                }
            }
        },
        "/snmp/remove_transports": {
            "post": {
                "summary": "Remove SNMP Transports.",
                "description": "Remove SNMP Transports from the existing SNMP Transports.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "post/snmp/remove_transports/deleteSnmpTransports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "List of SNMP Transports",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTransportDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTransportDTO"
                            }
                        }
                    }
                }
            }
        },
        "/snmp/status": {
            "get": {
                "summary": "Get the SNMP status.",
                "description": "Get the SNMP status.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/status/getSnmpStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Enable/Disable SNMP configuration.",
                "description": "Enable/Disable SNMP configuration in the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "put/snmp/status/setSnmpStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Enable SNMP Status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SnmpInfoDTO"
                        }
                    }
                }
            }
        },
        "/snmp/transports": {
            "get": {
                "summary": "Get the list of SNMP Transports.",
                "description": "Get the list of SNMP Transports configured in the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/transports/getSnmpTransports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.appliance.configuration.SnmpTransportDTO"
                            }
                        }
                    }
                }
            }
        },
        "/snmp/traps": {
            "patch": {
                "summary": "Modify SNMP Trap.",
                "description": "Modify the specified SNMP Trap.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "patch/snmp/traps/patchSnmpTrap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP Trap instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpTrapDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add SNMP Trap.",
                "description": "Add SNMP Trap to the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "post/snmp/traps/addSnmpTrap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP Trap instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of SNMP Traps.",
                "description": "Get the list of SNMP Traps configured in the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/traps/getSnmpTraps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpTrapDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Edit SNMP Trap.",
                "description": "Edit the specified SNMP Trap.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "put/snmp/traps/editSnmpTrap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP Trap instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                }
            }
        },
        "/snmp/traps/{trap_address}": {
            "get": {
                "summary": "Get SNMP Trap.",
                "description": "Get SNMP Trap with the specified address.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/traps/{trap_address}/getSnmpTrap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "trap_address",
                        "in": "path",
                        "description": "Address of the SNMP Trap",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.SnmpTrapDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete SNMP Trap.",
                "description": "Delete SNMP Trap with the specified address",
                "tags": [
                    "/snmp"
                ],
                "operationId": "delete/snmp/traps/{trap_address}/deleteSnmpTrap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "trap_address",
                        "in": "path",
                        "description": "Address of the SNMP Trap",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/snmp/users": {
            "patch": {
                "summary": "Modify SNMP User.",
                "description": "Modify the specified SNMP User.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "patch/snmp/users/patchSnmpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP User instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpUserDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add SNMP User.",
                "description": "Add SNMP User to the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "post/snmp/users/addSnmpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP User instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of SNMP Users.",
                "description": "Get the list of SNMP Users configured in the cluster.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/users/getSnmpUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpUserDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Edit SNMP User.",
                "description": "Edit the specified SNMP User.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "put/snmp/users/editSnmpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "An SNMP User instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                }
            }
        },
        "/snmp/users/{username}": {
            "get": {
                "summary": "Get SNMP User.",
                "description": "Get SNMP User with the specified name.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "get/snmp/users/{username}/getSnmpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Name of the SNMP User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.SnmpUserDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete SNMP User.",
                "description": "Delete SNMP User with the specified name.",
                "tags": [
                    "/snmp"
                ],
                "operationId": "delete/snmp/users/{username}/deleteSnmpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Name of the SNMP User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers": {
            "patch": {
                "summary": "Modify a Storage Container.",
                "description": "Modify the specified Storage Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "patch/storage_containers/patchContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Storage Container instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ContainerDTO&gt;"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a Storage Container.",
                "description": "Add a Storage Container to the cluster.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "post/storage_containers/addContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Storage Container instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.appliance.configuration.ContainerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the list of Storage Containers.",
                "description": "Get the list of Storage Containers configured in the cluster.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/getContainers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of Storage Containers to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_attribute_list",
                        "in": "query",
                        "description": "Search attribute list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.ContainerDTO&gt;"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a Storage Container.",
                "description": "Update the specified Storage Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "put/storage_containers/editContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "A Storage Container instance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.ContainerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on any Storage Container.",
                "description": "Get the list of alerts generated on any Storage Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/alerts/getContainerAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/datastores": {
            "get": {
                "summary": "Get the list of NFS Datastores.",
                "description": "Get the list of NFS Datastores mounted using Storage Containers in the cluster.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/datastores/getNfsDatastores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get.dto.esx.NfsDatastoreInfoDTO"
                            }
                        }
                    }
                }
            }
        },
        "/storage_containers/datastores/add_datastore": {
            "post": {
                "summary": "Add an NFS Datastore.",
                "description": "Add an NFS Datastore.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "post/storage_containers/datastores/add_datastore/createNfsDatastores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Add request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.esx.CreateNfsDatastoreRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.esx.CreateNfsDatastoreStatusDTO"
                        }
                    }
                }
            }
        },
        "/storage_containers/datastores/remove_datastore": {
            "post": {
                "summary": "Remove an NFS Datastore.",
                "description": "Remove an NFS Datastore.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "post/storage_containers/datastores/remove_datastore/deleteNfsDatastores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Remove request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.esx.DeleteNfsDatastoreRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.esx.DeleteNfsDatastoreStatusDTO"
                        }
                    }
                }
            }
        },
        "/storage_containers/events": {
            "get": {
                "summary": "Get the list of events generated on any Storage Container.",
                "description": "Get the list of events generated on any Storage Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/events/getContainerEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/{uuid}": {
            "get": {
                "summary": "Get a Storage Container.",
                "description": "Get a Storage Container with the specified uuid.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/{uuid}/getContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Storage Container",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.ContainerDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Storage Container.",
                "description": "Delete a Storage Container with the specified uuid from the cluster.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "delete/storage_containers/{uuid}/deleteContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Storage Container",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ignore_small_files",
                        "in": "query",
                        "description": "Ignore small file",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/{uuid}/alerts": {
            "get": {
                "summary": "Get the list of alerts generated on a specified Storage Container.",
                "description": "Get the list of alerts generated on a specified Storage Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/{uuid}/alerts/getAlertsForContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Storage Container",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of alerts",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "resolved",
                        "in": "query",
                        "description": "Alerts which have been resolved",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Alerts which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Alert severities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alert_type_uuid",
                        "in": "query",
                        "description": "Alert type ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/{uuid}/events": {
            "get": {
                "summary": "Get the list of events generated on a specified Container.",
                 "description": "Get the list of events generated on a specified Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/{uuid}/events/getEventsForContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Storage Container",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of events",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "acknowledged",
                        "in": "query",
                        "description": "Events which have been acknowledged",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                        }
                    }
                }
            }
        },
        "/storage_containers/{uuid}/stats": {
            "get": {
                "summary": "Get the stats for a specified Storage Container.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/{uuid}/stats/getContainerStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Storage Container",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    }
                }
            }
        },
        "/storage_containers/{uuid}/vdisks": {
            "get": {
                "summary": "Get the list of VDisks.",
                "description": "Get the list of VDisks of the specified Container.",
                "tags": [
                    "/storage_containers"
                ],
                "operationId": "get/storage_containers/{uuid}/vdisks/getVDisksInContainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of a Storage Container",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.VDiskDTO&gt;"
                        }
                    }
                }
            }
        },
        "/tasks/cancel": {
            "put": {
                "summary": "Cancel a task.",
                "description": "Cancel a running task.",
                "tags": [
                    "/tasks"
                ],
                "operationId": "put/tasks/cancel/cancelTasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "list of UUids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "include_subtasks_info",
                        "in": "query",
                        "description": "whether to include detailed information of the immediate subtasks, defaults to 'false'",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.base.EntityCollection&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/tasks/list": {
            "post": {
                "summary": "Get a list of tasks.",
                "description": "Get a list of generated tasks.",
                "tags": [
                    "/tasks"
                ],
                "operationId": "post/tasks/list/getTasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Request for fetching tasks",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.ergon.TaskRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.ergon.TaskDTO&gt;"
                        }
                    }
                }
            }
        },
        "/tasks/poll": {
            "post": {
                "summary": "Poll a task.",
                "description": "Poll a task to check if its ready.",
                "tags": [
                    "/tasks"
                ],
                "operationId": "post/tasks/poll/pollTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Task poll request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.ergon.TaskPollRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.ergon.TaskPollResponseDTO"
                        }
                    }
                }
            }
        },
        "/tasks/{uuid}": {
            "get": {
                "summary": "Get details of the specified task.",
                "description": "Get details of the specified task.",
                "tags": [
                    "/tasks"
                ],
                "operationId": "get/tasks/{uuid}/getTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the task",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_subtasks_info",
                        "in": "query",
                        "description": "Whether to include a detailed information of the immediate subtasks. Default value is false.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.ergon.TaskDTO"
                        }
                    }
                }
            }
        },
        "/upgrade/hypervisor_installer/softwares": {
            "post": {
                "summary": "Upgrade Hypervisor with a hypervisor installer",
               "description": "Upgrade Hypervisor with a hypervisor installer",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/hypervisor_installer/softwares/getHypervisorInstallers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "additionalProperties": {
                                    "$ref": "#/definitions/java.lang.Object"
                                },
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.upgrade.SoftwareDTO&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/validate_compatibility/{type}/{version}": {
            "get": {
               "summary": "Validate container details ",
                "description": "Validate container details ",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "get/upgrade/validate_compatibility/{type}/{version}/validateCompatibility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/configuration": {
            "get": {
              "summary": "Get upgrade configuration ",
                "description": "Get upgrade configuration",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "get/upgrade/{type}/configuration/getUpgradeConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.upgrade.UpgradeConfigurationDTO"
                        }
                    }
                }
            },
            "put": {
               "summary": "editUpgradeConfiguration ",
                "description": "editUpgradeConfiguration",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "put/upgrade/{type}/configuration/editUpgradeConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/update.dto.upgrade.UpgradeConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.upgrade.UpgradeConfigurationDTO"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/metadata": {
            "post": {
                "summary": "uploadMetadata ",
                "description": "uploadMetadata",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/metadata/uploadMetadata",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/java.io.InputStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares": {
            "get": {
                 "summary": "getSoftwares ",
                "description": "getSoftwares",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "get/upgrade/{type}/softwares/getSoftwares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "release_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.upgrade.SoftwareDTO&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/download": {
            "post": {
              
                "summary": "downloadSoftwareFromMetadata ",
                "description": "downloadSoftwareFromMetadata",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/softwares/download/downloadSoftwareFromMetadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.upgrade.SoftwareDTO"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/validate_upload": {
            "post": {
              "summary": "validateSoftwareMetadata ",
              "description": "validateSoftwareMetadata",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/softwares/validate_upload/validateSoftwareMetadata",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/java.io.InputStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/{name}": {
            "get": {
               "summary": "{name}/getSoftware ",
              "description": "{name}/getSoftware",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "get/upgrade/{type}/softwares/{name}/getSoftware",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.upgrade.SoftwareDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "/deleteSoftware ",
              "description": "/deleteSoftware",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "delete/upgrade/{type}/softwares/{name}/deleteSoftware",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/{name}/cancel_transfer": {
            "post": {
              "summary": "Cancel Software Transfer ",
              "description": "Cancel Software Transfer",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/softwares/{name}/cancel_transfer/cancelSoftwareTransfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.upgrade.SoftwareDTO"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/{name}/download": {
            "post": {
                "summary": "Download software for upgrading software version ",
                "description": "Download software for upgrading software version ",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/softwares/{name}/download/downloadSoftware",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.upgrade.SoftwareDTO"
                        }
                    }
                }
            }
        },
        "/upgrade/{type}/softwares/{name}/upload": {
            "post": {
               "summary": "Upload software for upgrading software version ",
                "description": "Upload software for upgrading software version ",
                "tags": [
                    "/upgrade"
                ],
                "operationId": "post/upgrade/{type}/softwares/{name}/upload/uploadSoftware",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/java.io.InputStream"
                        }
                    },
                    {
                        "name": "overwrite",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file_size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "md5sum",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "hypervisor_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "software_metadata",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.upgrade.SoftwareDTO"
                        }
                    }
                }
            }
        },
        "/vdisks": {
            "get": {
                "summary": "Get a list of vdisks in the cluster.",
                "description": "Get a list of vdisks in the cluster.",
                "tags": [
                    "/vdisks"
                ],
                "operationId": "get/vdisks/getVdisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "description": "Path of ndfs file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.NdfsFileDTO&gt;"
                        }
                    }
                }
            }
        },
        "/virtual_disks": {
            "get": {
                "summary": "Get the list of VirtualDisks.",
                "description": "Get the list of VirtualDisks configured in the cluster.",
                "tags": [
                    "/virtual_disks"
                ],
                "operationId": "get/virtual_disks/getVirtualDisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of VirtualDisks to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_criteria",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_string",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_attribute_list",
                        "in": "query",
                        "description": "Search attribute list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.appliance.configuration.VirtualDiskDTO&gt;"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            },
            "put": {
                "summary": "Update virtual Disk.",
                "description": "Update virtual Disk.",
                "tags": [
                    "/virtual_disks"
                ],
                "operationId": "put/virtual_disks/updateVirtualDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "DTO specifying different parameters for VirtualDisk along with flash mode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.VirtualDiskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.appliance.configuration.VirtualDiskDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/virtual_disks/{uuid}": {
            "get": {
                "summary": "Get VirtualDisk.",
                "description": "Get VirtualDisk with the specified Uuid.",
                "tags": [
                    "/virtual_disks"
                ],
                "operationId": "get/virtual_disks/{uuid}/getVirtualDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VirtualDisk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "description": "Projections on the attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.appliance.configuration.VirtualDiskDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/virtual_disks/{uuid}/stats": {
            "get": {
                "summary": "Get the stats for a specified VirtualDisk.",
                "description": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/virtual_disks"
                ],
                "operationId": "get/virtual_disks/{uuid}/stats/getVirtualDiskStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VirtualDisk",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_in_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_in_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/vms": {
            "post": {
                "summary": "Create a Virtual Machine.",
                "description": "Create a Virtual Machine with specified configuration. <br/><br/>If a UUID is specified for the Virtual Machine, this operation will be idempotent. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/createVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Create a Virtual Machine ",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.uhura.VmConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get a list of Virtual Machines.",
                "description": "Get a list of Virtual Machines. <br/><br/>Virtual Machine disk information and network information are not included by default as fetching these are expensive operations. These can be included by setting the include_vmdisk_config and include_vmnic_config flags respectively.",
                "tags": [
                    "/vms"
                ],
                "operationId": "get/vms/getVMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter criteria - semicolon for AND, comma for OR",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset - Default 0",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "Number of VMs to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_attribute",
                        "in": "query",
                        "description": "Sort Attribute",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_vm_disk_config",
                        "in": "query",
                        "description": "Whether to include Virtual Machine disk information.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_vm_nic_config",
                        "in": "query",
                        "description": "Whether to include network information.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.uhura.VmConfigDTO&gt;"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}": {
            "get": {
                "summary": "Get a list of Virtual Machines.",
                "description": "Get details of a specific Virtual Machines. <br/><br/>Virtual Machine disk information and network information are not included by default as fetching these are expensive operations. These can be included by setting the include_vmdisk_config and include_vmnic_config flags respectively.",
                "tags": [
                    "/vms"
                ],
                "operationId": "get/vms/{uuid}/getVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_vm_disk_config",
                        "in": "query",
                        "description": "Whether to include Virtual Machine disk information.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_vm_nic_config",
                        "in": "query",
                        "description": "Whether to include network information.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.uhura.VmConfigDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Virtual Machine.",
                "description": "Delete a Virtual Machine. <br/><br/>This is an idempotent operation. If the Virtual Machine is currently powered on, it will be forcefully powered off. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "delete/vms/{uuid}/deleteVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delete_snapshots",
                        "in": "query",
                        "description": "Delete Virtual Machine snapshots",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "The Virtual logical timestamp",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a Virtual Machine.",
                "description": "Update a Virtual Machine. <br/><br/>Field that are not set or are not specified are ignored. Note that some attributes may not be modifiable while the Virtual Machine is running. For instance, the KVM hypervisor does not support CPU or memory hot-plug. <br/><br/>The hwclockTimezone attribute specifies the VM's hardware clock timezone. Most operating systems assume the system clock is UTC, but some (like Windows) expect the local timezone. Changes to the clock timezone only take effect after a full Virtual Machine power cycle. <br/><br/>This API can be used to reclaim memory from guests using a balloon driver. It is not currently possible to return ballooned memory to a guest. The attempt to reclaim memory may fail if the balloon driver is not installed, or is unable to allocate the requested amount of memory from the guest OS. In this case, the Virtual Machine's memory reservation will be restored to its value from before the balloon attempt. <br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API. <br/><br/>The VM disks cannot be updated using this api. Please use v2.0 vms/uuid/disks/update API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "put/vms/{uuid}/updateVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Virtual Machine Update Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.uhura.VmConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/clone": {
            "post": {
                "summary": "Clone a Virtual Machine.",
                "description": "Clone a Virtual Machine from a snapshot or Virtual Machine.<br/><br/>If a UUID is specified for the cloned Virtual Machine, this operation will be idempotent. <br/><br/>If override_network_config is set to true in the clone spec, then the source Virtual Machine's network configuration is overridden by one specified in the nic list. If false, the clone will inherit its basic network configuration from the source, minus MAC and IP address. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/clone/cloneVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Clone a Virtual Machine ",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.VMCloneDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/disks/attach": {
            "post": {
                "summary": "Attach disks to Virtual Machine.",
                "description": "Attach disks to Virtual Machine.<br/><br/>A disk drive may either be a regular disk drive, or a CD-ROM drive. Only CD-ROM drives may be empty. <br/><br/>By default, regular disk drives are configured on the SCSI bus, and CD-ROM drives are configured on the IDE bus. The user may override this behavior with the deviceBus attribute. By default, a disk drive is placed on the first available bus slot. The user may override this behavior with the deviceIndex attribute. <br/><br/>Disks on the SCSI bus may optionally be configured for passthrough on platforms that support iSCSI. When in passthrough mode, SCSI commands are passed directly to NDFS via iSCSI. When SCSI passthrough is disabled, the hypervisor provides a SCSI emulation layer, and treats the underlying iSCSI target as a block device. By default, SCSI passthrough is enabled for SCSI devices on supported platforms. <br/><br/>If the disk image is cloned from an existing vmdisk or NFS file, the user may specify a minimum size for the resulting clone. This can be used to expand a disk image at clone time. <br/><br/>If the VM is running, the disk is hot-added to the VM. Note that certain buses, like IDE, are not hot-pluggable. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/disks/attach/attachVMDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Info about the virtual disks or CD-Roms to be attached",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.uhura.VMDiskAttachDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/disks/detach": {
            "post": {
                "summary": "Detach disks from Virtual Machine.",
                "description": "Detach disks from Virtual Machine.<br/><br/>A disk drive may either be a regular disk drive, or a CD-ROM drive. Only CD-ROM drives may be empty. <br/><br/>By default, regular disk drives are configured on the SCSI bus, and CD-ROM drives are configured on the IDE bus. The user may override this behavior with the deviceBus attribute. By default, a disk drive is placed on the first available bus slot. The user may override this behavior with the deviceIndex attribute. <br/><br/>Disks on the SCSI bus may optionally be configured for passthrough on platforms that support iSCSI. When in passthrough mode, SCSI commands are passed directly to NDFS via iSCSI. When SCSI passthrough is disabled, the hypervisor provides a SCSI emulation layer, and treats the underlying iSCSI target as a block device. By default, SCSI passthrough is enabled for SCSI devices on supported platforms. <br/><br/>If the disk image is cloned from an existing vmdisk or NFS file, the user may specify a minimum size for the resulting clone. This can be used to expand a disk image at clone time. <br/><br/>If the VM is running, the disk is hot-added to the VM. Note that certain buses, like IDE, are not hot-pluggable. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/disks/detach/detachVMDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Info about the virtual disks or CD-Roms to be detached",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.uhura.VMDiskDetachDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/disks/update": {
            "put": {
              "summary": "Update Disk for VMs",
              "description": "Update Disk for VMs.",
                "tags": [
                    "/vms"
                ],
                "operationId": "put/vms/{uuid}/disks/update/updateDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Update disk for VM",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.uhura.VmDiskUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/manage_vm_guest_tools": {
            "post": {
                "summary": "Mount and unmount guest tools on a given Virtual Machine.",
                "description": "Mount and unmount guest tools on a given Virtual Machine. <br/><br/>If override_guest is set to false and no empty CdRom is available on the guest VM, then the mount operation will fail. If override_guest is set to true then the mount operation succeeds by unmounting a non-empty CdRom.<br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.<br/><br/>This API works only for Esxi.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/manage_vm_guest_tools/manageGuestTool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "VM Guest Tools Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.uhura.VmGuestToolsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/nics": {
            "post": {
                "summary": "Add a NIC to a Virtual Machine.",
                "description": "Add a NIC to a Virtual Machine. <br/><br/> A VM NIC must be associated with a virtual network. It is not possible to change this association. To connect a VM to a different virtual network, it is necessary to create a new NIC. <br/><br/>If the virtual network is managed (see POST /networks/), the NIC must be assigned an IPv4 address at creation time. If the network has no DHCP pool, the user must specify the IPv4 address manually. <br/><br/>If the VM is running, the NIC is hot-added to the VM. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/nics/createNic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "NIC Config Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.VMNicCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get list of NICs in a Virtual Machine.",
                "description": "Get list of NICs in a Virtual Machine. <br/><br/>Address assignments are not included by default as fetching these is an expensive operation. Address assignments can be included by setting include_address_assignments to true.",
                "tags": [
                    "/vms"
                ],
                "operationId": "get/vms/{uuid}/nics/getNics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_address_assignments",
                        "in": "query",
                        "description": "Include address assignments",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.VMNicSpecDTO&gt;"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/nics/{nic_id}": {
            "put": {
                "summary": "Update a NIC for a Virtual Machine.",
                "description": "Update a NIC for a Virtual Machine. <br/><br/> A VM NIC must be associated with a MAC address. It is not possible to change this association as the MAC address acts as the NIC's identifier. <br/><br/>If the virtual network is managed (see POST /networks/), the IPv4 address of the NIC can be updated. <br/><br/>If the VM is running, the NIC is hot-added to the VM. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "put/vms/{uuid}/nics/{nic_id}/updateNic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "nic_id",
                        "in": "path",
                        "description": "Virtual Machine NIC identifier (MAC address)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg2",
                        "in": "body",
                        "description": "NIC Config Update Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.VMNicUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/restore": {
            "post": {
                "summary": "Restore a Virtual Machine to a snapshotted state.",
                "description": "Restore a Virtual Machine to a snapshotted state. <br/><br/>If the VM is currently running, it will be powered off. Since Virtual Machine snapshots do not include the Virtual Machine memory image, the Virtual Machine will remain powered off after the restore is complete. <br/><br/>A Virtual Machine snapshot may no longer be compatible with the current virtual network configuration. In this case, the user may choose not to restore the Virtual Machine's network adapters using the restoreNetworkConfig keyword argument. <br/><br/> This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/restore/restoreVM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Restore Virtual Machine ",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.VMRestoreDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{uuid}/set_power_state": {
            "post": {
                "summary": "Set power state of a Virtual Machine.",
                "description": "Set power state of a Virtual Machine. <br/><br/>If the Virtual Machine is being powered on and no host is specified, the scheduler will pick the one with the most available CPU and memory that can support the Virtual Machine. Note that no such host may not be available.<br/><br/> If the Virtual Machine is being power cycled, a different host can be specified to start it on. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "post/vms/{uuid}/set_power_state/setPowerState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Virtual Machine Power State Info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.uhura.VMPowerStateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/vms/{vm_uuid}/nics/{nic_id}": {
            "get": {
                "summary": "Details of a NIC in a Virtual Machine.",
                "description": "Details of a NIC in a Virtual Machine. <br/><br/>Address assignments are not included by default as fetching these is an expensive operation. Address assignments can be included by setting include_address_assignments to true.",
                "tags": [
                    "/vms"
                ],
                "operationId": "get/vms/{vm_uuid}/nics/{nic_id}/getNic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "Id of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "nic_id",
                        "in": "path",
                        "description": "Virtual Machine NIC identifier (MAC address)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_address_assignments",
                        "in": "query",
                        "description": "Include address assignments",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.VMNicSpecDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a NIC from a Virtual Machine.",
                "description": "Delete a NIC from a Virtual Machine. <br/><br/>If the VM is running, the NIC is hot-removed from the VM. If the NIC to be removed is specified as the boot device in the boot configuration, the boot device configuration will be cleared as a side effect of removing the NIC. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.",
                "tags": [
                    "/vms"
                ],
                "operationId": "delete/vms/{vm_uuid}/nics/{nic_id}/deleteNic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vm_uuid",
                        "in": "path",
                        "description": "UUID of the Virtual Machine",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "nic_id",
                        "in": "path",
                        "description": "Virtual Machine NIC identifier (MAC address)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm_logical_timestamp",
                        "in": "query",
                        "description": "Virtual Machine Logical timestamp",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups": {
            "post": {
                "summary": "Create a new Volume Group configuration",
                "description": "Create a new Volume Group configuration",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/createVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "arg0",
                        "in": "body",
                        "description": "Create a Volume Group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "get": {
                "summary": "Retrieve Volume Group configuration",
                 "description": "Retrieve Volume Group configuration",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "get/volume_groups/getVolumeGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include_disk_size",
                        "in": "query",
                        "description": "Whether to include disk sizes, true by default",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_disk_path",
                        "in": "query",
                        "description": "Whether to include disk paths, true by default",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.acropolis.volumegroups.VolumeGroupConfigDTO&gt;"
                        }
                    }
                }
            }
        },
        "/volume_groups/health_check_summary": {
            "get": {
                "summary": "Get the health check summary for the Volume Groups.",
                 "description": "Get the health check summary for the Volume Groups.",
                
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "get/volume_groups/health_check_summary/getHealthCheckSummaryForVolumeGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter_criteria",
                        "in": "query",
                        "description": "Filter criteria",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "detailed_summary",
                        "in": "query",
                        "description": "Detailed summary",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/volume_groups/{uuid}": {
            "get": {
                "summary": "Retrieve Volume Group configuration",
                "description": "Retrieve Volume Group configuration",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "get/volume_groups/{uuid}/getVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_disk_size",
                        "in": "query",
                        "description": "Whether to include disk sizes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_disk_path",
                        "in": "query",
                        "description": "Whether to include disk paths",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.acropolis.volumegroups.VolumeGroupConfigDTO"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove an existing Volume Group configuration",
                 "description": "Remove an existing Volume Group configuration",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "delete/volume_groups/{uuid}/removeVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "The logical timestamp",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Modify an existing Volume Group configuration",
                "description": "Modify an existing Volume Group configuration",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "put/volume_groups/{uuid}/updateVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Update Volume Group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeGroupUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeGroupConfigDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/attach": {
            "post": {
                "summary": "Attach Volume Group to Virtual Machine.",
                "description": "Attach Volume Group to Virtual Machine.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/attach/attachVirtualMachine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Virtual Machine attach configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/clone": {
            "post": {
                "summary": "Clone a new Volume Group",
                "description": "Clone a new Volume Group",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/clone/cloneVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the source Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Clone a Volume Group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupCloneDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/close": {
            "post": {
                "summary": "Close Volume Group for iSCSI initiators",
                "description": "Close Volume Group for iSCSI initiators",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/close/closeVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Volume Group detach configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/detach": {
            "post": {
                "summary": "Detach Volume Group to Virtual Machine.",
                "description": "Detach Volume Group to Virtual Machine.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/detach/detachVirtualMachine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Virtual Machine detach configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/disks": {
            "post": {
                "summary": "Create a Volume Disk",
                "description": "Creates a Volume Disk with specified configuration.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/disks/createVolumeDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Create a Volume Disk",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates a Volume Disk",
                "description": "Updates a Volume Disk with specified configuration.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "put/volume_groups/{uuid}/disks/updateVolumeDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Update a Volume Disk",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeDiskConfigDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/disks/{index}": {
            "delete": {
                "summary": "Delete a Volume Disk",
                "description": "Delete a Volume Disk with specified configuration.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "delete/volume_groups/{uuid}/disks/{index}/deleteVolumeDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Volume Group index of the disk",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "logical_timestamp",
                        "in": "query",
                        "description": "The logical timestamp",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/delete.dto.acropolis.ReturnValueDTO$TaskIdDTO"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/open": {
            "post": {
                "summary": "Open Volume Group for iSCSI initiators",
                "description": "Open Volume Group for iSCSI initiators",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "post/volume_groups/{uuid}/open/openVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Volume Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg1",
                        "in": "body",
                        "description": "Volume Group attach configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;"
                        }
                    }
                }
            }
        },
        "/volume_groups/{uuid}/stats": {
            "get": {
                "summary": "Get the stats for a specified VolumeGroup.",
                "description": "If start time and end time are included in the query string, <br/>then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                "tags": [
                    "/volume_groups"
                ],
                "operationId": "get/volume_groups/{uuid}/stats/getVolumeGroupStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VolumeGroup",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "description": "List of metrics",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time_usecs",
                        "in": "query",
                        "description": "Start time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "end_time_usecs",
                        "in": "query",
                        "description": "End time in microseconds",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "interval_in_secs",
                        "in": "query",
                        "description": "Sampling interval of stats",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.StatsResponse"
                        }
                    },
                    "500": {
                        "description": "Any internal exception while performing this operation"
                    }
                }
            }
        },
        "/vstores": {
            "get": {
                "summary": "Get the list of VStores.",
                "description": "Get the list of VStores configured in the cluster.",
                "tags": [
                    "/vstores"
                ],
                "operationId": "get/vstores/getVStores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuids",
                        "in": "query",
                        "description": "VStore uuids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "names",
                        "in": "query",
                        "description": "VStore names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "description": "Include deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.vstore.VStoreDTO&gt;"
                        }
                    }
                }
            }
        },
        "/vstores/{uuid}": {
            "get": {
                "summary": "Get a VStore.",
                "description": "Get a VStore with the specified uuid.",
                "tags": [
                    "/vstores"
                ],
                "operationId": "get/vstores/{uuid}/getVStoreByUuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VStore",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/get.dto.vstore.VStoreDTO"
                        }
                    }
                }
            }
        },
        "/vstores/{uuid}/protect": {
            "post": {
                "summary": "Protect a VStore.",
                "description": "Protect a VStore with the specified id.",
                "tags": [
                    "/vstores"
                ],
                "operationId": "post/vstores/{uuid}/protect/protectVStore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VStore",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm_level_consistency",
                        "in": "query",
                        "description": "Create vm level consistent snapshots for the vStore",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.vstore.VStoreDTO"
                        }
                    }
                }
            }
        },
        "/vstores/{uuid}/unprotect": {
            "post": {
                "summary": "Unprotect a VStore.",
                "description": "Unprotect a VStore with the specified id.",
                "tags": [
                    "/vstores"
                ],
                "operationId": "post/vstores/{uuid}/unprotect/unProtectVStore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VStore",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/create.dto.vstore.VStoreDTO"
                        }
                    }
                }
            }
        },
        "/vstores/{uuid}/update_protection_mode": {
            "put": {
                "summary": "Protect a VStore.",
                "description": "Protect a VStore with the specified uuid.",
                "tags": [
                    "/vstores"
                ],
                "operationId": "put/vstores/{uuid}/update_protection_mode/updateProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the VStore",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm_level_consistency",
                        "in": "query",
                        "description": "Create vm level consistent snapshots for the vStore",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/update.dto.vstore.VStoreDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "update.dto.acropolis.BootConfigDTO": {
            "type": "object",
            "properties": {
                "boot_device_order": {
                    "items": {
                        "enum": [
                            "CDROM",
                            "DISK",
                            "NIC"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "boot_device_type": {
                    "enum": [
                        "CDROM",
                        "DISK",
                        "NIC"
                    ],
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskAddressDTO"
                },
                "mac_addr": {
                    "type": "string"
                },
                "secure_boot": {
                    "type": "boolean"
                },
                "uefi_boot": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.VMNicSpecDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO": {
            "type": "object",
            "properties": {
                "node_specific_status": {
                    "items": {
                        "$ref": "#/definitions/create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO$NodeSpecificStatus"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.appliance.configuration.RackableUnitDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodes": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "positions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rackable_unit_uuid": {
                    "type": "string"
                },
                "serial": {
                    "type": "string"
                }
            }
        },
        "create.dto.upgrade.DescriptionItemDTO": {
            "type": "object",
            "properties": {
                "affected_releases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                },
                "severity_level": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.HttpProxyDTO": {
            "type": "object",
            "description": "http-proxy",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "proxy_types": {
                    "items": {
                        "enum": [
                            "HTTP",
                            "HTTPS",
                            "SOCKS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.dto.ergon.EntityIdDTO": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "NODE",
                        "VM",
                        "SNAPSHOT",
                        "DISK",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "PACKAGE",
                        "REMOTE_SITE",
                        "VOLUME_GROUP",
                        "IMAGE",
                        "CLUSTER",
                        "TAG",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "FILE_SERVER",
                        "FILE_SERVER_SHARE",
                        "VIRTUAL_NETWORK",
                        "VM_GROUP",
                        "LCM_ENTITY",
                        "MANAGEMENT_SERVER_INFO",
                        "REMOTE_CONNECTION",
                        "AFFINITY_INFO",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "SUPPORT_CASE_UPLOAD",
                        "CLOUD_TRUST",
                        "IDENTITY_PROVIDER",
                        "DUMMY_API",
                        "ABAC_ENTITY_PERMISSION",
                        "ABAC_ENTITY_ROLE",
                        "ABAC_ROLE",
                        "ABAC_CATEGORY",
                        "ABAC_USER_CAPABILITY",
                        "ABAC_ENTITY_CAPABILITY",
                        "PROJECT",
                        "TEMPLATE",
                        "WEBHOOK",
                        "CONTAINER",
                        "CONTAINER_CLUSTER",
                        "DOCKER_REGISTRY",
                        "NETWORK_FUNCTION_CHAIN",
                        "EXTENSION",
                        "RECOVERY_PLAN",
                        "CATALOG_ITEM",
                        "PROTECTION_RULE",
                        "AVAILABILITY_ZONE",
                        "RECOVERY_PLAN_JOB",
                        "ALTAS_VIRTUAL_NETWORK",
                        "FILE",
                        "ACCESS_REQUEST",
                        "JUMPBOX",
                        "SSH_USER",
                        "APP_BLUEPRINT",
                        "MARKETPLACE_ITEM",
                        "STREAMING_POLICY",
                        "DIRECTORY_SERVICE",
                        "SUBNET",
                        "AFFINITY_RULE",
                        "AGS_MANAGED_MACHINE",
                        "DIRECT_CONNECT",
                        "DIRECT_CONNECT_SP",
                        "DIRECT_CONNECT_VIF",
                        "PORT",
                        "DATACENTER",
                        "CELL",
                        "RACK",
                        "NETWORK_DEVICE",
                        "UNDERLAY_SUBNET",
                        "FLOATING_IP",
                        "NETWORK_SECURITY_RULE",
                        "DIRECT_CONNECT_PORT",
                        "CIDR",
                        "BLACKOUT",
                        "ACCESS_CONTROL_POLICY",
                        "APP",
                        "MICROSEG",
                        "ALERT",
                        "SECRET",
                        "FILE_SERVER_SHARE_SNAPSHOT",
                        "IAM_TENANT",
                        "IAM_SERVICE_ACCOUNT",
                        "IAM_SERVICE_PROVIDER",
                        "IAM_IDENTITY_PROVIDER",
                        "RECOVERY_POINT",
                        "VPN_GATEWAY",
                        "VPN_CONNECTION",
                        "ENTITY_SYNC_RULE",
                        "CLUSTER_VSWITCH",
                        "RACKABLE_UNIT",
                        "IAM_SERVICE_ACCOUNT_GROUP",
                        "QOS_POLICY",
                        "NGT_POLICY",
                        "ACTION_RULE",
                        "ACTION_TYPE",
                        "ACTION_TRIGGER_TYPE",
                        "ACTION_INSTANCE",
                        "ACTION_RULE_RESULT",
                        "ROUTING_POLICY",
                        "ID_CATEGORIZATION_MAPPING",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "OVA",
                        "CATALOG_PLACEMENT_POLICY",
                        "EXTERNAL_REPOSITORY",
                        "CLOUD_TENANT",
                        "DEDICATED_DOMAIN",
                        "VPC",
                        "ROUTING_POLICY_COLLECTION"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.dr.VirtualMachine": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group": {
                    "type": "string"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_files": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_handle": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_id": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                },
                "vm_power_state_on_recovery": {
                    "enum": [
                        "Powered Off",
                        "Powered On",
                        "Power state at time of snapshot"
                    ],
                    "type": "string"
                },
                "vm_recoverability": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.VmRecoverabilityDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.upgrade.SoftwareDTO": {
            "type": "object",
            "properties": {
                "compatible_fs_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_fsm_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_nos_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_pe_nos_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_platforms": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "current_size_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "full_release_version": {
                    "type": "string"
                },
                "gpg_signature": {
                    "type": "string"
                },
                "hypervisor_installer_string": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "is_lts": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "md5_sum": {
                    "type": "string"
                },
                "min_nos_version": {
                    "type": "string"
                },
                "min_pcversion": {
                    "type": "string"
                },
                "minimum_requirements_dto": {
                    "$ref": "#/definitions/get.dto.upgrade.MinimumRequirementsDTO"
                },
                "name": {
                    "type": "string"
                },
                "prism_central_sizes": {
                    "items": {
                        "$ref": "#/definitions/get.dto.prismcentral.PrismCentralSizeDTO"
                    },
                    "type": "array"
                },
                "qualified_date": {
                    "format": "int64",
                    "type": "integer"
                },
                "release_date": {
                    "format": "int64",
                    "type": "integer"
                },
                "release_note_url": {
                    "type": "string"
                },
                "software_type": {
                    "enum": [
                        "NOS",
                        "HYPERVISOR",
                        "HYPERVISOR_INSTALLER",
                        "HYPERVISOR_ISO",
                        "NCC",
                        "FILE_SERVER",
                        "FILES",
                        "FIRMWARE",
                        "FIRMWARE_DISK",
                        "FIRMWARE_NIC",
                        "FIRMWARE_BIOS",
                        "FIRMWARE_BMC",
                        "FIRMWARE_HBA",
                        "FOUNDATION",
                        "ACS",
                        "PRISM_CENTRAL_DEPLOY",
                        "PRISM_CENTRAL",
                        "FILE_ANALYTICS",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "AVAILABLE",
                        "QUEUED",
                        "INPROGRESS",
                        "PAUSED",
                        "COMPLETED",
                        "CORRUPTED",
                        "MD5SUMMISMATCH",
                        "FAILED"
                    ],
                    "type": "string"
                },
                "supported_models": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_size_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "transfer_type": {
                    "enum": [
                        "AUTOMATIC_DOWNLOAD",
                        "DOWNLOAD",
                        "UPLOAD"
                    ],
                    "type": "string"
                },
                "upgrade_notification": {
                    "$ref": "#/definitions/get.dto.upgrade.UpgradeNotificationDTO"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.RemoveDrSnapshotRequestDTO": {
            "type": "object",
            "properties": {
                "dr_snapshot_ids_map": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.uhura.VmConfigDTO": {
            "type": "object",
            "properties": {
                "allow_live_migrate": {
                    "type": "boolean"
                },
                "boot": {
                    "$ref": "#/definitions/get.dto.acropolis.BootConfigDTO"
                },
                "cbr_not_capable_reason": {
                    "type": "string"
                },
                "clear_affinity": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "gpus_assigned": {
                    "type": "boolean"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "guest_os": {
                    "type": "string"
                },
                "ha_priority": {
                    "format": "int64",
                    "type": "integer"
                },
                "host_uuid": {
                    "type": "string"
                },
                "machine_type": {
                    "enum": [
                        "PC",
                        "PSERIES",
                        "Q35"
                    ],
                    "type": "string"
                },
                "memory_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "memory_reservation_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_cores_per_vcpu": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int32",
                    "type": "integer"
                },
                "power_state": {
                    "enum": [
                        "UNKNOWN",
                        "OFF",
                        "POWERING_ON",
                        "ON",
                        "SHUTTING_DOWN",
                        "POWERING_OFF",
                        "PAUSING",
                        "PAUSED",
                        "SUSPENDING",
                        "SUSPENDED",
                        "RESUMING",
                        "RESETTING",
                        "MIGRATING"
                    ],
                    "type": "string"
                },
                "serial_ports": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.SerialPortConfigDTO"
                    },
                    "type": "array"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "tools_installer_mounted": {
                    "type": "boolean"
                },
                "tools_running_status": {
                    "enum": [
                        "UNKNOWN",
                        "GUEST_TOOLS_EXECUTING_SCRIPTS",
                        "GUEST_TOOLS_NOT_RUNNING",
                        "GUEST_TOOLS_RUNNING"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vcpu_reservation_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_customization_config": {
                    "$ref": "#/definitions/get.dto.acropolis.VMCustomizationConfigDTO"
                },
                "vm_disk_info": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.VmDiskInfoDTO"
                    },
                    "type": "array"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.VMDiskDTO"
                    },
                    "type": "array"
                },
                "vm_features": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "vm_gpus": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.GPUConfigDTO"
                    },
                    "type": "array"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_nics": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.ReplicationDTO": {
            "type": "object",
            "properties": {
                "aborted": {
                    "type": "boolean"
                },
                "completed_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "completed_percentage": {
                    "format": "float",
                    "type": "number"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "paused": {
                    "type": "boolean"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "replication_time_to_complete_secs": {
                    "format": "int64",
                    "type": "integer"
                },
                "sender": {
                    "type": "boolean"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "start_replication_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.base.Metadata": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "grand_total_entities": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previous_cursor": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "sort_criteria": {
                    "type": "string"
                },
                "start_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_entities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.authconfig.OpenLdapConfigDTO": {
            "type": "object",
            "description": "Open LDAP configuration",
            "properties": {
                "group_member_attribute": {
                    "type": "string"
                },
                "group_member_attribute_value": {
                    "type": "string"
                },
                "group_object_class": {
                    "type": "string"
                },
                "group_search_base": {
                    "type": "string"
                },
                "user_object_class": {
                    "type": "string"
                },
                "user_search_base": {
                    "type": "string"
                },
                "username_attribute": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.VmDiskCloneExternalDTO": {
            "type": "object",
            "properties": {
                "external_disk_url": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.EntityMetadata": {
            "type": "object",
            "properties": {
                "additional_fields": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_hint_field": {
                    "type": "string"
                },
                "context_hint_value": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.acropolis.ReturnValueDTO$TaskIdDTO": {
            "type": "object",
            "properties": {
                "task_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.DownloadDrSnapshotRequestDTO": {
            "type": "object",
            "properties": {
                "dr_snapshot_id": {
                    "type": "string"
                },
                "pd_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.upgrade.SoftwareDTO": {
            "type": "object",
            "properties": {
                "compatible_fs_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_fsm_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_nos_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_pe_nos_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_platforms": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compatible_versions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "current_size_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "full_release_version": {
                    "type": "string"
                },
                "gpg_signature": {
                    "type": "string"
                },
                "hypervisor_installer_string": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "is_lts": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "md5_sum": {
                    "type": "string"
                },
                "min_nos_version": {
                    "type": "string"
                },
                "min_pcversion": {
                    "type": "string"
                },
                "minimum_requirements_dto": {
                    "$ref": "#/definitions/create.dto.upgrade.MinimumRequirementsDTO"
                },
                "name": {
                    "type": "string"
                },
                "prism_central_sizes": {
                    "items": {
                        "$ref": "#/definitions/create.dto.prismcentral.PrismCentralSizeDTO"
                    },
                    "type": "array"
                },
                "qualified_date": {
                    "format": "int64",
                    "type": "integer"
                },
                "release_date": {
                    "format": "int64",
                    "type": "integer"
                },
                "release_note_url": {
                    "type": "string"
                },
                "software_type": {
                    "enum": [
                        "NOS",
                        "HYPERVISOR",
                        "HYPERVISOR_INSTALLER",
                        "HYPERVISOR_ISO",
                        "NCC",
                        "FILE_SERVER",
                        "FILES",
                        "FIRMWARE",
                        "FIRMWARE_DISK",
                        "FIRMWARE_NIC",
                        "FIRMWARE_BIOS",
                        "FIRMWARE_BMC",
                        "FIRMWARE_HBA",
                        "FOUNDATION",
                        "ACS",
                        "PRISM_CENTRAL_DEPLOY",
                        "PRISM_CENTRAL",
                        "FILE_ANALYTICS",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "NONE",
                        "AVAILABLE",
                        "QUEUED",
                        "INPROGRESS",
                        "PAUSED",
                        "COMPLETED",
                        "CORRUPTED",
                        "MD5SUMMISMATCH",
                        "FAILED"
                    ],
                    "type": "string"
                },
                "supported_models": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_size_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "transfer_type": {
                    "enum": [
                        "AUTOMATIC_DOWNLOAD",
                        "DOWNLOAD",
                        "UPLOAD"
                    ],
                    "type": "string"
                },
                "upgrade_notification": {
                    "$ref": "#/definitions/create.dto.upgrade.UpgradeNotificationDTO"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.KeyManagementServerDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "ip_address_port_map": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.PrimitiveDTO&lt;java.lang.String&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.tasks.MetaRequestDTO": {
            "type": "object",
            "properties": {
                "method_name": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.AddressAssignmentDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.authconfig.CaChainDTO": {
            "type": "object",
            "properties": {
                "ca_chain": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "enable_client_auth": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeGroupUpdateDTO": {
            "type": "object",
            "properties": {
                "attached_clients": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.IscsiClientDTO"
                    },
                    "type": "array"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_shared": {
                    "type": "boolean"
                },
                "iscsi_initiator_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iscsi_target": {
                    "type": "string"
                },
                "iscsi_target_prefix": {
                    "type": "string"
                },
                "load_balance_vm_attachments": {
                    "type": "boolean"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.RemoteSiteDTO$VStoreInfo": {
            "type": "object",
            "properties": {
                "is_protected": {
                    "type": "boolean"
                },
                "is_stretch_empty": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "metro_pd": {
                    "type": "string"
                },
                "used_physical_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "type": "object",
            "properties": {
                "bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "days_selected": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_uuid": {
                    "type": "string"
                },
                "start_time": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO$IscsiConfig": {
            "type": "object",
            "properties": {
                "external_client_enabled": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "checks_in_error": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckErrorsDTO"
                    },
                    "type": "object"
                },
                "detailed_check_summary": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "type": "object"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "health_summary": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.dr.AzureCredentialDTO": {
            "type": "object",
            "properties": {
                "secure_file_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                }
            }
        },
        "create.base.Metadata": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "grand_total_entities": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previous_cursor": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "sort_criteria": {
                    "type": "string"
                },
                "start_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_entities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "update.dto.acropolis.HaUpdateDTO": {
            "type": "object",
            "properties": {
                "enable_failover": {
                    "type": "boolean"
                },
                "evacuation_option": {
                    "enum": [
                        "POWER_OFF",
                        "COLD_MIGRATE",
                        "LIVE_MIGRATE"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_host_failures_to_tolerate": {
                    "format": "int64",
                    "type": "integer"
                },
                "reservation_type": {
                    "enum": [
                        "RESERVE_HOSTS",
                        "RESERVE_SEGMENTS",
                        "NO_RESERVATIONS"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.encryption.KMSStatusPerIpAddressDTO": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "port": {
                    "format": "int64",
                    "type": "integer"
                },
                "test_status": {
                    "type": "string"
                }
            }
        },
        "get.dto.authconfig.AuthConfigDTO": {
            "type": "object",
            "description": "auth-config",
            "properties": {
                "auth_type_list": {
                    "items": {
                        "enum": [
                            "LOCAL",
                            "DIRECTORY_SERVICE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "directory_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.authconfig.DirectoryConfigDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO": {
            "type": "object",
            "properties": {
                "clone": {
                    "$ref": "#/definitions/update.dto.uhura.VmDiskCloneDTO"
                },
                "clone_spec": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskSpecCloneDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "upgrade_spec": {
                    "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO$UpgradeSpec"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO": {
            "type": "object",
            "description": "health-check",
            "properties": {
                "affected_entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "alert_config_exception_groups": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup"
                    },
                    "type": "array"
                },
                "alert_configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "alert_type_id": {
                    "type": "string"
                },
                "applicable_for_multi_cluster": {
                    "type": "boolean"
                },
                "applicable_for_single_cluster": {
                    "type": "boolean"
                },
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "causes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_type": {
                    "enum": [
                        "SCHEDULED",
                        "NOT_SCHEDULED",
                        "EVENT_DRIVEN"
                    ],
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exception_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_global_config": {
                    "type": "boolean"
                },
                "is_user_defined": {
                    "type": "boolean"
                },
                "kb_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                },
                "metrics": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO"
                    },
                    "type": "array"
                },
                "modified_by_username": {
                    "type": "string"
                },
                "modified_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO"
                    },
                    "type": "object"
                },
                "policy_uuid": {
                    "type": "string"
                },
                "resolutions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedule_interval_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                },
                "sub_category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.vstore.VStoreDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.vstore.VStoreDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.dr.BandwidthPolicyDTO": {
            "type": "object",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "properties": {
                "bandwidth_configurations": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array"
                },
                "default_bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy_name": {
                    "type": "string"
                },
                "policy_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.AlertConfigDTO": {
            "type": "object",
            "description": "DTO representing the configuration of alerts",
            "properties": {
                "default_nutanix_email": {
                    "type": "string"
                },
                "email_config_rules": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule"
                    },
                    "type": "array"
                },
                "email_contact_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "email_template": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.AlertConfigDTO$EmailTemplate"
                },
                "enable": {
                    "type": "boolean"
                },
                "enable_default_nutanix_email": {
                    "type": "boolean"
                },
                "enable_email_digest": {
                    "type": "boolean"
                },
                "skip_empty_alert_email_digest": {
                    "type": "boolean"
                },
                "smtp_server": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.SmtpServerDTO"
                },
                "tunnel_details": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.RemoteTunnelDetailsDTO"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.authconfig.DirectoryConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.authconfig.DirectoryConfigDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.volumegroups.VolumeGroupConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.VolumeGroupConfigDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "type": "object",
            "properties": {
                "bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "days_selected": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_uuid": {
                    "type": "string"
                },
                "start_time": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.alerts.AlertPolicyDTO$TriggerCondition": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "severity_level": {
                    "enum": [
                        "CRITICAL",
                        "WARNING",
                        "INFO",
                        "AUDIT"
                    ],
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.CloudCvmImageDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.authconfig.ClientAuthDTO": {
            "type": "object",
            "properties": {
                "auto_login_info": {
                    "$ref": "#/definitions/get.dto.authconfig.AutoLoginInfoDTO"
                },
                "ca_chain_info": {
                    "$ref": "#/definitions/get.dto.authconfig.CaChainDTO"
                },
                "cert_revocation_info": {
                    "$ref": "#/definitions/get.dto.authconfig.CertRevocationInfoDTO"
                }
            }
        },
        "patch.dto.appliance.configuration.SnmpTrapDTO": {
            "type": "object",
            "properties": {
                "community_string": {
                    "type": "string"
                },
                "engine_id": {
                    "type": "string"
                },
                "inform": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "receiver_name": {
                    "type": "string"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                },
                "trap_address": {
                    "type": "string"
                },
                "trap_username": {
                    "type": "string"
                },
                "version": {
                    "enum": [
                        "SNMPv2C",
                        "SNMPv3"
                    ],
                    "type": "string"
                }
            }
        },
        "get.base.StatsResponse": {
            "type": "object",
            "properties": {
                "stats_specific_responses": {
                    "items": {
                        "$ref": "#/definitions/get.base.StatsResponse$StatsSpecificResponse"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.hyperv.MultiNodeConfigurationOperationResponseDTO$NodeSpecificStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "reboot_initiated": {
                    "type": "boolean"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.appliance.configuration.DiskDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "cvm_ip_address": {
                    "type": "string"
                },
                "data_migrated": {
                    "type": "boolean"
                },
                "disk_hardware_config": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.DiskHardwareConfigDTO"
                },
                "disk_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "disk_status": {
                    "enum": [
                        "NORMAL",
                        "DATA_MIGRATION_INITIATED",
                        "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE",
                        "DETACHABLE"
                    ],
                    "type": "string"
                },
                "disk_uuid": {
                    "type": "string"
                },
                "dynamic_ring_changing_node": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "host_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_node_uuid": {
                    "type": "string"
                },
                "last_service_vmid": {
                    "type": "string"
                },
                "location": {
                    "format": "int32",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "mount_path": {
                    "type": "string"
                },
                "node_name": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "online": {
                    "type": "boolean"
                },
                "password_protected": {
                    "type": "boolean"
                },
                "self_encrypting_drive": {
                    "type": "boolean"
                },
                "service_vmid": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "storage_tier_name": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.health.check.ErrorInfoDTO": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertDTO": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledged_by_username": {
                    "type": "string"
                },
                "acknowledged_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "affected_entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertDTO$AffectedEntity"
                    },
                    "type": "array"
                },
                "alert_details": {
                    "$ref": "#/definitions/create.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alert_title": {
                    "type": "string"
                },
                "alert_type_uuid": {
                    "type": "string"
                },
                "auto_resolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_id": {
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "context_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "created_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailed_message": {
                    "type": "string"
                },
                "entity_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_occurrence_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "operation_type": {
                    "type": "string"
                },
                "originating_cluster_uuid": {
                    "type": "string"
                },
                "possible_causes": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolved_by_username": {
                    "type": "string"
                },
                "resolved_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "service_vmid": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "user_defined": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.acropolis.FileToInjectDTO": {
            "type": "object",
            "properties": {
                "destination_path": {
                    "type": "string"
                },
                "source_path": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertCauseDTO": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "string"
                },
                "additional_links": {
                    "type": "string"
                },
                "alert_namespace": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "chart_queries": {
                    "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;"
                },
                "details": {
                    "type": "string"
                },
                "has_global_details": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "num_resolved_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "parent_cause_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "troubleshooting_steps": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertSummaryDTO": {
            "type": "object",
            "properties": {
                "alert_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;"
                    },
                    "type": "object"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.hyperv.DomainDescriptorDTO": {
            "type": "object",
            "properties": {
                "domain_name": {
                    "type": "string"
                },
                "name_prefix": {
                    "type": "string"
                },
                "name_server": {
                    "type": "string"
                },
                "ou_path": {
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ClusterDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.dto.ergon.MetaResponseDTO": {
            "type": "object",
            "properties": {
                "error_code": {
                    "format": "int32",
                    "type": "integer"
                },
                "error_detail": {
                    "type": "string"
                }
            }
        },
        "create.dto.EntityMetadata": {
            "type": "object",
            "properties": {
                "additional_fields": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_hint_field": {
                    "type": "string"
                },
                "context_hint_value": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.dr.ProtectionDomainDTO$Stretch": {
            "type": "object",
            "properties": {
                "container": {
                    "type": "string"
                },
                "failure_handling": {
                    "enum": [
                        "NONE",
                        "AUTOMATIC",
                        "MANUAL",
                        "WITNESS",
                        "PENDING"
                    ],
                    "type": "string"
                },
                "per_vm_consistency": {
                    "type": "boolean"
                },
                "remote_site": {
                    "type": "string"
                },
                "role": {
                    "enum": [
                        "ACTIVE",
                        "STANDBY",
                        "DEACTIVATED"
                    ],
                    "type": "string"
                },
                "skip_clones_check": {
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        "ENABLE_METRO_AVAIL_IN_PROGRESS",
                        "DISABLE_METRO_AVAIL_IN_PROGRESS",
                        "PROMOTE_METRO_AVAIL_IN_PROGRESS",
                        "DEMOTE_METRO_AVAIL_IN_PROGRESS",
                        "REMOTE_UNREACHABLE",
                        "DECOUPLED",
                        "SYNCHRONIZING",
                        "ENABLED",
                        "DISABLED",
                        "SYNC_INCOMPLETE",
                        "PENDING",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "storage_container": {
                    "type": "string"
                },
                "timeout": {
                    "format": "int64",
                    "maximum": 30,
                    "minimum": 10,
                    "type": "integer"
                }
            }
        },
        "get.dto.ResultMetadata$Filter": {
            "type": "object",
            "properties": {
                "display_for_rhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "update.base.Metadata": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "grand_total_entities": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previous_cursor": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "sort_criteria": {
                    "type": "string"
                },
                "start_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_entities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.PdPendingActionsDTO$PendingEntityRestore": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "path_prefix": {
                    "type": "string"
                },
                "replace_entity": {
                    "type": "boolean"
                },
                "snapshot_id": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertDTO$AffectedEntity": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_type_display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.BackupAndDrStatus": {
            "type": "object",
            "properties": {
                "active_replications": {
                    "type": "boolean"
                },
                "pd_suspended_schedules_map": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            }
        },
        "create.base.ErrorInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "update.dto.hyperv.CredentialDTO": {
            "type": "object",
            "properties": {
                "logon_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "patch.base.ErrorInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.VMNicSpecDTO": {
            "type": "object",
            "properties": {
                "adapter_type": {
                    "enum": [
                        "E1000",
                        "E1000e",
                        "PCNet32",
                        "Vmxnet",
                        "Vmxnet2",
                        "Vmxnet3",
                        "Unsupported"
                    ],
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_connected": {
                    "type": "boolean"
                },
                "mac_address": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "network_uuid": {
                    "type": "string"
                },
                "nic_uuid": {
                    "type": "string"
                },
                "port_id": {
                    "type": "string"
                },
                "request_ip": {
                    "type": "boolean"
                },
                "requested_ip_address": {
                    "type": "string"
                },
                "vlan_mode": {
                    "enum": [
                        "Access",
                        "Trunked",
                        "Untagged"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.AlertConfigDTO$EmailTemplate": {
            "type": "object",
            "properties": {
                "body_suffix": {
                    "type": "string"
                },
                "subject_prefix": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.ImageImportSpecDTO": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "checksum_type": {
                    "enum": [
                        "SHA_256",
                        "SHA_1"
                    ],
                    "type": "string"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_name": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertPolicyDTO$TriggerCondition": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "severity_level": {
                    "enum": [
                        "CRITICAL",
                        "WARNING",
                        "INFO",
                        "AUDIT"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.HttpProxyDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.HttpProxyDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.SerialPortConfigDTO": {
            "type": "object",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "NULL",
                        "SERVER"
                    ],
                    "type": "string"
                }
            }
        },
        "get.base.Metadata": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "grand_total_entities": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previous_cursor": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "sort_criteria": {
                    "type": "string"
                },
                "start_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_entities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "patch.dto.EntityMetadata": {
            "type": "object",
            "properties": {
                "additional_fields": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_hint_field": {
                    "type": "string"
                },
                "context_hint_value": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "update.dto.dr.BandwidthPolicyDTO": {
            "type": "object",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "properties": {
                "bandwidth_configurations": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array"
                },
                "default_bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy_name": {
                    "type": "string"
                },
                "policy_uuid": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.SnapshotDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.SnapshotCreateDTO": {
            "type": "object",
            "properties": {
                "snapshot_specs": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.SnapshotSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.appliance.configuration.KeyManagementServerDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "ip_address_port_map": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.VMNicSpecDTO": {
            "type": "object",
            "properties": {
                "adapter_type": {
                    "enum": [
                        "E1000",
                        "E1000e",
                        "PCNet32",
                        "Vmxnet",
                        "Vmxnet2",
                        "Vmxnet3",
                        "Unsupported"
                    ],
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_connected": {
                    "type": "boolean"
                },
                "mac_address": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "network_uuid": {
                    "type": "string"
                },
                "nic_uuid": {
                    "type": "string"
                },
                "port_id": {
                    "type": "string"
                },
                "request_ip": {
                    "type": "boolean"
                },
                "requested_ip_address": {
                    "type": "string"
                },
                "vlan_mode": {
                    "enum": [
                        "Access",
                        "Trunked",
                        "Untagged"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.dr.WitnessSiteDTO": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "cluster_timestamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "nos_full_version": {
                    "type": "string"
                },
                "nos_version": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "witness_name": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.AddressAssignmentDTO": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "network_uuid": {
                    "type": "string"
                },
                "overlay_network_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "VM",
                        "RESERVATION",
                        "INFRASTRUCTURE"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "type": "object",
            "properties": {
                "bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "days_selected": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_uuid": {
                    "type": "string"
                },
                "start_time": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule": {
            "type": "object",
            "properties": {
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_global_email_contact_list": {
                    "type": "boolean"
                },
                "match_phrases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.base.CommunicationStatusDTO": {
            "type": "object",
            "properties": {
                "last_changed_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_checked_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_transmission_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/patch.dto.base.ParameterizedMessageDTO"
                },
                "status": {
                    "enum": [
                        "SUCCESS",
                        "FAILED",
                        "RETRYING",
                        "UNKNOWN",
                        "DISABLED"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.base.EntityCollection&lt;patch.dto.ResultContentDescriptor&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/patch.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/patch.base.Metadata"
                }
            }
        },
        "create.dto.appliance.configuration.NodeDTO": {
            "type": "object",
            "properties": {
                "acropolis_connection_state": {
                    "type": "string"
                },
                "alert_summary": {
                    "$ref": "#/definitions/create.dto.alerts.AlertSummaryDTO"
                },
                "backplane_ip": {
                    "type": "string"
                },
                "bios_model": {
                    "type": "string"
                },
                "bios_version": {
                    "type": "string"
                },
                "block_location": {
                    "type": "string"
                },
                "block_model": {
                    "type": "string"
                },
                "block_model_name": {
                    "type": "string"
                },
                "block_serial": {
                    "type": "string"
                },
                "bmc_model": {
                    "type": "string"
                },
                "bmc_version": {
                    "type": "string"
                },
                "boot_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "controller_vm_backplane_ip": {
                    "type": "string"
                },
                "cpu_capacity_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_frequency_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_model": {
                    "type": "string"
                },
                "default_vhd_container_id": {
                    "type": "string"
                },
                "default_vhd_container_uuid": {
                    "type": "string"
                },
                "default_vhd_location": {
                    "type": "string"
                },
                "default_vhd_storage_container_id": {
                    "type": "string"
                },
                "default_vhd_storage_container_uuid": {
                    "type": "string"
                },
                "default_vm_container_id": {
                    "type": "string"
                },
                "default_vm_container_uuid": {
                    "type": "string"
                },
                "default_vm_location": {
                    "type": "string"
                },
                "default_vm_storage_container_id": {
                    "type": "string"
                },
                "default_vm_storage_container_uuid": {
                    "type": "string"
                },
                "disk_hardware_configs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.appliance.configuration.DiskHardwareConfigDTO"
                    },
                    "type": "object"
                },
                "dynamic_ring_changing_node": {
                    "$ref": "#/definitions/create.dto.appliance.configuration.NodeDTO"
                },
                "failover_cluster_fqdn": {
                    "type": "string"
                },
                "failover_cluster_node_state": {
                    "type": "string"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_csr": {
                    "type": "boolean"
                },
                "hba_firmwares_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.appliance.configuration.NodeDTO$HbaFirmware"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/create.dto.health.check.HealthSummaryDTO"
                },
                "host_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_in_maintenance_mode": {
                    "type": "boolean"
                },
                "host_maintenance_mode_reason": {
                    "type": "string"
                },
                "host_nic_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_type": {
                    "enum": [
                        "HYPER_CONVERGED",
                        "COMPUTE_ONLY"
                    ],
                    "type": "string"
                },
                "hypervisor_address": {
                    "type": "string"
                },
                "hypervisor_full_name": {
                    "type": "string"
                },
                "hypervisor_key": {
                    "type": "string"
                },
                "hypervisor_password": {
                    "type": "string"
                },
                "hypervisor_state": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "hypervisor_username": {
                    "type": "string"
                },
                "ipmi_address": {
                    "type": "string"
                },
                "ipmi_password": {
                    "type": "string"
                },
                "ipmi_username": {
                    "type": "string"
                },
                "is_degraded": {
                    "type": "boolean"
                },
                "is_secure_booted": {
                    "type": "boolean"
                },
                "key_management_device_to_certificate_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "management_server_name": {
                    "type": "string"
                },
                "memory_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata_store_status": {
                    "type": "string"
                },
                "metadata_store_status_message": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "num_cpu_cores": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_sockets": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_threads": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vms": {
                    "format": "int64",
                    "type": "integer"
                },
                "oplog_disk_pct": {
                    "format": "float",
                    "type": "number"
                },
                "oplog_disk_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "position": {
                    "$ref": "#/definitions/create.dto.appliance.configuration.NodePositionDTO"
                },
                "rdma_backplane_ips": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reboot_pending": {
                    "type": "boolean"
                },
                "removal_status": {
                    "items": {
                        "enum": [
                            "NA",
                            "AWAITING_CONFIG_DATA_MIGRATION",
                            "AWAITING_DATA_MIGRATION",
                            "AWAITING_HOST_EVACUATION",
                            "AWAITING_CLUSTER_RESTART",
                            "AWAITING_MASTER_KEY_MIGRATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "serial": {
                    "type": "string"
                },
                "service_vmexternal_ip": {
                    "type": "string"
                },
                "service_vmid": {
                    "type": "string"
                },
                "service_vmnat_ip": {
                    "type": "string"
                },
                "service_vmnat_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "enum": [
                        "NEW",
                        "NORMAL",
                        "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE",
                        "DETACHABLE"
                    ],
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vzone_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.vstore.VStoreDTO": {
            "type": "object",
            "description": "vStore",
            "properties": {
                "backedup": {
                    "type": "boolean"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "is_backup": {
                    "type": "boolean"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protection_domain": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_level_consistent": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.acropolis.IpConfigDTO$IpPool": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.SyncReplicationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "patch.dto.alerts.AlertDTO$MetricDetails": {
            "type": "object",
            "properties": {
                "comparison_operator": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "data_type": {
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "metric_category": {
                    "type": "string"
                },
                "metric_display_name": {
                    "type": "string"
                },
                "metric_name": {
                    "type": "string"
                },
                "metric_value_details": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "type": "array"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "create.dto.ergon.MetaResponseDTO": {
            "type": "object",
            "properties": {
                "error_code": {
                    "format": "int32",
                    "type": "integer"
                },
                "error_detail": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeAttachmentDTO": {
            "type": "object",
            "properties": {
                "client_uuid": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "initiator_ip_address": {
                    "type": "string"
                },
                "iscsi_initiator_name": {
                    "type": "string"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.VMCreateDTO": {
            "type": "object",
            "properties": {
                "boot_config": {
                    "$ref": "#/definitions/get.dto.acropolis.BootConfigDTO"
                },
                "container_uuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ha_priority": {
                    "format": "int64",
                    "type": "integer"
                },
                "host_id": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "enum": [
                        "ACROPOLIS",
                        "NULL",
                        "AHV",
                        "HYPERV",
                        "VMWARE",
                        "XEN",
                        "ESX",
                        "KVM"
                    ],
                    "type": "string"
                },
                "memory_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "memory_reservation_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_cores_per_vcpu": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int64",
                    "type": "integer"
                },
                "timezone": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vcpu_reservation_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_customization_config": {
                    "$ref": "#/definitions/get.dto.acropolis.VMCustomizationConfigDTO"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.VMDiskDTO"
                    },
                    "type": "array"
                },
                "vm_gpus": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.GPUConfigDTO"
                    },
                    "type": "array"
                },
                "vm_nics": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "type": "object",
            "properties": {
                "bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "days_selected": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_uuid": {
                    "type": "string"
                },
                "start_time": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.appliance.configuration.SmtpServerDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email_status": {
                    "$ref": "#/definitions/patch.dto.base.CommunicationStatusDTO"
                },
                "from_email_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "secure_mode": {
                    "enum": [
                        "STARTTLS",
                        "SSL",
                        "NONE"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.uhura.HostGPUDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.HostGPUDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.dr.ProtectionDomainCreateDTO": {
            "type": "object",
            "properties": {
                "annotations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule": {
            "type": "object",
            "properties": {
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_global_email_contact_list": {
                    "type": "boolean"
                },
                "match_phrases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.authconfig.CaChainDTO": {
            "type": "object",
            "properties": {
                "ca_chain": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "enable_client_auth": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudRegion&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.CloudRegion"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.dr.BandwidthPolicyDTO": {
            "type": "object",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "properties": {
                "bandwidth_configurations": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array"
                },
                "default_bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy_name": {
                    "type": "string"
                },
                "policy_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule": {
            "type": "object",
            "properties": {
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_global_email_contact_list": {
                    "type": "boolean"
                },
                "match_phrases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.uhura.VmDiskCloneDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_group_uuid": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.comment.CommentRequestDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "reference_entity_type": {
                    "type": "string"
                },
                "reference_entity_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.ResultContentDescriptor$Perspective": {
            "type": "object",
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/create.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.ReplicateSnapshotRequestDTO": {
            "type": "object",
            "properties": {
                "remote_expiration_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "remote_site_name": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.ContainerDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.ContainerDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.dr.ProtectionDomainDTO$Stretch": {
            "type": "object",
            "properties": {
                "container": {
                    "type": "string"
                },
                "failure_handling": {
                    "enum": [
                        "NONE",
                        "AUTOMATIC",
                        "MANUAL",
                        "WITNESS",
                        "PENDING"
                    ],
                    "type": "string"
                },
                "per_vm_consistency": {
                    "type": "boolean"
                },
                "remote_site": {
                    "type": "string"
                },
                "role": {
                    "enum": [
                        "ACTIVE",
                        "STANDBY",
                        "DEACTIVATED"
                    ],
                    "type": "string"
                },
                "skip_clones_check": {
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        "ENABLE_METRO_AVAIL_IN_PROGRESS",
                        "DISABLE_METRO_AVAIL_IN_PROGRESS",
                        "PROMOTE_METRO_AVAIL_IN_PROGRESS",
                        "DEMOTE_METRO_AVAIL_IN_PROGRESS",
                        "REMOTE_UNREACHABLE",
                        "DECOUPLED",
                        "SYNCHRONIZING",
                        "ENABLED",
                        "DISABLED",
                        "SYNC_INCOMPLETE",
                        "PENDING",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "storage_container": {
                    "type": "string"
                },
                "timeout": {
                    "format": "int64",
                    "maximum": 30,
                    "minimum": 10,
                    "type": "integer"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertPolicyDTO$TriggerCondition": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "severity_level": {
                    "enum": [
                        "CRITICAL",
                        "WARNING",
                        "INFO",
                        "AUDIT"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.ManagementServerInfoDTO": {
            "type": "object",
            "properties": {
                "drs_enabled": {
                    "type": "boolean"
                },
                "drs_vm_behaviour": {
                    "enum": [
                        "UNKNOWN",
                        "FULL_ENABLED",
                        "ONLY_PLACEMENT_ENABLED",
                        "MANUAL"
                    ],
                    "type": "string"
                },
                "ha_enabled": {
                    "type": "boolean"
                },
                "in_use": {
                    "type": "boolean"
                },
                "ip_address": {
                    "type": "string"
                },
                "management_server_type": {
                    "enum": [
                        "VCENTER"
                    ],
                    "type": "string"
                },
                "registered": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.uhura.VirtualGPUProfileDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.VirtualGPUProfileDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.alerts.AlertDTO": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledged_by_username": {
                    "type": "string"
                },
                "acknowledged_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "affected_entities": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertDTO$AffectedEntity"
                    },
                    "type": "array"
                },
                "alert_details": {
                    "$ref": "#/definitions/patch.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alert_title": {
                    "type": "string"
                },
                "alert_type_uuid": {
                    "type": "string"
                },
                "auto_resolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_id": {
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "context_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "created_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailed_message": {
                    "type": "string"
                },
                "entity_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_occurrence_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "operation_type": {
                    "type": "string"
                },
                "originating_cluster_uuid": {
                    "type": "string"
                },
                "possible_causes": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolved_by_username": {
                    "type": "string"
                },
                "resolved_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "service_vmid": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "user_defined": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.dr.FailureHandlingDTO": {
            "type": "object",
            "properties": {
                "failure_handling_mode": {
                    "enum": [
                        "NONE",
                        "AUTOMATIC",
                        "MANUAL",
                        "WITNESS",
                        "PENDING"
                    ],
                    "type": "string"
                },
                "local_only": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.dr.VolumeGroup": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nfs_file_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.CloudCvmDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.appliance.configuration.SnmpUserDTO": {
            "type": "object",
            "properties": {
                "auth_key": {
                    "type": "string"
                },
                "auth_type": {
                    "enum": [
                        "SHA"
                    ],
                    "type": "string"
                },
                "priv_key": {
                    "type": "string"
                },
                "priv_type": {
                    "enum": [
                        "AES"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.ErrorInfoDTO": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO$AlertConfigParamDTO": {
            "type": "object",
            "description": "DTO representing the configurable parameters for an alert type",
            "properties": {
                "parameter_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_default_string_value": {
                    "type": "string"
                },
                "parameter_display_name": {
                    "type": "string"
                },
                "parameter_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_name": {
                    "type": "string"
                },
                "parameter_string_value": {
                    "type": "string"
                },
                "parameter_unit": {
                    "type": "string"
                },
                "parameter_valid_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "get.dto.esx.NfsDatastoreInfoDTO": {
            "type": "object",
            "properties": {
                "capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_id": {
                    "type": "string"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "datastore_name": {
                    "type": "string"
                },
                "free_space": {
                    "format": "int64",
                    "type": "integer"
                },
                "host_id": {
                    "type": "string"
                },
                "host_ip_address": {
                    "type": "string"
                },
                "host_uuid": {
                    "type": "string"
                },
                "storage_container_id": {
                    "type": "string"
                },
                "storage_container_name": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "vm_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.authconfig.ServiceAccountDTO": {
            "type": "object",
            "properties": {
                "directory_config_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.dto.ergon.TaskDTO": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "complete_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "create_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.ergon.EntityIdDTO"
                    },
                    "type": "array"
                },
                "last_updated_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "meta_request": {
                    "$ref": "#/definitions/get.dto.acropolis.tasks.MetaRequestDTO"
                },
                "meta_response": {
                    "$ref": "#/definitions/get.dto.ergon.MetaResponseDTO"
                },
                "operation_type": {
                    "type": "string"
                },
                "parent_task_uuid": {
                    "type": "string"
                },
                "percentage_complete": {
                    "format": "int32",
                    "type": "integer"
                },
                "progress_status": {
                    "enum": [
                        "QUEUED",
                        "RUNNING",
                        "SUCCEEDED",
                        "ABORTED",
                        "SUSPENDED",
                        "FAILED",
                        "NONE"
                    ],
                    "type": "string"
                },
                "start_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "subtask_info_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.ergon.TaskDTO"
                    },
                    "type": "array"
                },
                "subtask_uuid_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "valid_values_range": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertSummaryDTO": {
            "type": "object",
            "properties": {
                "alert_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;"
                    },
                    "type": "object"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.ErrorDetails": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "error_code": {
                    "format": "int32",
                    "type": "integer"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.RemoteTunnelDetailsDTO": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "$ref": "#/definitions/patch.dto.base.CommunicationStatusDTO"
                },
                "http_proxy": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.HttpProxyDTO"
                },
                "service_center": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ServiceCenterDTO"
                },
                "transport_status": {
                    "$ref": "#/definitions/patch.dto.base.CommunicationStatusDTO"
                }
            }
        },
        "create.dto.hyperv.ConfigureHypervNodeRequestDTO$DefaultVmVhdLocationDTO": {
            "type": "object",
            "properties": {
                "container_for_vhd_files": {
                    "type": "string"
                },
                "container_for_vm_config_files": {
                    "type": "string"
                },
                "node_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.SnapshotDTO$MissingEntityDTO": {
            "type": "object",
            "properties": {
                "cg_name": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.WitnessSiteDTO": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "cluster_timestamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "nos_full_version": {
                    "type": "string"
                },
                "nos_version": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "witness_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.VirtualDiskDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "attached_vm_id": {
                    "type": "string"
                },
                "attached_vm_uuid": {
                    "type": "string"
                },
                "attached_vmname": {
                    "type": "string"
                },
                "attached_volume_group_id": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "data_source_url": {
                    "type": "string"
                },
                "device_uuid": {
                    "type": "string"
                },
                "disk_address": {
                    "type": "string"
                },
                "disk_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "nutanix_nfsfile_path": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_id": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "virtual_disk_id": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.FileGroupDTO": {
            "type": "object",
            "properties": {
                "error_details": {
                    "$ref": "#/definitions/create.dto.ErrorDetails"
                },
                "file_clone_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_group_uuid": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "snapshot_uuid": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "NOT_STARTED",
                        "IN_PROGRESS",
                        "COMPLETED"
                    ],
                    "type": "string"
                },
                "task_uuid": {
                    "type": "string"
                },
                "v_store_path_prefixes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.uhura.VmDiskInfoDTO": {
            "type": "object",
            "properties": {
                "data_source_url": {
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_hot_remove_enabled": {
                    "type": "boolean"
                },
                "is_scsi_passthrough": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "source_disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreRequestDTO": {
            "type": "object",
            "properties": {
                "container_name": {
                    "type": "string"
                },
                "datastore_name": {
                    "type": "string"
                },
                "node_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "read_only": {
                    "type": "boolean"
                },
                "storage_container_name": {
                    "type": "string"
                },
                "target_path": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.FileToInjectDTO": {
            "type": "object",
            "properties": {
                "destination_path": {
                    "type": "string"
                },
                "source_path": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.DiskHardwareConfigDTO": {
            "type": "object",
            "properties": {
                "background_operation": {
                    "type": "string"
                },
                "bad": {
                    "type": "boolean"
                },
                "boot_disk": {
                    "type": "boolean"
                },
                "can_add_as_new_disk": {
                    "type": "boolean"
                },
                "can_add_as_old_disk": {
                    "type": "boolean"
                },
                "current_firmware_version": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "disk_uuid": {
                    "type": "string"
                },
                "location": {
                    "format": "int32",
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "mount_path": {
                    "type": "string"
                },
                "mounted": {
                    "type": "boolean"
                },
                "only_boot_disk": {
                    "type": "boolean"
                },
                "serial_number": {
                    "type": "string"
                },
                "target_firmware_version": {
                    "type": "string"
                },
                "under_diagnosis": {
                    "type": "boolean"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.VmDiskInfoDTO": {
            "type": "object",
            "properties": {
                "data_source_url": {
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_hot_remove_enabled": {
                    "type": "boolean"
                },
                "is_scsi_passthrough": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "source_disk_address": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskAddressDTO"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthSummaryDTO": {
            "type": "object",
            "properties": {
                "entity_type_summaries": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "health_check_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckSummaryDTO"
                    },
                    "type": "object"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.dr.L2NetworkMappingDTO": {
            "type": "object",
            "properties": {
                "dest_hypervisor_type": {
                    "type": "string"
                },
                "dest_network_name": {
                    "type": "string"
                },
                "src_hypervisor_type": {
                    "type": "string"
                },
                "src_network_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.NodeDTO": {
            "type": "object",
            "properties": {
                "acropolis_connection_state": {
                    "type": "string"
                },
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "backplane_ip": {
                    "type": "string"
                },
                "bios_model": {
                    "type": "string"
                },
                "bios_version": {
                    "type": "string"
                },
                "block_location": {
                    "type": "string"
                },
                "block_model": {
                    "type": "string"
                },
                "block_model_name": {
                    "type": "string"
                },
                "block_serial": {
                    "type": "string"
                },
                "bmc_model": {
                    "type": "string"
                },
                "bmc_version": {
                    "type": "string"
                },
                "boot_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "controller_vm_backplane_ip": {
                    "type": "string"
                },
                "cpu_capacity_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_frequency_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_model": {
                    "type": "string"
                },
                "default_vhd_container_id": {
                    "type": "string"
                },
                "default_vhd_container_uuid": {
                    "type": "string"
                },
                "default_vhd_location": {
                    "type": "string"
                },
                "default_vhd_storage_container_id": {
                    "type": "string"
                },
                "default_vhd_storage_container_uuid": {
                    "type": "string"
                },
                "default_vm_container_id": {
                    "type": "string"
                },
                "default_vm_container_uuid": {
                    "type": "string"
                },
                "default_vm_location": {
                    "type": "string"
                },
                "default_vm_storage_container_id": {
                    "type": "string"
                },
                "default_vm_storage_container_uuid": {
                    "type": "string"
                },
                "disk_hardware_configs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.DiskHardwareConfigDTO"
                    },
                    "type": "object"
                },
                "dynamic_ring_changing_node": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.NodeDTO"
                },
                "failover_cluster_fqdn": {
                    "type": "string"
                },
                "failover_cluster_node_state": {
                    "type": "string"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_csr": {
                    "type": "boolean"
                },
                "hba_firmwares_list": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.NodeDTO$HbaFirmware"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "host_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_in_maintenance_mode": {
                    "type": "boolean"
                },
                "host_maintenance_mode_reason": {
                    "type": "string"
                },
                "host_nic_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_type": {
                    "enum": [
                        "HYPER_CONVERGED",
                        "COMPUTE_ONLY"
                    ],
                    "type": "string"
                },
                "hypervisor_address": {
                    "type": "string"
                },
                "hypervisor_full_name": {
                    "type": "string"
                },
                "hypervisor_key": {
                    "type": "string"
                },
                "hypervisor_password": {
                    "type": "string"
                },
                "hypervisor_state": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "hypervisor_username": {
                    "type": "string"
                },
                "ipmi_address": {
                    "type": "string"
                },
                "ipmi_password": {
                    "type": "string"
                },
                "ipmi_username": {
                    "type": "string"
                },
                "is_degraded": {
                    "type": "boolean"
                },
                "is_secure_booted": {
                    "type": "boolean"
                },
                "key_management_device_to_certificate_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "management_server_name": {
                    "type": "string"
                },
                "memory_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata_store_status": {
                    "type": "string"
                },
                "metadata_store_status_message": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "num_cpu_cores": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_sockets": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_threads": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vms": {
                    "format": "int64",
                    "type": "integer"
                },
                "oplog_disk_pct": {
                    "format": "float",
                    "type": "number"
                },
                "oplog_disk_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "position": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.NodePositionDTO"
                },
                "rdma_backplane_ips": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reboot_pending": {
                    "type": "boolean"
                },
                "removal_status": {
                    "items": {
                        "enum": [
                            "NA",
                            "AWAITING_CONFIG_DATA_MIGRATION",
                            "AWAITING_DATA_MIGRATION",
                            "AWAITING_HOST_EVACUATION",
                            "AWAITING_CLUSTER_RESTART",
                            "AWAITING_MASTER_KEY_MIGRATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "serial": {
                    "type": "string"
                },
                "service_vmexternal_ip": {
                    "type": "string"
                },
                "service_vmid": {
                    "type": "string"
                },
                "service_vmnat_ip": {
                    "type": "string"
                },
                "service_vmnat_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "enum": [
                        "NEW",
                        "NORMAL",
                        "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE",
                        "DETACHABLE"
                    ],
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vzone_name": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.dr.RemoteSiteDTO": {
            "type": "object",
            "description": "remote-site",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "bandwidth_policy": {
                    "$ref": "#/definitions/update.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_type": {
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_type": {
                    "items": {
                        "enum": [
                            "LIGHT_COMPUTE",
                            "SINGLE_NODE_BACKUP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "credential_name": {
                    "type": "string"
                },
                "cvm_name": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "latency_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metro_ready": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_mapping": {
                    "$ref": "#/definitions/update.dto.dr.NetworkMappingDTO"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "remote_dr_external_subnet": {
                    "type": "string"
                },
                "remote_ip_ports": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_vstore_info": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.dto.dr.RemoteSiteDTO$VStoreInfo"
                    },
                    "type": "object"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "ssh_enabled": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vstore_name_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.appliance.configuration.NodePositionDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ordinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "physical_position": {
                    "enum": [
                        "C",
                        "L",
                        "R",
                        "TL",
                        "TR",
                        "BL",
                        "BR"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.RemoteSupportConfigDTO": {
            "type": "object",
            "properties": {
                "enable": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.TimedBoolDTO"
                },
                "tunnel_details": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.RemoteTunnelDetailsDTO"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreStatusDTO": {
            "type": "object",
            "properties": {
                "node_specific_status": {
                    "items": {
                        "$ref": "#/definitions/create.dto.esx.DeleteNfsDatastoreStatusDTO$NodeSpecificDeleteStatus"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.dr.VolumeGroup": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nfs_file_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.CloudRegion": {
            "type": "object",
            "properties": {
                "region_code": {
                    "type": "string"
                },
                "region_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "get.dto.hyperv.CredentialDTO": {
            "type": "object",
            "properties": {
                "logon_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "create.dto.authconfig.DirectoryConfigDTO": {
            "type": "object",
            "description": "directory-config",
            "properties": {
                "connection_type": {
                    "enum": [
                        "LDAP"
                    ],
                    "type": "string"
                },
                "directory_type": {
                    "enum": [
                        "ACTIVE_DIRECTORY",
                        "OPEN_LDAP"
                    ],
                    "type": "string"
                },
                "directory_url": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "group_search_type": {
                    "enum": [
                        "RECURSIVE",
                        "NON_RECURSIVE"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_ldap_config": {
                    "$ref": "#/definitions/create.dto.authconfig.OpenLdapConfigDTO"
                },
                "service_account_password": {
                    "type": "string"
                },
                "service_account_username": {
                    "type": "string"
                }
            }
        },
        "update.dto.ResultMetadata$Filter": {
            "type": "object",
            "properties": {
                "display_for_rhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.tasks.MetaRequestDTO": {
            "type": "object",
            "properties": {
                "method_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.NetworkConfigDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "ip_config": {
                    "$ref": "#/definitions/update.dto.acropolis.IpConfigDTO"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "enum": [
                        "EXTERNAL",
                        "INTERNAL"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vlan_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "vswitch_name": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterRedundancyStateDTO": {
            "type": "object",
            "properties": {
                "current_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "desired_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "redundancy_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.dr.VirtualMachine&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "get.dto.appliance.configuration.VDiskDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "creation_time_in_micros_since_epoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "erasure_code": {
                    "type": "string"
                },
                "erasure_code_delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "immutable": {
                    "type": "boolean"
                },
                "iscsi_lun": {
                    "format": "int32",
                    "type": "integer"
                },
                "iscsi_target_name": {
                    "type": "string"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_capacity_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfs_file": {
                    "type": "boolean"
                },
                "nfs_file_name": {
                    "type": "string"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "parent_nfs_file_name": {
                    "type": "string"
                },
                "qos_fairshare": {
                    "type": "string"
                },
                "qos_priority": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "snapshot": {
                    "type": "boolean"
                },
                "snapshots": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_id": {
                    "type": "string"
                },
                "storage_container_name": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_name": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "total_reserved_capacity_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.authconfig.ServiceAccountDTO": {
            "type": "object",
            "properties": {
                "directory_config_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertPolicyDTO$RelatedPolicies": {
            "type": "object",
            "properties": {
                "entity_uuid": {
                    "type": "string"
                },
                "policy_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.dr.OutOfBandSchedulePoliciesDTO$Schedule": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedule_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_start_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_retention_time_secs": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.acropolis.volumegroups.VolumeGroupCreateDTO": {
            "type": "object",
            "properties": {
                "attached_clients": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.volumegroups.IscsiClientDTO"
                    },
                    "type": "array"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO"
                    },
                    "type": "array"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_shared": {
                    "type": "boolean"
                },
                "iscsi_initiator_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iscsi_target": {
                    "type": "string"
                },
                "iscsi_target_prefix": {
                    "type": "string"
                },
                "load_balance_vm_attachments": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.base.EntityCollection&lt;update.dto.ResultContentDescriptor&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/update.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/update.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/update.base.Metadata"
                }
            }
        },
        "get.dto.ngt.NutanixGuestToolsDTO": {
            "type": "object",
            "properties": {
                "applications": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "cluster_version": {
                    "type": "string"
                },
                "communication_link_active": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "installed_version": {
                    "type": "string"
                },
                "to_remove": {
                    "type": "boolean"
                },
                "tools_mounted": {
                    "type": "boolean"
                },
                "vm_id": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpUserDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.SnmpUserDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricValueDetails": {
            "type": "object",
            "properties": {
                "metric_threshold_value": {
                    "type": "string"
                },
                "metric_value": {
                    "type": "string"
                },
                "state_change_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.acropolis.ImageSpecDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "image_import_spec": {
                    "$ref": "#/definitions/update.dto.acropolis.ImageImportSpecDTO"
                },
                "image_type": {
                    "enum": [
                        "DISK_IMAGE",
                        "ISO_IMAGE"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskSpecCloneDTO"
                },
                "vm_disk_clone_spec": {
                    "$ref": "#/definitions/update.dto.uhura.VmDiskCloneDTO"
                }
            }
        },
        "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.RemoteSiteDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.RemoteSiteDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.encryption.KeyManagementServerTestResponseDTO": {
            "type": "object",
            "properties": {
                "ip_address_to_test_result_map": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "key_management_server_name": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.health.check.HealthCheckDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.VMDiskAddressDTO": {
            "type": "object",
            "properties": {
                "device_bus": {
                    "enum": [
                        "SCSI",
                        "IDE",
                        "PCI",
                        "SATA",
                        "SPAPR"
                    ],
                    "type": "string"
                },
                "device_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_uuid": {
                    "type": "string"
                },
                "disk_label": {
                    "type": "string"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.health.check.ErrorInfoDTO": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.CronScheduleDTO": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "duration_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "every_nth": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_rollup_sched": {
                    "type": "boolean"
                },
                "pd_name": {
                    "type": "string"
                },
                "retention_policy": {
                    "$ref": "#/definitions/create.dto.dr.RetentionPolicyDTO"
                },
                "rollup_schedule_uuid": {
                    "type": "string"
                },
                "start_times_in_usecs": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "suspended": {
                    "type": "boolean"
                },
                "timezone_offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "SECONDLY",
                        "MINUTELY",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY"
                    ],
                    "type": "string"
                },
                "user_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "values": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.alerts.AlertPolicyDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "patch.dto.alerts.AlertCauseDTO": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "string"
                },
                "additional_links": {
                    "type": "string"
                },
                "alert_namespace": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "chart_queries": {
                    "$ref": "#/definitions/patch.base.EntityCollection&lt;patch.dto.ResultContentDescriptor&gt;"
                },
                "details": {
                    "type": "string"
                },
                "has_global_details": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "num_resolved_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "parent_cause_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "troubleshooting_steps": {
                    "type": "string"
                }
            }
        },
        "update.base.EntityCollection&lt;java.lang.String&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/update.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/update.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.NodeDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SmtpServerDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.SmtpServerDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "create.dto.encryption.KeyBackupResponseDTO": {
            "type": "object",
            "properties": {
                "backup_data": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.SnmpTrapDTO": {
            "type": "object",
            "properties": {
                "community_string": {
                    "type": "string"
                },
                "engine_id": {
                    "type": "string"
                },
                "inform": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "receiver_name": {
                    "type": "string"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                },
                "trap_address": {
                    "type": "string"
                },
                "trap_username": {
                    "type": "string"
                },
                "version": {
                    "enum": [
                        "SNMPv2C",
                        "SNMPv3"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckErrorsDTO": {
            "type": "object",
            "properties": {
                "cluster_level": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                },
                "node_level": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO$AlertConfigParamDTO": {
            "type": "object",
            "description": "DTO representing the configurable parameters for an alert type",
            "properties": {
                "parameter_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_default_string_value": {
                    "type": "string"
                },
                "parameter_display_name": {
                    "type": "string"
                },
                "parameter_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_name": {
                    "type": "string"
                },
                "parameter_string_value": {
                    "type": "string"
                },
                "parameter_unit": {
                    "type": "string"
                },
                "parameter_valid_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "create.dto.uhura.VmConfigDTO": {
            "type": "object",
            "properties": {
                "allow_live_migrate": {
                    "type": "boolean"
                },
                "boot": {
                    "$ref": "#/definitions/create.dto.acropolis.BootConfigDTO"
                },
                "cbr_not_capable_reason": {
                    "type": "string"
                },
                "clear_affinity": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "gpus_assigned": {
                    "type": "boolean"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "guest_os": {
                    "type": "string"
                },
                "ha_priority": {
                    "format": "int64",
                    "type": "integer"
                },
                "host_uuid": {
                    "type": "string"
                },
                "machine_type": {
                    "enum": [
                        "PC",
                        "PSERIES",
                        "Q35"
                    ],
                    "type": "string"
                },
                "memory_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "memory_reservation_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_cores_per_vcpu": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int32",
                    "type": "integer"
                },
                "power_state": {
                    "enum": [
                        "UNKNOWN",
                        "OFF",
                        "POWERING_ON",
                        "ON",
                        "SHUTTING_DOWN",
                        "POWERING_OFF",
                        "PAUSING",
                        "PAUSED",
                        "SUSPENDING",
                        "SUSPENDED",
                        "RESUMING",
                        "RESETTING",
                        "MIGRATING"
                    ],
                    "type": "string"
                },
                "serial_ports": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.SerialPortConfigDTO"
                    },
                    "type": "array"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "tools_installer_mounted": {
                    "type": "boolean"
                },
                "tools_running_status": {
                    "enum": [
                        "UNKNOWN",
                        "GUEST_TOOLS_EXECUTING_SCRIPTS",
                        "GUEST_TOOLS_NOT_RUNNING",
                        "GUEST_TOOLS_RUNNING"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vcpu_reservation_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_customization_config": {
                    "$ref": "#/definitions/create.dto.acropolis.VMCustomizationConfigDTO"
                },
                "vm_disk_info": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.VmDiskInfoDTO"
                    },
                    "type": "array"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.VMDiskDTO"
                    },
                    "type": "array"
                },
                "vm_features": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "vm_gpus": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.GPUConfigDTO"
                    },
                    "type": "array"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_nics": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.acropolis.VMCustomizationConfigDTO": {
            "type": "object",
            "properties": {
                "datasource_type": {
                    "enum": [
                        "CONFIG_DRIVE_V2"
                    ],
                    "type": "string"
                },
                "files_to_inject_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.FileToInjectDTO"
                    },
                    "type": "array"
                },
                "fresh_install": {
                    "type": "boolean"
                },
                "userdata": {
                    "type": "string"
                },
                "userdata_path": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.CronScheduleDTO": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "duration_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "every_nth": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_rollup_sched": {
                    "type": "boolean"
                },
                "pd_name": {
                    "type": "string"
                },
                "retention_policy": {
                    "$ref": "#/definitions/get.dto.dr.RetentionPolicyDTO"
                },
                "rollup_schedule_uuid": {
                    "type": "string"
                },
                "start_times_in_usecs": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "suspended": {
                    "type": "boolean"
                },
                "timezone_offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "SECONDLY",
                        "MINUTELY",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY"
                    ],
                    "type": "string"
                },
                "user_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "values": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.hyperv.CredentialDTO": {
            "type": "object",
            "properties": {
                "logon_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.TimedBoolDTO": {
            "type": "object",
            "properties": {
                "duration": {
                    "format": "int64",
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.upgrade.UpgradeConfigurationDTO": {
            "type": "object",
            "properties": {
                "enable_automatic_downloads": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.appliance.configuration.CertificateAuthorityDTO": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.VMNicUpdateDTO": {
            "type": "object",
            "properties": {
                "nic_id": {
                    "type": "string"
                },
                "nic_spec": {
                    "$ref": "#/definitions/update.dto.acropolis.VMNicSpecDTO"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.health.check.HealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "attribute_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "executed_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.encryption.RekeyResponseDto": {
            "type": "object",
            "properties": {
                "task_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO$PublicKeyDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "get.dto.authconfig.DirectoryConfigDTO": {
            "type": "object",
            "description": "directory-config",
            "properties": {
                "connection_type": {
                    "enum": [
                        "LDAP"
                    ],
                    "type": "string"
                },
                "directory_type": {
                    "enum": [
                        "ACTIVE_DIRECTORY",
                        "OPEN_LDAP"
                    ],
                    "type": "string"
                },
                "directory_url": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "group_search_type": {
                    "enum": [
                        "RECURSIVE",
                        "NON_RECURSIVE"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_ldap_config": {
                    "$ref": "#/definitions/get.dto.authconfig.OpenLdapConfigDTO"
                },
                "service_account_password": {
                    "type": "string"
                },
                "service_account_username": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "type": "object",
            "properties": {
                "metric_details": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "type": "array"
                },
                "severity_trails": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.dr.WitnessSiteDTO$UpdateWitnessSiteDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.ImageSpecDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "image_import_spec": {
                    "$ref": "#/definitions/create.dto.acropolis.ImageImportSpecDTO"
                },
                "image_type": {
                    "enum": [
                        "DISK_IMAGE",
                        "ISO_IMAGE"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskSpecCloneDTO"
                },
                "vm_disk_clone_spec": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCloneDTO"
                }
            }
        },
        "get.dto.appliance.configuration.ContainerDTO": {
            "type": "object",
            "properties": {
                "advertised_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "compression_delay_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "container_uuid": {
                    "type": "string"
                },
                "down_migrate_times_in_secs": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "enable_software_encryption": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "erasure_code": {
                    "type": "string"
                },
                "erasure_code_delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilm_policy": {
                    "type": "string"
                },
                "is_nutanix_managed": {
                    "type": "boolean"
                },
                "mapped_remote_containers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfs_whitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfs_whitelist_inherited": {
                    "type": "boolean"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplog_replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "prefer_higher_ecfault_domain": {
                    "type": "boolean"
                },
                "random_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seq_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "total_explicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "total_implicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vstore_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.ServiceCenterDTO": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.IscsiClientDTO": {
            "type": "object",
            "properties": {
                "client_address": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "checks_in_error": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckErrorsDTO"
                    },
                    "type": "object"
                },
                "detailed_check_summary": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "type": "object"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "health_summary": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "cluster_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.appliance.configuration.SnmpUserDTO": {
            "type": "object",
            "properties": {
                "auth_key": {
                    "type": "string"
                },
                "auth_type": {
                    "enum": [
                        "SHA"
                    ],
                    "type": "string"
                },
                "priv_key": {
                    "type": "string"
                },
                "priv_type": {
                    "enum": [
                        "AES"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeGroupConfigDTO": {
            "type": "object",
            "properties": {
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeAttachmentDTO"
                    },
                    "type": "array"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.VolumeDiskConfigDTO"
                    },
                    "type": "array"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_shared": {
                    "type": "boolean"
                },
                "iscsi_target": {
                    "type": "string"
                },
                "last_modified_timestamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "load_balance_vm_attachments": {
                    "type": "boolean"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/update.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/update.base.Metadata"
                }
            }
        },
        "patch.dto.multicluster.ClusterDataStateDTO": {
            "type": "object",
            "properties": {
                "cluster_available": {
                    "type": "boolean"
                },
                "cluster_data_available": {
                    "type": "boolean"
                },
                "cluster_register_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "first_unavailable_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_alerts_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_arithmos_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.uhura.VMDiskDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_scsi_pass_through": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/get.dto.uhura.VmDiskCloneDTO"
                },
                "vm_disk_clone_external": {
                    "$ref": "#/definitions/get.dto.uhura.VmDiskCloneExternalDTO"
                },
                "vm_disk_create": {
                    "$ref": "#/definitions/get.dto.uhura.VmDiskCreateDTO"
                }
            }
        },
        "create.dto.dr.ProtectionDomainDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alert_summary": {
                    "$ref": "#/definitions/create.dto.alerts.AlertSummaryDTO"
                },
                "annotations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cron_schedules": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.CronScheduleDTO"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/create.dto.health.check.HealthSummaryDTO"
                },
                "hybrid_schedules_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "metro_avail": {
                    "$ref": "#/definitions/create.dto.dr.ProtectionDomainDTO$Stretch"
                },
                "min_snapshot_to_retain": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_snapshot_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "nfs_files": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.NfsFile"
                    },
                    "type": "array"
                },
                "ongoing_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "pending_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "schedules_suspended": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "sync_replications": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.SyncReplicationDTO"
                    },
                    "type": "array"
                },
                "total_user_written_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vms": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "volume_groups": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.VolumeGroup"
                    },
                    "type": "array"
                },
                "vstore_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.alerts.AlertPolicyDTO$RelatedPolicies": {
            "type": "object",
            "properties": {
                "entity_uuid": {
                    "type": "string"
                },
                "policy_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.encryption.TestEncryptionConfigurationResponseDTO": {
            "type": "object",
            "properties": {
                "detailed_test_response": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.encryption.CvmCertificateTestResponseDTO"
                    },
                    "type": "object"
                },
                "has_failures": {
                    "type": "boolean"
                }
            }
        },
        "patch.dto.appliance.configuration.SnmpUserDTO": {
            "type": "object",
            "properties": {
                "auth_key": {
                    "type": "string"
                },
                "auth_type": {
                    "enum": [
                        "SHA"
                    ],
                    "type": "string"
                },
                "priv_key": {
                    "type": "string"
                },
                "priv_type": {
                    "enum": [
                        "AES"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.ImageInfoDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                },
                "checksum_type": {
                    "enum": [
                        "SHA_256",
                        "SHA_1"
                    ],
                    "type": "string"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "created_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "image_state": {
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "type": "string"
                },
                "image_type": {
                    "enum": [
                        "DISK_IMAGE",
                        "ISO_IMAGE"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "updated_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_disk_id": {
                    "type": "string"
                },
                "vm_disk_path": {
                    "type": "string"
                },
                "vm_disk_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.PdPendingActionsDTO$PendingChangeMode": {
            "type": "object",
            "properties": {
                "failover_remote": {
                    "type": "string"
                },
                "mode_type": {
                    "enum": [
                        "ACTIVATE_PD",
                        "DEACTIVATE_PD",
                        "MIGRATE_PD"
                    ],
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                }
            }
        },
        "create.dto.encryption.EnableEncryptionDTO": {
            "type": "object",
            "properties": {
                "software_encryption_scope": {
                    "enum": [
                        "CLUSTER",
                        "STORAGE_CONTAINER"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.VirtualDiskDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.VirtualDiskDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO": {
            "type": "object",
            "properties": {
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO$AlertConfigParamDTO": {
            "type": "object",
            "description": "DTO representing the configurable parameters for an alert type",
            "properties": {
                "parameter_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_boolean_value": {
                    "type": "boolean"
                },
                "parameter_default_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_default_string_value": {
                    "type": "string"
                },
                "parameter_display_name": {
                    "type": "string"
                },
                "parameter_long_value": {
                    "format": "int64",
                    "type": "integer"
                },
                "parameter_name": {
                    "type": "string"
                },
                "parameter_string_value": {
                    "type": "string"
                },
                "parameter_unit": {
                    "type": "string"
                },
                "parameter_valid_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO": {
            "type": "object",
            "properties": {
                "clone_config": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCloneDTO"
                },
                "clone_spec": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskSpecCloneDTO"
                },
                "create_config": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCreateDTO"
                },
                "create_spec": {
                    "$ref": "#/definitions/create.dto.acropolis.VmDiskSpecCreateDTO"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.ResultContentDescriptor&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "create.dto.appliance.configuration.DiskHardwareConfigDTO": {
            "type": "object",
            "properties": {
                "background_operation": {
                    "type": "string"
                },
                "bad": {
                    "type": "boolean"
                },
                "boot_disk": {
                    "type": "boolean"
                },
                "can_add_as_new_disk": {
                    "type": "boolean"
                },
                "can_add_as_old_disk": {
                    "type": "boolean"
                },
                "current_firmware_version": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "disk_uuid": {
                    "type": "string"
                },
                "location": {
                    "format": "int32",
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "mount_path": {
                    "type": "string"
                },
                "mounted": {
                    "type": "boolean"
                },
                "only_boot_disk": {
                    "type": "boolean"
                },
                "serial_number": {
                    "type": "string"
                },
                "target_firmware_version": {
                    "type": "string"
                },
                "under_diagnosis": {
                    "type": "boolean"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "create.dto.encryption.TestEncryptionConfigurationRequestDTO": {
            "type": "object",
            "properties": {
                "node_id_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "node_uuid_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "server_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.ResultMetadata": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.AlertConfigDTO$EmailTemplate": {
            "type": "object",
            "properties": {
                "body_suffix": {
                    "type": "string"
                },
                "subject_prefix": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.ImageImportSpecDTO": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "checksum_type": {
                    "enum": [
                        "SHA_256",
                        "SHA_1"
                    ],
                    "type": "string"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_name": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.SubnetDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.AlertConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.AlertConfigDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.SnapshotInfoDTO": {
            "type": "object",
            "properties": {
                "created_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "group_uuid": {
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_create_spec": {
                    "$ref": "#/definitions/get.dto.uhura.VmConfigDTO"
                },
                "vm_create_specification": {
                    "$ref": "#/definitions/get.dto.acropolis.VMCreateDTO"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.upgrade.MinimumRequirementsDTO": {
            "type": "object",
            "properties": {
                "memory_gb": {
                    "format": "int32",
                    "type": "integer"
                },
                "storage_gb": {
                    "format": "int32",
                    "type": "integer"
                },
                "v_cpus": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.upgrade.UpgradeNotificationDTO": {
            "type": "object",
            "properties": {
                "cancel_message": {
                    "type": "string"
                },
                "description_item_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.upgrade.DescriptionItemDTO"
                    },
                    "type": "array"
                },
                "proceed_message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.ConsistencyGroupDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.ConsistencyGroupDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.uhura.VMDiskDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_scsi_pass_through": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCloneDTO"
                },
                "vm_disk_clone_external": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCloneExternalDTO"
                },
                "vm_disk_create": {
                    "$ref": "#/definitions/create.dto.uhura.VmDiskCreateDTO"
                }
            }
        },
        "get.dto.dr.OutOfBandSchedulePoliciesDTO": {
            "type": "object",
            "properties": {
                "pd_name": {
                    "type": "string"
                },
                "schedule_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.dr.OutOfBandSchedulePoliciesDTO$Schedule"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.health.check.HealthCheckErrorsDTO": {
            "type": "object",
            "properties": {
                "cluster_level": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                },
                "node_level": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.dr.RestoreEntitiesRequestDTO": {
            "type": "object",
            "properties": {
                "nfs_files": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "path_prefix": {
                    "type": "string"
                },
                "replace": {
                    "type": "boolean"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "vg_name_prefix": {
                    "type": "string"
                },
                "vm_name_prefix": {
                    "type": "string"
                },
                "vm_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volume_group_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.dr.VirtualMachine": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group": {
                    "type": "string"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_files": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_handle": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_id": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                },
                "vm_power_state_on_recovery": {
                    "enum": [
                        "Powered Off",
                        "Powered On",
                        "Power state at time of snapshot"
                    ],
                    "type": "string"
                },
                "vm_recoverability": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.VmRecoverabilityDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.DiskDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.DiskDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.dr.ReplicationLinkDTO": {
            "type": "object",
            "properties": {
                "current_replicating_snapshot_id": {
                    "type": "string"
                },
                "current_replicating_snapshot_total_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "current_replicating_snapshot_transmitted_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_replication_end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_replication_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_replication_snapshot_id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "patch.dto.health.check.HealthSummaryDTO": {
            "type": "object",
            "properties": {
                "entity_type_summaries": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "health_check_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckSummaryDTO"
                    },
                    "type": "object"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.comment.CommentDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_uuid": {
                    "type": "string"
                },
                "created_timestamp_usecs": {
                    "type": "string"
                },
                "creation_username": {
                    "type": "string"
                },
                "last_modified_timestamp_usecs": {
                    "type": "string"
                },
                "reference_entity_type": {
                    "type": "string"
                },
                "reference_entity_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO": {
            "type": "object",
            "description": "health-check",
            "properties": {
                "affected_entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "alert_config_exception_groups": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup"
                    },
                    "type": "array"
                },
                "alert_configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "alert_type_id": {
                    "type": "string"
                },
                "applicable_for_multi_cluster": {
                    "type": "boolean"
                },
                "applicable_for_single_cluster": {
                    "type": "boolean"
                },
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "causes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_type": {
                    "enum": [
                        "SCHEDULED",
                        "NOT_SCHEDULED",
                        "EVENT_DRIVEN"
                    ],
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exception_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_global_config": {
                    "type": "boolean"
                },
                "is_user_defined": {
                    "type": "boolean"
                },
                "kb_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                },
                "metrics": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO"
                    },
                    "type": "array"
                },
                "modified_by_username": {
                    "type": "string"
                },
                "modified_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO"
                    },
                    "type": "object"
                },
                "policy_uuid": {
                    "type": "string"
                },
                "resolutions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedule_interval_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                },
                "sub_category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.RemoteSiteDTO$VStoreInfo": {
            "type": "object",
            "properties": {
                "is_protected": {
                    "type": "boolean"
                },
                "is_stretch_empty": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "metro_pd": {
                    "type": "string"
                },
                "used_physical_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.ProtectionDomainDTO$Stretch": {
            "type": "object",
            "properties": {
                "container": {
                    "type": "string"
                },
                "failure_handling": {
                    "enum": [
                        "NONE",
                        "AUTOMATIC",
                        "MANUAL",
                        "WITNESS",
                        "PENDING"
                    ],
                    "type": "string"
                },
                "per_vm_consistency": {
                    "type": "boolean"
                },
                "remote_site": {
                    "type": "string"
                },
                "role": {
                    "enum": [
                        "ACTIVE",
                        "STANDBY",
                        "DEACTIVATED"
                    ],
                    "type": "string"
                },
                "skip_clones_check": {
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        "ENABLE_METRO_AVAIL_IN_PROGRESS",
                        "DISABLE_METRO_AVAIL_IN_PROGRESS",
                        "PROMOTE_METRO_AVAIL_IN_PROGRESS",
                        "DEMOTE_METRO_AVAIL_IN_PROGRESS",
                        "REMOTE_UNREACHABLE",
                        "DECOUPLED",
                        "SYNCHRONIZING",
                        "ENABLED",
                        "DISABLED",
                        "SYNC_INCOMPLETE",
                        "PENDING",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "storage_container": {
                    "type": "string"
                },
                "timeout": {
                    "format": "int64",
                    "maximum": 30,
                    "minimum": 10,
                    "type": "integer"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.VDiskDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.VDiskDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.IpConfigDTO": {
            "type": "object",
            "properties": {
                "default_gateway": {
                    "type": "string"
                },
                "dhcp_options": {
                    "$ref": "#/definitions/create.dto.acropolis.IpConfigDTO$DhcpOptions"
                },
                "dhcp_server_address": {
                    "type": "string"
                },
                "network_address": {
                    "type": "string"
                },
                "pool": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.IpConfigDTO$IpPool"
                    },
                    "type": "array"
                },
                "prefix_length": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.NdfsFileDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.NdfsFileDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.acropolis.volumegroups.VolumeAttachmentDTO": {
            "type": "object",
            "properties": {
                "client_uuid": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "initiator_ip_address": {
                    "type": "string"
                },
                "iscsi_initiator_name": {
                    "type": "string"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.NodeDTO$HbaFirmware": {
            "type": "object",
            "properties": {
                "hba_model": {
                    "type": "string"
                },
                "hba_version": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.VmRecoverabilityDTO": {
            "type": "object",
            "properties": {
                "cerebro_error": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "remote_site": {
                    "type": "string"
                }
            }
        },
        "get.dto.authconfig.AutoLoginInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "service_account_dto": {
                    "$ref": "#/definitions/get.dto.authconfig.ServiceAccountDTO"
                }
            }
        },
        "create.dto.ergon.TaskRequestDTO": {
            "type": "object",
            "properties": {
                "cluster_uuid_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "cut_off_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ergon.EntityIdRequestDTO"
                    },
                    "type": "array"
                },
                "include_completed": {
                    "type": "boolean"
                },
                "include_subtasks_info": {
                    "type": "boolean"
                },
                "operation_type_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.alerts.ResolveAcknowledgeAlertDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.acropolis.VMDiskSpecCloneDTO": {
            "type": "object",
            "properties": {
                "container_uuid": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "minimum_size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "snapshot_group_id": {
                    "type": "string"
                },
                "vm_disk_uuid": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.GPUConfigDTO": {
            "type": "object",
            "properties": {
                "assignable": {
                    "type": "boolean"
                },
                "device_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_name": {
                    "type": "string"
                },
                "fraction": {
                    "format": "int32",
                    "type": "integer"
                },
                "frame_buffer_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "gpu_mode": {
                    "enum": [
                        "UNUSED",
                        "USED_FOR_PASSTHROUGH",
                        "USED_FOR_VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_profile": {
                    "type": "string"
                },
                "gpu_type": {
                    "enum": [
                        "PASS_THROUGH_GRAPHICS",
                        "PASS_THROUGH_COMPUTE",
                        "VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_vendor": {
                    "enum": [
                        "NVIDIA",
                        "INTEL",
                        "AMD"
                    ],
                    "type": "string"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "licenses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "max_instances_per_vm": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_resolution": {
                    "type": "string"
                },
                "num_virtual_display_heads": {
                    "format": "int32",
                    "type": "integer"
                },
                "numa_node": {
                    "format": "int32",
                    "type": "integer"
                },
                "sbdf": {
                    "type": "string"
                },
                "vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {
                "enable_snmpv3_only": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.appliance.configuration.AlertConfigDTO": {
            "type": "object",
            "description": "DTO representing the configuration of alerts",
            "properties": {
                "default_nutanix_email": {
                    "type": "string"
                },
                "email_config_rules": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule"
                    },
                    "type": "array"
                },
                "email_contact_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "email_template": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.AlertConfigDTO$EmailTemplate"
                },
                "enable": {
                    "type": "boolean"
                },
                "enable_default_nutanix_email": {
                    "type": "boolean"
                },
                "enable_email_digest": {
                    "type": "boolean"
                },
                "skip_empty_alert_email_digest": {
                    "type": "boolean"
                },
                "smtp_server": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.SmtpServerDTO"
                },
                "tunnel_details": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.RemoteTunnelDetailsDTO"
                }
            }
        },
        "create.dto.uhura.VMDiskDetachDTO": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.VmDiskInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.alerts.AlertCauseDTO": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "string"
                },
                "additional_links": {
                    "type": "string"
                },
                "alert_namespace": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "chart_queries": {
                    "$ref": "#/definitions/create.base.EntityCollection&lt;create.dto.ResultContentDescriptor&gt;"
                },
                "details": {
                    "type": "string"
                },
                "has_global_details": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "num_resolved_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "parent_cause_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "troubleshooting_steps": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertPolicyDTO": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "type": "boolean"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "error_on_conflict": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_updated_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "policies_to_override": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_policies": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertPolicyDTO$RelatedPolicies"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "trigger_conditions": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertPolicyDTO$TriggerCondition"
                    },
                    "type": "array"
                },
                "trigger_wait_period_in_secs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.appliance.configuration.CertificationInformationDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "organizational_unit_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.ServiceCenterDTO": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.VMDiskDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_scsi_pass_through": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/update.dto.uhura.VmDiskCloneDTO"
                },
                "vm_disk_clone_external": {
                    "$ref": "#/definitions/update.dto.uhura.VmDiskCloneExternalDTO"
                },
                "vm_disk_create": {
                    "$ref": "#/definitions/update.dto.uhura.VmDiskCreateDTO"
                }
            }
        },
        "get.dto.uhura.ManagementServerInfoDTO": {
            "type": "object",
            "properties": {
                "drs_enabled": {
                    "type": "boolean"
                },
                "drs_vm_behaviour": {
                    "enum": [
                        "UNKNOWN",
                        "FULL_ENABLED",
                        "ONLY_PLACEMENT_ENABLED",
                        "MANUAL"
                    ],
                    "type": "string"
                },
                "ha_enabled": {
                    "type": "boolean"
                },
                "in_use": {
                    "type": "boolean"
                },
                "ip_address": {
                    "type": "string"
                },
                "management_server_type": {
                    "enum": [
                        "VCENTER"
                    ],
                    "type": "string"
                },
                "registered": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.dr.SyncReplicationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO$PublicKeyDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.NfsFile": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "nfs_file_path": {
                    "type": "string"
                },
                "nfs_handle": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.appliance.configuration.SnmpTransportDTO": {
            "type": "object",
            "properties": {
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.DiskHardwareConfigDTO": {
            "type": "object",
            "properties": {
                "background_operation": {
                    "type": "string"
                },
                "bad": {
                    "type": "boolean"
                },
                "boot_disk": {
                    "type": "boolean"
                },
                "can_add_as_new_disk": {
                    "type": "boolean"
                },
                "can_add_as_old_disk": {
                    "type": "boolean"
                },
                "current_firmware_version": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "disk_uuid": {
                    "type": "string"
                },
                "location": {
                    "format": "int32",
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "mount_path": {
                    "type": "string"
                },
                "mounted": {
                    "type": "boolean"
                },
                "only_boot_disk": {
                    "type": "boolean"
                },
                "serial_number": {
                    "type": "string"
                },
                "target_firmware_version": {
                    "type": "string"
                },
                "under_diagnosis": {
                    "type": "boolean"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.NetworkMappingDTO": {
            "type": "object",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "properties": {
                "l2_network_mappings": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.ergon.TaskDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ergon.TaskDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "update.dto.acropolis.FileToInjectDTO": {
            "type": "object",
            "properties": {
                "destination_path": {
                    "type": "string"
                },
                "source_path": {
                    "type": "string"
                }
            }
        },
        "create.dto.uhura.VmGuestToolsDTO": {
            "type": "object",
            "properties": {
                "operation": {
                    "enum": [
                        "MOUNT",
                        "UNMOUNT"
                    ],
                    "type": "string"
                },
                "override_guest": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.ProtectionDomainDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "annotations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cron_schedules": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.CronScheduleDTO"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "hybrid_schedules_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "metro_avail": {
                    "$ref": "#/definitions/update.dto.dr.ProtectionDomainDTO$Stretch"
                },
                "min_snapshot_to_retain": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_snapshot_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "nfs_files": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.NfsFile"
                    },
                    "type": "array"
                },
                "ongoing_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "pending_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "schedules_suspended": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "sync_replications": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.SyncReplicationDTO"
                    },
                    "type": "array"
                },
                "total_user_written_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vms": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "volume_groups": {
                    "items": {
                        "$ref": "#/definitions/update.dto.dr.VolumeGroup"
                    },
                    "type": "array"
                },
                "vstore_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.appliance.configuration.CertificationInformationDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "organizational_unit_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "create.base.EntityCollection&lt;create.dto.upgrade.SoftwareDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.upgrade.SoftwareDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "java.io.InputStream": {
            "type": "object",
            "properties": {
                "max_skip_buffer_size": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.network.SwitchInterfaceDTO": {
            "type": "object",
            "properties": {
                "attached_host_id": {
                    "type": "string"
                },
                "attached_host_nic_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attached_host_nic_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attached_host_uuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_change_time": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "mtu_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "port_num": {
                    "type": "string"
                },
                "speed_in_kbps": {
                    "format": "int64",
                    "type": "integer"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "switch_id": {
                    "type": "string"
                },
                "switch_management_address": {
                    "type": "string"
                },
                "switch_uuid": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.SmtpServerDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email_status": {
                    "$ref": "#/definitions/get.dto.base.CommunicationStatusDTO"
                },
                "from_email_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "secure_mode": {
                    "enum": [
                        "STARTTLS",
                        "SSL",
                        "NONE"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.VMCustomizationConfigDTO": {
            "type": "object",
            "properties": {
                "datasource_type": {
                    "enum": [
                        "CONFIG_DRIVE_V2"
                    ],
                    "type": "string"
                },
                "files_to_inject_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.FileToInjectDTO"
                    },
                    "type": "array"
                },
                "fresh_install": {
                    "type": "boolean"
                },
                "userdata": {
                    "type": "string"
                },
                "userdata_path": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertDTO$SeverityTrail": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string"
                },
                "severity_change_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "type": "object",
            "properties": {
                "metric_details": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "type": "array"
                },
                "severity_trails": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.uhura.VmDiskCloneExternalDTO": {
            "type": "object",
            "properties": {
                "external_disk_url": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.ReplicationLinkDTO": {
            "type": "object",
            "properties": {
                "current_replicating_snapshot_id": {
                    "type": "string"
                },
                "current_replicating_snapshot_total_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "current_replicating_snapshot_transmitted_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_replication_end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_replication_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_replication_snapshot_id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "get.dto.upgrade.DescriptionItemDTO": {
            "type": "object",
            "properties": {
                "affected_releases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                },
                "severity_level": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.RestoreEntitiesDTO": {
            "type": "object",
            "properties": {
                "task_uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.acropolis.BootConfigDTO": {
            "type": "object",
            "properties": {
                "boot_device_order": {
                    "items": {
                        "enum": [
                            "CDROM",
                            "DISK",
                            "NIC"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "boot_device_type": {
                    "enum": [
                        "CDROM",
                        "DISK",
                        "NIC"
                    ],
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskAddressDTO"
                },
                "mac_addr": {
                    "type": "string"
                },
                "secure_boot": {
                    "type": "boolean"
                },
                "uefi_boot": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.vstore.VStoreDTO": {
            "type": "object",
            "description": "vStore",
            "properties": {
                "backedup": {
                    "type": "boolean"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "is_backup": {
                    "type": "boolean"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protection_domain": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_level_consistent": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.dr.RetentionPolicyDTO": {
            "type": "object",
            "properties": {
                "default_local_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_remote_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_max_snapshots": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_period": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_type": {
                    "enum": [
                        "NUM_SNAPSHOTS",
                        "DAYS",
                        "WEEKS",
                        "MONTHS"
                    ],
                    "type": "string"
                },
                "remote_max_snapshots": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_period": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_type": {
                    "additionalProperties": {
                        "enum": [
                            "NUM_SNAPSHOTS",
                            "DAYS",
                            "WEEKS",
                            "MONTHS"
                        ],
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "update.dto.alerts.AlertDTO$MetricDetails": {
            "type": "object",
            "properties": {
                "comparison_operator": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "data_type": {
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "metric_category": {
                    "type": "string"
                },
                "metric_display_name": {
                    "type": "string"
                },
                "metric_name": {
                    "type": "string"
                },
                "metric_value_details": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "type": "array"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreStatusDTO$NodeSpecificDeleteStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.acropolis.volumegroups.VolumeDiskConfigDTO": {
            "type": "object",
            "properties": {
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "vmdisk_path": {
                    "type": "string"
                },
                "vmdisk_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "vmdisk_size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "vmdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.PrimitiveDTO&lt;java.lang.String&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.KeyManagementServerDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "ip_address_port_map": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.appliance.configuration.RackableUnitDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodes": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "positions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rackable_unit_uuid": {
                    "type": "string"
                },
                "serial": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.SnmpTrapDTO": {
            "type": "object",
            "properties": {
                "community_string": {
                    "type": "string"
                },
                "engine_id": {
                    "type": "string"
                },
                "inform": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "receiver_name": {
                    "type": "string"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                },
                "trap_address": {
                    "type": "string"
                },
                "trap_username": {
                    "type": "string"
                },
                "version": {
                    "enum": [
                        "SNMPv2C",
                        "SNMPv3"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.KeyManagementServerDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.KeyManagementServerDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricDetails": {
            "type": "object",
            "properties": {
                "comparison_operator": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "data_type": {
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "metric_category": {
                    "type": "string"
                },
                "metric_display_name": {
                    "type": "string"
                },
                "metric_name": {
                    "type": "string"
                },
                "metric_value_details": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "type": "array"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.volumegroups.ClientAuthenticationDTO": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "enum": [
                        "CHAP",
                        "NONE"
                    ],
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.volumegroups.IscsiClientDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.IscsiClientDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.MaintenanceModeDTO": {
            "type": "object",
            "properties": {
                "evacuation_option": {
                    "enum": [
                        "POWER_OFF",
                        "COLD_MIGRATE",
                        "LIVE_MIGRATE"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "non_migratable_vm_option": {
                    "enum": [
                        "BLOCK",
                        "ACPI_SHUTDOWN_AND_POWER_OFF"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.dr.DetachDiskDTO": {
            "type": "object",
            "properties": {
                "attached_disk_label": {
                    "type": "string"
                }
            }
        },
        "get.dto.authconfig.CertRevocationInfoDTO": {
            "type": "object",
            "properties": {
                "crl_distribution_points": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "global_crl_refresh_interval": {
                    "format": "int64",
                    "type": "integer"
                },
                "ocsp_responder": {
                    "type": "string"
                }
            }
        },
        "create.dto.hyperv.ConfigureHypervNodeRequestDTO$FailoverClusterDTO": {
            "type": "object",
            "properties": {
                "credential": {
                    "$ref": "#/definitions/create.dto.hyperv.CredentialDTO"
                },
                "ip_address": {
                    "type": "string"
                },
                "member_nodes": {
                    "items": {
                        "$ref": "#/definitions/create.dto.appliance.configuration.NodeDTO"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "node_to_remove": {
                    "type": "string"
                },
                "node_uuid_to_remove": {
                    "type": "string"
                },
                "node_uuids_to_add": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodes_to_add": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.ImageInfoDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.ImageInfoDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.health.check.HealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "attribute_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "executed_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.appliance.configuration.SnmpUserDTO": {
            "type": "object",
            "properties": {
                "auth_key": {
                    "type": "string"
                },
                "auth_type": {
                    "enum": [
                        "SHA"
                    ],
                    "type": "string"
                },
                "priv_key": {
                    "type": "string"
                },
                "priv_type": {
                    "enum": [
                        "AES"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.VMCloneDTO": {
            "type": "object",
            "properties": {
                "container_uuid": {
                    "type": "string"
                },
                "source_vmlogical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "spec_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.VMCloneSpecDTO"
                    },
                    "type": "array"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_customization_config": {
                    "$ref": "#/definitions/create.dto.acropolis.VMCustomizationConfigDTO"
                }
            }
        },
        "update.dto.appliance.configuration.SnmpInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "snmp_transports": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.SnmpTransportDTO"
                    },
                    "type": "array"
                },
                "snmp_traps": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.SnmpTrapDTO"
                    },
                    "type": "array"
                },
                "snmp_users": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.SnmpUserDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.uhura.VmDiskCreateDTO": {
            "type": "object",
            "properties": {
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.uhura.VirtualGPUProfileDTO": {
            "type": "object",
            "properties": {
                "allocated_vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gpu_config": {
                    "$ref": "#/definitions/get.dto.uhura.GPUConfigDTO"
                }
            }
        },
        "create.dto.acropolis.VMNicCreateDTO": {
            "type": "object",
            "properties": {
                "spec_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.ergon.TaskDTO": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "complete_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "create_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ergon.EntityIdDTO"
                    },
                    "type": "array"
                },
                "last_updated_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "meta_request": {
                    "$ref": "#/definitions/create.dto.acropolis.tasks.MetaRequestDTO"
                },
                "meta_response": {
                    "$ref": "#/definitions/create.dto.ergon.MetaResponseDTO"
                },
                "operation_type": {
                    "type": "string"
                },
                "parent_task_uuid": {
                    "type": "string"
                },
                "percentage_complete": {
                    "format": "int32",
                    "type": "integer"
                },
                "progress_status": {
                    "enum": [
                        "QUEUED",
                        "RUNNING",
                        "SUCCEEDED",
                        "ABORTED",
                        "SUSPENDED",
                        "FAILED",
                        "NONE"
                    ],
                    "type": "string"
                },
                "start_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "subtask_info_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ergon.TaskDTO"
                    },
                    "type": "array"
                },
                "subtask_uuid_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.base.CommunicationStatusDTO": {
            "type": "object",
            "properties": {
                "last_changed_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_checked_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_transmission_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/get.dto.base.ParameterizedMessageDTO"
                },
                "status": {
                    "enum": [
                        "SUCCESS",
                        "FAILED",
                        "RETRYING",
                        "UNKNOWN",
                        "DISABLED"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "update.dto.appliance.configuration.NodePositionDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ordinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "physical_position": {
                    "enum": [
                        "C",
                        "L",
                        "R",
                        "TL",
                        "TR",
                        "BL",
                        "BR"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.dr.NetworkMappingDTO": {
            "type": "object",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "properties": {
                "l2_network_mappings": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.health.check.HealthCheckDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.health.check.HealthCheckDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.alerts.AlertPolicyDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertPolicyDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.ReplicationDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.ReplicationDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.upgrade.SoftwareDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.upgrade.SoftwareDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.dr.CloudCredentialsDTO": {
            "type": "object",
            "properties": {
                "aws_credential": {
                    "$ref": "#/definitions/get.dto.dr.AwsCredentialDTO"
                },
                "azure_credential": {
                    "$ref": "#/definitions/get.dto.dr.AzureCredentialDTO"
                },
                "credential_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "use_as_default": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.ergon.TaskPollResponseDTO": {
            "type": "object",
            "properties": {
                "completed_tasks_info": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ergon.TaskDTO"
                    },
                    "type": "array"
                },
                "timed_out": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "all_hyperv_nodes_in_failover_cluster": {
                    "type": "boolean"
                },
                "block_serials": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudcluster": {
                    "type": "boolean"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_data_state": {
                    "$ref": "#/definitions/get.dto.multicluster.ClusterDataStateDTO"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_external_ipaddress": {
                    "type": "string"
                },
                "cluster_fully_qualified_domain_name": {
                    "type": "string"
                },
                "cluster_functions": {
                    "items": {
                        "enum": [
                            "NDFS",
                            "MULTICLUSTER",
                            "CLOUDDATAGATEWAY",
                            "MINERVA",
                            "SINGLE_NODE",
                            "TWO_NODE",
                            "PLATFORM"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "cluster_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_masquerading_ipaddress": {
                    "type": "string"
                },
                "cluster_masquerading_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "cluster_redundancy_state": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ClusterRedundancyStateDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "common_criteria_mode": {
                    "type": "boolean"
                },
                "credential": {
                    "$ref": "#/definitions/get.dto.hyperv.CredentialDTO"
                },
                "disable_degraded_node_monitoring": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "enable_efficient_metric_sync": {
                    "type": "boolean"
                },
                "enable_lock_down": {
                    "type": "boolean"
                },
                "enable_on_disk_dedup": {
                    "type": "boolean"
                },
                "enable_password_remote_login_to_cluster": {
                    "type": "boolean"
                },
                "enable_shadow_clones": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "enforce_rackable_unit_aware_placement": {
                    "type": "boolean"
                },
                "external_subnet": {
                    "type": "string"
                },
                "fault_tolerance_domain_type": {
                    "enum": [
                        "RACK",
                        "RACKABLE_UNIT",
                        "NODE",
                        "DISK"
                    ],
                    "type": "string"
                },
                "fingerprint_content_cache_percentage": {
                    "format": "int32",
                    "type": "integer"
                },
                "full_version": {
                    "type": "string"
                },
                "global_nfs_white_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_self_encrypting_drive": {
                    "type": "boolean"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "http_proxies": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.HttpProxyDTO"
                    },
                    "type": "array"
                },
                "hypervisor_lldp_config": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO"
                },
                "hypervisor_security_compliance_config": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO"
                },
                "hypervisor_types": {
                    "items": {
                        "enum": [
                            "kVMware",
                            "kXen",
                            "kHyperv",
                            "kKvm",
                            "kAmazonWebServices",
                            "kVCenter",
                            "kAcropolis",
                            "kSCVMM",
                            "kNull"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "id": {
                    "type": "string"
                },
                "internal_subnet": {
                    "type": "string"
                },
                "is_lts": {
                    "type": "boolean"
                },
                "is_nsenabled": {
                    "type": "boolean"
                },
                "is_registered_to_pc": {
                    "type": "boolean"
                },
                "is_ssp_enabled": {
                    "type": "boolean"
                },
                "is_upgrade_in_progress": {
                    "type": "boolean"
                },
                "iscsi_config": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$IscsiConfig"
                },
                "management_servers": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.ManagementServerInfoDTO"
                    },
                    "type": "array"
                },
                "multicluster": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "name_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ncc_version": {
                    "type": "string"
                },
                "nos_cluster_and_hosts_domain_joined": {
                    "type": "boolean"
                },
                "ntp_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "num_nodes": {
                    "format": "int64",
                    "type": "integer"
                },
                "operation_mode": {
                    "enum": [
                        "NORMAL",
                        "OVERRIDE",
                        "READONLY",
                        "STANDALONE",
                        "SWITCH_TO_TWO_NODE"
                    ],
                    "type": "string"
                },
                "public_keys": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                    },
                    "type": "array"
                },
                "rackable_units": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.RackableUnitDTO"
                    },
                    "type": "array"
                },
                "security_compliance_config": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO"
                },
                "segmented_iscsi_data_services_ipaddress": {
                    "type": "string"
                },
                "service_centers": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.ServiceCenterDTO"
                    },
                    "type": "array"
                },
                "smtp_server": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.SmtpServerDTO"
                },
                "ssd_pinning_percentage_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_type": {
                    "enum": [
                        "ALL_FLASH",
                        "MIXED",
                        "ALL_HDD"
                    ],
                    "type": "string"
                },
                "support_verbosity_type": {
                    "enum": [
                        "NOTHING",
                        "BASIC",
                        "BASIC_COREDUMP"
                    ],
                    "type": "string"
                },
                "target_version": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.SnapshotSpecDTO": {
            "type": "object",
            "properties": {
                "snapshot_name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.OutOfBandSchedulePoliciesDTO$Schedule": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedule_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "schedule_start_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_retention_time_secs": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.uhura.VmDiskCloneDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskAddressDTO"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_group_uuid": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.HttpProxyDTO": {
            "type": "object",
            "description": "http-proxy",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "proxy_types": {
                    "items": {
                        "enum": [
                            "HTTP",
                            "HTTPS",
                            "SOCKS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertCauseDTO": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "string"
                },
                "additional_links": {
                    "type": "string"
                },
                "alert_namespace": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "chart_queries": {
                    "$ref": "#/definitions/update.base.EntityCollection&lt;update.dto.ResultContentDescriptor&gt;"
                },
                "details": {
                    "type": "string"
                },
                "has_global_details": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "num_resolved_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "parent_cause_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "troubleshooting_steps": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "get.base.ErrorInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO": {
            "type": "object",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "operation": {
                    "enum": [
                        "ATTACH",
                        "DETACH"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.acropolis.volumegroups.ClientAuthenticationDTO": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "enum": [
                        "CHAP",
                        "NONE"
                    ],
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "type": "object",
            "properties": {
                "metric_details": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "type": "array"
                },
                "severity_trails": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.alerts.AlertPolicyDTO": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "type": "boolean"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "error_on_conflict": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_updated_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "policies_to_override": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_policies": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertPolicyDTO$RelatedPolicies"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "trigger_conditions": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertPolicyDTO$TriggerCondition"
                    },
                    "type": "array"
                },
                "trigger_wait_period_in_secs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.acropolis.IpConfigDTO$DhcpOptions": {
            "type": "object",
            "properties": {
                "boot_file_name": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "domain_name_servers": {
                    "type": "string"
                },
                "domain_search": {
                    "type": "string"
                },
                "tftp_server_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.authconfig.AuthConfigDTO": {
            "type": "object",
            "description": "auth-config",
            "properties": {
                "auth_type_list": {
                    "items": {
                        "enum": [
                            "LOCAL",
                            "DIRECTORY_SERVICE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "directory_list": {
                    "items": {
                        "$ref": "#/definitions/update.dto.authconfig.DirectoryConfigDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.authconfig.ClientAuthDTO": {
            "type": "object",
            "properties": {
                "auto_login_info": {
                    "$ref": "#/definitions/update.dto.authconfig.AutoLoginInfoDTO"
                },
                "ca_chain_info": {
                    "$ref": "#/definitions/update.dto.authconfig.CaChainDTO"
                },
                "cert_revocation_info": {
                    "$ref": "#/definitions/update.dto.authconfig.CertRevocationInfoDTO"
                }
            }
        },
        "update.dto.alerts.AlertDTO$MetricValueDetails": {
            "type": "object",
            "properties": {
                "metric_threshold_value": {
                    "type": "string"
                },
                "metric_value": {
                    "type": "string"
                },
                "state_change_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.CloudCvmImageDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "valid_values_range": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "patch.dto.dr.ReplicationLinkDTO": {
            "type": "object",
            "properties": {
                "current_replicating_snapshot_id": {
                    "type": "string"
                },
                "current_replicating_snapshot_total_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "current_replicating_snapshot_transmitted_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_replication_end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_replication_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_replication_snapshot_id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.alerts.AlertDTO$MetricDetails": {
            "type": "object",
            "properties": {
                "comparison_operator": {
                    "type": "string"
                },
                "condition_type": {
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "type": "string"
                },
                "data_type": {
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "metric_category": {
                    "type": "string"
                },
                "metric_display_name": {
                    "type": "string"
                },
                "metric_name": {
                    "type": "string"
                },
                "metric_value_details": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "type": "array"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.SnapshotDTO": {
            "type": "object",
            "properties": {
                "consistency_groups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "exclusive_usage_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "located_remote_site_name": {
                    "type": "string"
                },
                "missing_entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.SnapshotDTO$MissingEntityDTO"
                    },
                    "type": "array"
                },
                "nfs_files": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.NfsFile"
                    },
                    "type": "array"
                },
                "oob_schedule_ids": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "size_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_create_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_expiry_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "snapshot_uuid": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "EXPIRED",
                        "RETAIN_FOREVER",
                        "AVAILABLE",
                        "SCHEDULED"
                    ],
                    "type": "string"
                },
                "vms": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "volume_groups": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.VolumeGroup"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.RetentionPolicyDTO": {
            "type": "object",
            "properties": {
                "default_local_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_remote_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_max_snapshots": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_period": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_type": {
                    "enum": [
                        "NUM_SNAPSHOTS",
                        "DAYS",
                        "WEEKS",
                        "MONTHS"
                    ],
                    "type": "string"
                },
                "remote_max_snapshots": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_period": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_type": {
                    "additionalProperties": {
                        "enum": [
                            "NUM_SNAPSHOTS",
                            "DAYS",
                            "WEEKS",
                            "MONTHS"
                        ],
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO$IscsiConfig": {
            "type": "object",
            "properties": {
                "external_client_enabled": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.alerts.AlertDTO$SeverityTrail": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string"
                },
                "severity_change_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.authconfig.OpenLdapConfigDTO": {
            "type": "object",
            "description": "Open LDAP configuration",
            "properties": {
                "group_member_attribute": {
                    "type": "string"
                },
                "group_member_attribute_value": {
                    "type": "string"
                },
                "group_object_class": {
                    "type": "string"
                },
                "group_search_base": {
                    "type": "string"
                },
                "user_object_class": {
                    "type": "string"
                },
                "user_search_base": {
                    "type": "string"
                },
                "username_attribute": {
                    "type": "string"
                }
            }
        },
        "create.dto.authconfig.TestDirectoryConfigDTO": {
            "type": "object",
            "properties": {
                "directory_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "patch.dto.hyperv.CredentialDTO": {
            "type": "object",
            "properties": {
                "logon_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "get.dto.stats.VMDTO": {
            "type": "object",
            "properties": {
                "acropolis_vm": {
                    "type": "boolean"
                },
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "consistency_group_name": {
                    "type": "string"
                },
                "container_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "container_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "control_domain": {
                    "type": "boolean"
                },
                "controller_vm": {
                    "type": "boolean"
                },
                "cpu_reserved_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "disk_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "displayable": {
                    "type": "boolean"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "gpus_in_use": {
                    "type": "boolean"
                },
                "guest_operating_system": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "host_id": {
                    "type": "string"
                },
                "host_name": {
                    "type": "string"
                },
                "host_uuid": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "memory_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "memory_reserved_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "non_ndfs_details": {
                    "type": "string"
                },
                "num_network_adapters": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int32",
                    "type": "integer"
                },
                "nutanix_guest_tools": {
                    "$ref": "#/definitions/get.dto.ngt.NutanixGuestToolsDTO"
                },
                "nutanix_virtual_disk_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nutanix_virtual_disk_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nutanix_virtual_disks": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "power_state": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "protection_type": {
                    "type": "string"
                },
                "running_on_ndfs": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "storage_container_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vdisk_file_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vdisk_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "virtual_gpu_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "virtual_nic_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "virtual_nic_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_features": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "vm_id": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                },
                "vm_type": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.AwsCredentialDTO": {
            "type": "object",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "create.dto.ergon.TaskPollRequestDTO": {
            "type": "object",
            "properties": {
                "completed_tasks": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeout_interval": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.ConsistencyGroupDTO": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group_name": {
                    "type": "string"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "nfs_file_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "total_file_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_file_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "within_snapshot": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.network.HostNicDTO": {
            "type": "object",
            "properties": {
                "attached_switch_interface_map": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/get.dto.network.SwitchInterfaceDTO"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "dhcp_enabled": {
                    "type": "boolean"
                },
                "discovery_protocol": {
                    "type": "string"
                },
                "host_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipv4_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ipv6_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "link_speed_in_kbps": {
                    "format": "int32",
                    "type": "integer"
                },
                "mac_address": {
                    "type": "string"
                },
                "mtu_in_bytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "switch_device_id": {
                    "type": "string"
                },
                "switch_mac_address": {
                    "type": "string"
                },
                "switch_management_ip": {
                    "type": "string"
                },
                "switch_port_id": {
                    "type": "string"
                },
                "switch_vendor_info": {
                    "type": "string"
                },
                "switch_vlan_id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.PrimitiveDTO&lt;java.lang.Long&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.acropolis.VMDiskAddressDTO": {
            "type": "object",
            "properties": {
                "device_bus": {
                    "enum": [
                        "SCSI",
                        "IDE",
                        "PCI",
                        "SATA",
                        "SPAPR"
                    ],
                    "type": "string"
                },
                "device_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_uuid": {
                    "type": "string"
                },
                "disk_label": {
                    "type": "string"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.VmDiskCloneDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/update.dto.acropolis.VMDiskAddressDTO"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_group_uuid": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.volumegroups.VolumeGroupConfigDTO": {
            "type": "object",
            "properties": {
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.VolumeAttachmentDTO"
                    },
                    "type": "array"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.VolumeDiskConfigDTO"
                    },
                    "type": "array"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_shared": {
                    "type": "boolean"
                },
                "iscsi_target": {
                    "type": "string"
                },
                "last_modified_timestamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "load_balance_vm_attachments": {
                    "type": "boolean"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "delete.dto.dr.CronScheduleDTO": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "duration_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "every_nth": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_rollup_sched": {
                    "type": "boolean"
                },
                "pd_name": {
                    "type": "string"
                },
                "retention_policy": {
                    "$ref": "#/definitions/delete.dto.dr.RetentionPolicyDTO"
                },
                "rollup_schedule_uuid": {
                    "type": "string"
                },
                "start_times_in_usecs": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "suspended": {
                    "type": "boolean"
                },
                "timezone_offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "SECONDLY",
                        "MINUTELY",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY"
                    ],
                    "type": "string"
                },
                "user_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "values": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "valid_values_range": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.NodeDTO$HbaFirmware": {
            "type": "object",
            "properties": {
                "hba_model": {
                    "type": "string"
                },
                "hba_version": {
                    "type": "string"
                }
            }
        },
        "create.dto.ergon.EntityIdDTO": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "NODE",
                        "VM",
                        "SNAPSHOT",
                        "DISK",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "PACKAGE",
                        "REMOTE_SITE",
                        "VOLUME_GROUP",
                        "IMAGE",
                        "CLUSTER",
                        "TAG",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "FILE_SERVER",
                        "FILE_SERVER_SHARE",
                        "VIRTUAL_NETWORK",
                        "VM_GROUP",
                        "LCM_ENTITY",
                        "MANAGEMENT_SERVER_INFO",
                        "REMOTE_CONNECTION",
                        "AFFINITY_INFO",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "SUPPORT_CASE_UPLOAD",
                        "CLOUD_TRUST",
                        "IDENTITY_PROVIDER",
                        "DUMMY_API",
                        "ABAC_ENTITY_PERMISSION",
                        "ABAC_ENTITY_ROLE",
                        "ABAC_ROLE",
                        "ABAC_CATEGORY",
                        "ABAC_USER_CAPABILITY",
                        "ABAC_ENTITY_CAPABILITY",
                        "PROJECT",
                        "TEMPLATE",
                        "WEBHOOK",
                        "CONTAINER",
                        "CONTAINER_CLUSTER",
                        "DOCKER_REGISTRY",
                        "NETWORK_FUNCTION_CHAIN",
                        "EXTENSION",
                        "RECOVERY_PLAN",
                        "CATALOG_ITEM",
                        "PROTECTION_RULE",
                        "AVAILABILITY_ZONE",
                        "RECOVERY_PLAN_JOB",
                        "ALTAS_VIRTUAL_NETWORK",
                        "FILE",
                        "ACCESS_REQUEST",
                        "JUMPBOX",
                        "SSH_USER",
                        "APP_BLUEPRINT",
                        "MARKETPLACE_ITEM",
                        "STREAMING_POLICY",
                        "DIRECTORY_SERVICE",
                        "SUBNET",
                        "AFFINITY_RULE",
                        "AGS_MANAGED_MACHINE",
                        "DIRECT_CONNECT",
                        "DIRECT_CONNECT_SP",
                        "DIRECT_CONNECT_VIF",
                        "PORT",
                        "DATACENTER",
                        "CELL",
                        "RACK",
                        "NETWORK_DEVICE",
                        "UNDERLAY_SUBNET",
                        "FLOATING_IP",
                        "NETWORK_SECURITY_RULE",
                        "DIRECT_CONNECT_PORT",
                        "CIDR",
                        "BLACKOUT",
                        "ACCESS_CONTROL_POLICY",
                        "APP",
                        "MICROSEG",
                        "ALERT",
                        "SECRET",
                        "FILE_SERVER_SHARE_SNAPSHOT",
                        "IAM_TENANT",
                        "IAM_SERVICE_ACCOUNT",
                        "IAM_SERVICE_PROVIDER",
                        "IAM_IDENTITY_PROVIDER",
                        "RECOVERY_POINT",
                        "VPN_GATEWAY",
                        "VPN_CONNECTION",
                        "ENTITY_SYNC_RULE",
                        "CLUSTER_VSWITCH",
                        "RACKABLE_UNIT",
                        "IAM_SERVICE_ACCOUNT_GROUP",
                        "QOS_POLICY",
                        "NGT_POLICY",
                        "ACTION_RULE",
                        "ACTION_TYPE",
                        "ACTION_TRIGGER_TYPE",
                        "ACTION_INSTANCE",
                        "ACTION_RULE_RESULT",
                        "ROUTING_POLICY",
                        "ID_CATEGORIZATION_MAPPING",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "OVA",
                        "CATALOG_PLACEMENT_POLICY",
                        "EXTERNAL_REPOSITORY",
                        "CLOUD_TENANT",
                        "DEDICATED_DOMAIN",
                        "VPC",
                        "ROUTING_POLICY_COLLECTION"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.MultiFileCertificateUploadDTO": {
            "type": "object",
            "properties": {
                "certificate_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "key_management_server_name": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterRedundancyStateDTO": {
            "type": "object",
            "properties": {
                "current_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "desired_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "redundancy_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.dr.RetentionPolicyDTO": {
            "type": "object",
            "properties": {
                "default_local_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_remote_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_max_snapshots": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_period": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_type": {
                    "enum": [
                        "NUM_SNAPSHOTS",
                        "DAYS",
                        "WEEKS",
                        "MONTHS"
                    ],
                    "type": "string"
                },
                "remote_max_snapshots": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_period": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_type": {
                    "additionalProperties": {
                        "enum": [
                            "NUM_SNAPSHOTS",
                            "DAYS",
                            "WEEKS",
                            "MONTHS"
                        ],
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.ErrorDetails": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "error_code": {
                    "format": "int32",
                    "type": "integer"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "get.dto.health.check.HealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "attribute_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "executed_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.upgrade.UpgradeNotificationDTO": {
            "type": "object",
            "properties": {
                "cancel_message": {
                    "type": "string"
                },
                "description_item_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.upgrade.DescriptionItemDTO"
                    },
                    "type": "array"
                },
                "proceed_message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpTrapDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.SnmpTrapDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "create.dto.uhura.VmDiskCreateDTO": {
            "type": "object",
            "properties": {
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.upgrade.MinimumRequirementsDTO": {
            "type": "object",
            "properties": {
                "memory_gb": {
                    "format": "int32",
                    "type": "integer"
                },
                "storage_gb": {
                    "format": "int32",
                    "type": "integer"
                },
                "v_cpus": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ContainerDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ContainerDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "all_hyperv_nodes_in_failover_cluster": {
                    "type": "boolean"
                },
                "block_serials": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudcluster": {
                    "type": "boolean"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_data_state": {
                    "$ref": "#/definitions/update.dto.multicluster.ClusterDataStateDTO"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_external_ipaddress": {
                    "type": "string"
                },
                "cluster_fully_qualified_domain_name": {
                    "type": "string"
                },
                "cluster_functions": {
                    "items": {
                        "enum": [
                            "NDFS",
                            "MULTICLUSTER",
                            "CLOUDDATAGATEWAY",
                            "MINERVA",
                            "SINGLE_NODE",
                            "TWO_NODE",
                            "PLATFORM"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "cluster_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_masquerading_ipaddress": {
                    "type": "string"
                },
                "cluster_masquerading_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "cluster_redundancy_state": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ClusterRedundancyStateDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "common_criteria_mode": {
                    "type": "boolean"
                },
                "credential": {
                    "$ref": "#/definitions/update.dto.hyperv.CredentialDTO"
                },
                "disable_degraded_node_monitoring": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "enable_efficient_metric_sync": {
                    "type": "boolean"
                },
                "enable_lock_down": {
                    "type": "boolean"
                },
                "enable_on_disk_dedup": {
                    "type": "boolean"
                },
                "enable_password_remote_login_to_cluster": {
                    "type": "boolean"
                },
                "enable_shadow_clones": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "enforce_rackable_unit_aware_placement": {
                    "type": "boolean"
                },
                "external_subnet": {
                    "type": "string"
                },
                "fault_tolerance_domain_type": {
                    "enum": [
                        "RACK",
                        "RACKABLE_UNIT",
                        "NODE",
                        "DISK"
                    ],
                    "type": "string"
                },
                "fingerprint_content_cache_percentage": {
                    "format": "int32",
                    "type": "integer"
                },
                "full_version": {
                    "type": "string"
                },
                "global_nfs_white_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_self_encrypting_drive": {
                    "type": "boolean"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "http_proxies": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.HttpProxyDTO"
                    },
                    "type": "array"
                },
                "hypervisor_lldp_config": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO"
                },
                "hypervisor_security_compliance_config": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO"
                },
                "hypervisor_types": {
                    "items": {
                        "enum": [
                            "kVMware",
                            "kXen",
                            "kHyperv",
                            "kKvm",
                            "kAmazonWebServices",
                            "kVCenter",
                            "kAcropolis",
                            "kSCVMM",
                            "kNull"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "id": {
                    "type": "string"
                },
                "internal_subnet": {
                    "type": "string"
                },
                "is_lts": {
                    "type": "boolean"
                },
                "is_nsenabled": {
                    "type": "boolean"
                },
                "is_registered_to_pc": {
                    "type": "boolean"
                },
                "is_ssp_enabled": {
                    "type": "boolean"
                },
                "is_upgrade_in_progress": {
                    "type": "boolean"
                },
                "iscsi_config": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO$IscsiConfig"
                },
                "management_servers": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.ManagementServerInfoDTO"
                    },
                    "type": "array"
                },
                "multicluster": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "name_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ncc_version": {
                    "type": "string"
                },
                "nos_cluster_and_hosts_domain_joined": {
                    "type": "boolean"
                },
                "ntp_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "num_nodes": {
                    "format": "int64",
                    "type": "integer"
                },
                "operation_mode": {
                    "enum": [
                        "NORMAL",
                        "OVERRIDE",
                        "READONLY",
                        "STANDALONE",
                        "SWITCH_TO_TWO_NODE"
                    ],
                    "type": "string"
                },
                "public_keys": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                    },
                    "type": "array"
                },
                "rackable_units": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.RackableUnitDTO"
                    },
                    "type": "array"
                },
                "security_compliance_config": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO"
                },
                "segmented_iscsi_data_services_ipaddress": {
                    "type": "string"
                },
                "service_centers": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.ServiceCenterDTO"
                    },
                    "type": "array"
                },
                "smtp_server": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.SmtpServerDTO"
                },
                "ssd_pinning_percentage_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_type": {
                    "enum": [
                        "ALL_FLASH",
                        "MIXED",
                        "ALL_HDD"
                    ],
                    "type": "string"
                },
                "support_verbosity_type": {
                    "enum": [
                        "NOTHING",
                        "BASIC",
                        "BASIC_COREDUMP"
                    ],
                    "type": "string"
                },
                "target_version": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "create.dto.health.check.HealthCheckErrorsDTO": {
            "type": "object",
            "properties": {
                "cluster_level": {
                    "items": {
                        "$ref": "#/definitions/create.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                },
                "node_level": {
                    "items": {
                        "$ref": "#/definitions/create.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "javax.ws.rs.core.Response": {
            "type": "object",
            "properties": {}
        },
        "get.dto.uhura.HostGPUDTO": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "gpu_config": {
                    "$ref": "#/definitions/get.dto.uhura.GPUConfigDTO"
                },
                "id": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "num_vgpus_allocated": {
                    "format": "int32",
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertDTO$MetricValueDetails": {
            "type": "object",
            "properties": {
                "metric_threshold_value": {
                    "type": "string"
                },
                "metric_value": {
                    "type": "string"
                },
                "state_change_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.L2NetworkMappingDTO": {
            "type": "object",
            "properties": {
                "dest_hypervisor_type": {
                    "type": "string"
                },
                "dest_network_name": {
                    "type": "string"
                },
                "src_hypervisor_type": {
                    "type": "string"
                },
                "src_network_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.hyperv.ConfigureHypervNodeRequestDTO$HypervNodeDomainConfigurationDTO": {
            "type": "object",
            "properties": {
                "credential": {
                    "$ref": "#/definitions/create.dto.hyperv.CredentialDTO"
                },
                "domain_descriptor": {
                    "$ref": "#/definitions/create.dto.hyperv.DomainDescriptorDTO"
                },
                "force": {
                    "type": "boolean"
                },
                "node_descriptors": {
                    "items": {
                        "$ref": "#/definitions/create.dto.hyperv.HypervNodeDescriptorDTO"
                    },
                    "type": "array"
                },
                "node_name_prefix": {
                    "type": "string"
                },
                "restart": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.appliance.configuration.KMSTypeDTO": {
            "type": "object",
            "properties": {
                "kms_type": {
                    "enum": [
                        "EKM",
                        "LKM"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertPolicyDTO$RelatedPolicies": {
            "type": "object",
            "properties": {
                "entity_uuid": {
                    "type": "string"
                },
                "policy_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.EntityMetadata": {
            "type": "object",
            "properties": {
                "additional_fields": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_hint_field": {
                    "type": "string"
                },
                "context_hint_value": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.dr.VMAttachedSnapshotInfoDTO": {
            "type": "object",
            "properties": {
                "attached_disk_label": {
                    "type": "string"
                },
                "attached_disk_uuid": {
                    "type": "string"
                },
                "disk_detach_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "original_disk_label": {
                    "type": "string"
                },
                "original_disk_uuid": {
                    "type": "string"
                },
                "snapshot_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.dr.RemoteSiteDTO$VStoreInfo": {
            "type": "object",
            "properties": {
                "is_protected": {
                    "type": "boolean"
                },
                "is_stretch_empty": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "metro_pd": {
                    "type": "string"
                },
                "used_physical_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.RemoteSiteDTO": {
            "type": "object",
            "description": "remote-site",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "bandwidth_policy": {
                    "$ref": "#/definitions/get.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_type": {
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_type": {
                    "items": {
                        "enum": [
                            "LIGHT_COMPUTE",
                            "SINGLE_NODE_BACKUP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "credential_name": {
                    "type": "string"
                },
                "cvm_name": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "latency_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metro_ready": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_mapping": {
                    "$ref": "#/definitions/get.dto.dr.NetworkMappingDTO"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "remote_dr_external_subnet": {
                    "type": "string"
                },
                "remote_ip_ports": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_vstore_info": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.dr.RemoteSiteDTO$VStoreInfo"
                    },
                    "type": "object"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "ssh_enabled": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vstore_name_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "checks_in_error": {
                    "additionalProperties": {
                        "$ref": "#/definitions/patch.dto.health.check.HealthCheckErrorsDTO"
                    },
                    "type": "object"
                },
                "detailed_check_summary": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "type": "object"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "health_summary": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpTrapDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.SnmpTrapDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.NdfsFileDTO": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                },
                "file_type": {
                    "enum": [
                        "FILE",
                        "DIRECTORY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "total_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "used_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.dr.RemoteSiteDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.dr.RemoteSiteDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.NetworkConfigDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreStatusDTO": {
            "type": "object",
            "properties": {
                "node_specific_status": {
                    "items": {
                        "$ref": "#/definitions/create.dto.esx.CreateNfsDatastoreStatusDTO$NodeSpecificCreateStatus"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.StatsResponse$StatsSpecificResponse": {
            "type": "object",
            "properties": {
                "interval_in_secs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "successful": {
                    "type": "boolean"
                },
                "values": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.stats.VMDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.stats.VMDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.alerts.ManageAlertsDTO": {
            "type": "object",
            "properties": {
                "alert_status_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.ResolveAcknowledgeAlertDTO"
                    },
                    "type": "array"
                },
                "num_failed_updates": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_successful_updates": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.RemoteSiteRecoverabilityDTO": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "error_code": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "remote_network_mapping_configured": {
                    "type": "boolean"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "un_recoverable_vms": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.acropolis.BootConfigDTO": {
            "type": "object",
            "properties": {
                "boot_device_order": {
                    "items": {
                        "enum": [
                            "CDROM",
                            "DISK",
                            "NIC"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "boot_device_type": {
                    "enum": [
                        "CDROM",
                        "DISK",
                        "NIC"
                    ],
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "mac_addr": {
                    "type": "string"
                },
                "secure_boot": {
                    "type": "boolean"
                },
                "uefi_boot": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.alerts.AlertDTO$SeverityTrail": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string"
                },
                "severity_change_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO$PublicKeyDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "create.dto.uhura.VMPowerStateDTO": {
            "type": "object",
            "properties": {
                "host_uuid": {
                    "type": "string"
                },
                "transition": {
                    "enum": [
                        "ON",
                        "OFF",
                        "POWERCYCLE",
                        "RESET",
                        "PAUSE",
                        "SUSPEND",
                        "RESUME",
                        "SAVE",
                        "ACPI_SHUTDOWN",
                        "ACPI_REBOOT"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.base.ErrorInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.IpConfigDTO$DhcpOptions": {
            "type": "object",
            "properties": {
                "boot_file_name": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "domain_name_servers": {
                    "type": "string"
                },
                "domain_search": {
                    "type": "string"
                },
                "tftp_server_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.CloudCredentialsDTO": {
            "type": "object",
            "properties": {
                "aws_credential": {
                    "$ref": "#/definitions/create.dto.dr.AwsCredentialDTO"
                },
                "azure_credential": {
                    "$ref": "#/definitions/create.dto.dr.AzureCredentialDTO"
                },
                "credential_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "use_as_default": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.acropolis.VMDiskSpecCloneDTO": {
            "type": "object",
            "properties": {
                "container_uuid": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "minimum_size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "snapshot_group_id": {
                    "type": "string"
                },
                "vm_disk_uuid": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "attribute_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "executed_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.base.CommunicationStatusDTO": {
            "type": "object",
            "properties": {
                "last_changed_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_checked_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_transmission_time_stamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/update.dto.base.ParameterizedMessageDTO"
                },
                "status": {
                    "enum": [
                        "SUCCESS",
                        "FAILED",
                        "RETRYING",
                        "UNKNOWN",
                        "DISABLED"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.dr.AwsCredentialDTO": {
            "type": "object",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.NodeDTO$HbaFirmware": {
            "type": "object",
            "properties": {
                "hba_model": {
                    "type": "string"
                },
                "hba_version": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertPolicyDTO": {
            "type": "object",
            "properties": {
                "auto_resolve": {
                    "type": "boolean"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "error_on_conflict": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_updated_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "policies_to_override": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_policies": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO$RelatedPolicies"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "trigger_conditions": {
                    "items": {
                        "$ref": "#/definitions/create.dto.alerts.AlertPolicyDTO$TriggerCondition"
                    },
                    "type": "array"
                },
                "trigger_wait_period_in_secs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/patch.dto.alerts.AlertSummaryDTO"
                },
                "all_hyperv_nodes_in_failover_cluster": {
                    "type": "boolean"
                },
                "block_serials": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudcluster": {
                    "type": "boolean"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_data_state": {
                    "$ref": "#/definitions/patch.dto.multicluster.ClusterDataStateDTO"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_external_ipaddress": {
                    "type": "string"
                },
                "cluster_fully_qualified_domain_name": {
                    "type": "string"
                },
                "cluster_functions": {
                    "items": {
                        "enum": [
                            "NDFS",
                            "MULTICLUSTER",
                            "CLOUDDATAGATEWAY",
                            "MINERVA",
                            "SINGLE_NODE",
                            "TWO_NODE",
                            "PLATFORM"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "cluster_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_masquerading_ipaddress": {
                    "type": "string"
                },
                "cluster_masquerading_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "cluster_redundancy_state": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterRedundancyStateDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "common_criteria_mode": {
                    "type": "boolean"
                },
                "credential": {
                    "$ref": "#/definitions/patch.dto.hyperv.CredentialDTO"
                },
                "disable_degraded_node_monitoring": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "enable_efficient_metric_sync": {
                    "type": "boolean"
                },
                "enable_lock_down": {
                    "type": "boolean"
                },
                "enable_on_disk_dedup": {
                    "type": "boolean"
                },
                "enable_password_remote_login_to_cluster": {
                    "type": "boolean"
                },
                "enable_shadow_clones": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "enforce_rackable_unit_aware_placement": {
                    "type": "boolean"
                },
                "external_subnet": {
                    "type": "string"
                },
                "fault_tolerance_domain_type": {
                    "enum": [
                        "RACK",
                        "RACKABLE_UNIT",
                        "NODE",
                        "DISK"
                    ],
                    "type": "string"
                },
                "fingerprint_content_cache_percentage": {
                    "format": "int32",
                    "type": "integer"
                },
                "full_version": {
                    "type": "string"
                },
                "global_nfs_white_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_self_encrypting_drive": {
                    "type": "boolean"
                },
                "health_summary": {
                    "$ref": "#/definitions/patch.dto.health.check.HealthSummaryDTO"
                },
                "http_proxies": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.appliance.configuration.HttpProxyDTO"
                    },
                    "type": "array"
                },
                "hypervisor_lldp_config": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO"
                },
                "hypervisor_security_compliance_config": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO"
                },
                "hypervisor_types": {
                    "items": {
                        "enum": [
                            "kVMware",
                            "kXen",
                            "kHyperv",
                            "kKvm",
                            "kAmazonWebServices",
                            "kVCenter",
                            "kAcropolis",
                            "kSCVMM",
                            "kNull"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "id": {
                    "type": "string"
                },
                "internal_subnet": {
                    "type": "string"
                },
                "is_lts": {
                    "type": "boolean"
                },
                "is_nsenabled": {
                    "type": "boolean"
                },
                "is_registered_to_pc": {
                    "type": "boolean"
                },
                "is_ssp_enabled": {
                    "type": "boolean"
                },
                "is_upgrade_in_progress": {
                    "type": "boolean"
                },
                "iscsi_config": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO$IscsiConfig"
                },
                "management_servers": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.uhura.ManagementServerInfoDTO"
                    },
                    "type": "array"
                },
                "multicluster": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "name_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ncc_version": {
                    "type": "string"
                },
                "nos_cluster_and_hosts_domain_joined": {
                    "type": "boolean"
                },
                "ntp_servers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "num_nodes": {
                    "format": "int64",
                    "type": "integer"
                },
                "operation_mode": {
                    "enum": [
                        "NORMAL",
                        "OVERRIDE",
                        "READONLY",
                        "STANDALONE",
                        "SWITCH_TO_TWO_NODE"
                    ],
                    "type": "string"
                },
                "public_keys": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO$PublicKeyDTO"
                    },
                    "type": "array"
                },
                "rackable_units": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.appliance.configuration.RackableUnitDTO"
                    },
                    "type": "array"
                },
                "security_compliance_config": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO"
                },
                "segmented_iscsi_data_services_ipaddress": {
                    "type": "string"
                },
                "service_centers": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.appliance.configuration.ServiceCenterDTO"
                    },
                    "type": "array"
                },
                "smtp_server": {
                    "$ref": "#/definitions/patch.dto.appliance.configuration.SmtpServerDTO"
                },
                "ssd_pinning_percentage_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_type": {
                    "enum": [
                        "ALL_FLASH",
                        "MIXED",
                        "ALL_HDD"
                    ],
                    "type": "string"
                },
                "support_verbosity_type": {
                    "enum": [
                        "NOTHING",
                        "BASIC",
                        "BASIC_COREDUMP"
                    ],
                    "type": "string"
                },
                "target_version": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "create.dto.hyperv.HypervNodeDescriptorDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO": {
            "type": "object",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "properties": {
                "bandwidth_configurations": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array"
                },
                "default_bandwidth_limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy_name": {
                    "type": "string"
                },
                "policy_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.encryption.ClusterEncryptionStatusDTO": {
            "type": "object",
            "properties": {
                "desired_password_protection": {
                    "type": "boolean"
                },
                "disk_encryption_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "is_cluster_empty": {
                    "type": "boolean"
                },
                "is_ready_for_password_protection": {
                    "type": "boolean"
                },
                "is_ready_for_software_encryption": {
                    "type": "boolean"
                },
                "software_encryption_scope": {
                    "enum": [
                        "CLUSTER",
                        "STORAGE_CONTAINER"
                    ],
                    "type": "string"
                },
                "storage_container_encryption_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.ResultMetadata": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/get.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "#/definitions/get.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.TestRemoteSiteConnectionResponseDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.appliance.configuration.ServiceCenterDTO": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertDTO": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledged_by_username": {
                    "type": "string"
                },
                "acknowledged_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "affected_entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertDTO$AffectedEntity"
                    },
                    "type": "array"
                },
                "alert_details": {
                    "$ref": "#/definitions/get.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alert_title": {
                    "type": "string"
                },
                "alert_type_uuid": {
                    "type": "string"
                },
                "auto_resolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_id": {
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "context_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "created_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailed_message": {
                    "type": "string"
                },
                "entity_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_occurrence_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "operation_type": {
                    "type": "string"
                },
                "originating_cluster_uuid": {
                    "type": "string"
                },
                "possible_causes": {
                    "items": {
                        "$ref": "#/definitions/get.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolved_by_username": {
                    "type": "string"
                },
                "resolved_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "service_vmid": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "user_defined": {
                    "type": "boolean"
                }
            }
        },
        "org.slf4j.Logger": {
            "type": "object",
            "properties": {
                "root_logger_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO": {
            "type": "object",
            "properties": {
                "iscsi_client": {
                    "$ref": "#/definitions/create.dto.acropolis.volumegroups.IscsiClientDTO"
                },
                "iscsi_client_ip": {
                    "type": "string"
                },
                "iscsi_initiator": {
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "operation": {
                    "enum": [
                        "ATTACH",
                        "DETACH"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreStatusDTO$NodeSpecificCreateStatus": {
            "type": "object",
            "properties": {
                "capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "free_space": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_ip_address": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.ResultContentDescriptor": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/create.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "get.dto.ResultContentDescriptor$Perspective": {
            "type": "object",
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/get.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "get.dto.prismcentral.PrismCentralSizeDTO": {
            "type": "object",
            "properties": {
                "disk_size_in_gib": {
                    "format": "int32",
                    "type": "integer"
                },
                "memory_size_in_gib": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_vms_supported": {
                    "format": "int32",
                    "type": "integer"
                },
                "pc_vm_form_factor": {
                    "type": "string"
                },
                "vcpus": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "update.dto.authconfig.OpenLdapConfigDTO": {
            "type": "object",
            "description": "Open LDAP configuration",
            "properties": {
                "group_member_attribute": {
                    "type": "string"
                },
                "group_member_attribute_value": {
                    "type": "string"
                },
                "group_object_class": {
                    "type": "string"
                },
                "group_search_base": {
                    "type": "string"
                },
                "user_object_class": {
                    "type": "string"
                },
                "user_search_base": {
                    "type": "string"
                },
                "username_attribute": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.HttpProxyDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.HttpProxyDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.dr.AddVMsToPdRequestDTO": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group_name": {
                    "type": "string"
                },
                "ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ignore_dup_or_missing_vms": {
                    "type": "boolean"
                },
                "names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.ResultContentDescriptor": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/get.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "#/definitions/get.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.acropolis.SnapshotInfoDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.SnapshotInfoDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.appliance.configuration.HttpProxyDTO": {
            "type": "object",
            "description": "http-proxy",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "proxy_types": {
                    "items": {
                        "enum": [
                            "HTTP",
                            "HTTPS",
                            "SOCKS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.KeyManagementServerDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "ip_address_port_map": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.uhura.VmDiskUpdateDTO": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.VMDiskDTO"
                    },
                    "type": "array"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "java.lang.Object": {
            "type": "object",
            "properties": {}
        },
        "get.dto.acropolis.IpConfigDTO": {
            "type": "object",
            "properties": {
                "default_gateway": {
                    "type": "string"
                },
                "dhcp_options": {
                    "$ref": "#/definitions/get.dto.acropolis.IpConfigDTO$DhcpOptions"
                },
                "dhcp_server_address": {
                    "type": "string"
                },
                "network_address": {
                    "type": "string"
                },
                "pool": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.IpConfigDTO$IpPool"
                    },
                    "type": "array"
                },
                "prefix_length": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.acropolis.VMDiskDTO": {
            "type": "object",
            "properties": {
                "disk_address": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskAddressDTO"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_scsi_pass_through": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "vm_disk_clone": {
                    "$ref": "#/definitions/get.dto.acropolis.VMDiskSpecCloneDTO"
                },
                "vm_disk_create": {
                    "$ref": "#/definitions/get.dto.acropolis.VmDiskSpecCreateDTO"
                }
            }
        },
        "patch.dto.dr.L2NetworkMappingDTO": {
            "type": "object",
            "properties": {
                "dest_hypervisor_type": {
                    "type": "string"
                },
                "dest_network_name": {
                    "type": "string"
                },
                "src_hypervisor_type": {
                    "type": "string"
                },
                "src_network_name": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.ProtectionDomainDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "annotations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cron_schedules": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.CronScheduleDTO"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "hybrid_schedules_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "metro_avail": {
                    "$ref": "#/definitions/get.dto.dr.ProtectionDomainDTO$Stretch"
                },
                "min_snapshot_to_retain": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_snapshot_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "nfs_files": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.NfsFile"
                    },
                    "type": "array"
                },
                "ongoing_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "pending_replication_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "remote_site_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "schedules_suspended": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "sync_replications": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.SyncReplicationDTO"
                    },
                    "type": "array"
                },
                "total_user_written_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vms": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "volume_groups": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.VolumeGroup"
                    },
                    "type": "array"
                },
                "vstore_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.QueryVMSnapshotInfoDTO": {
            "type": "object",
            "properties": {
                "disk_labels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "disk_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "flr_capabale": {
                    "type": "boolean"
                },
                "locally_avaiable": {
                    "type": "boolean"
                },
                "remote_sites": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "snapshot_create_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_expiry_time": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshot_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.multicluster.ClusterDataStateDTO": {
            "type": "object",
            "properties": {
                "cluster_available": {
                    "type": "boolean"
                },
                "cluster_data_available": {
                    "type": "boolean"
                },
                "cluster_register_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "first_unavailable_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_alerts_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_arithmos_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "delete.dto.dr.RetentionPolicyDTO": {
            "type": "object",
            "properties": {
                "default_local_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_remote_retention": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_max_snapshots": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_period": {
                    "format": "int32",
                    "type": "integer"
                },
                "local_retention_type": {
                    "enum": [
                        "NUM_SNAPSHOTS",
                        "DAYS",
                        "WEEKS",
                        "MONTHS"
                    ],
                    "type": "string"
                },
                "remote_max_snapshots": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_period": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_retention_type": {
                    "additionalProperties": {
                        "enum": [
                            "NUM_SNAPSHOTS",
                            "DAYS",
                            "WEEKS",
                            "MONTHS"
                        ],
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.dr.AzureCredentialDTO": {
            "type": "object",
            "properties": {
                "secure_file_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreRequestDTO": {
            "type": "object",
            "properties": {
                "datastore_name": {
                    "type": "string"
                },
                "node_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.appliance.configuration.AlertConfigDTO$EmailTemplate": {
            "type": "object",
            "properties": {
                "body_suffix": {
                    "type": "string"
                },
                "subject_prefix": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.VMNicSpecDTO": {
            "type": "object",
            "properties": {
                "adapter_type": {
                    "enum": [
                        "E1000",
                        "E1000e",
                        "PCNet32",
                        "Vmxnet",
                        "Vmxnet2",
                        "Vmxnet3",
                        "Unsupported"
                    ],
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_connected": {
                    "type": "boolean"
                },
                "mac_address": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "network_uuid": {
                    "type": "string"
                },
                "nic_uuid": {
                    "type": "string"
                },
                "port_id": {
                    "type": "string"
                },
                "request_ip": {
                    "type": "boolean"
                },
                "requested_ip_address": {
                    "type": "string"
                },
                "vlan_mode": {
                    "enum": [
                        "Access",
                        "Trunked",
                        "Untagged"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.IpConfigDTO$IpPool": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.SpotlightSearchResultDTO": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "field_name": {
                    "type": "string"
                },
                "field_value": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.DomainFaultToleranceStatusDTO": {
            "type": "object",
            "properties": {
                "cluster_non_fault_tolerant_entries": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_under_replicated_data_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "component_fault_tolerance_status": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.ComponentFaultToleranceStatusDTO"
                    },
                    "type": "object"
                },
                "domain_type": {
                    "enum": [
                        "RACK",
                        "RACKABLE_UNIT",
                        "NODE",
                        "DISK"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.TimedBoolDTO": {
            "type": "object",
            "properties": {
                "duration": {
                    "format": "int64",
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "patch.dto.ResultMetadata$Filter": {
            "type": "object",
            "properties": {
                "display_for_rhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.NodePositionDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ordinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "physical_position": {
                    "enum": [
                        "C",
                        "L",
                        "R",
                        "TL",
                        "TR",
                        "BL",
                        "BR"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.VMRestoreDTO": {
            "type": "object",
            "properties": {
                "restore_network_configuration": {
                    "type": "boolean"
                },
                "snapshot_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_logical_time_stamp": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.acropolis.IpConfigDTO": {
            "type": "object",
            "properties": {
                "default_gateway": {
                    "type": "string"
                },
                "dhcp_options": {
                    "$ref": "#/definitions/update.dto.acropolis.IpConfigDTO$DhcpOptions"
                },
                "dhcp_server_address": {
                    "type": "string"
                },
                "network_address": {
                    "type": "string"
                },
                "pool": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.IpConfigDTO$IpPool"
                    },
                    "type": "array"
                },
                "prefix_length": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.appliance.configuration.ContainerDTO": {
            "type": "object",
            "properties": {
                "advertised_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alert_summary": {
                    "$ref": "#/definitions/create.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "compression_delay_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "container_uuid": {
                    "type": "string"
                },
                "down_migrate_times_in_secs": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "enable_software_encryption": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "erasure_code": {
                    "type": "string"
                },
                "erasure_code_delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/create.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilm_policy": {
                    "type": "string"
                },
                "is_nutanix_managed": {
                    "type": "boolean"
                },
                "mapped_remote_containers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfs_whitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfs_whitelist_inherited": {
                    "type": "boolean"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplog_replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "prefer_higher_ecfault_domain": {
                    "type": "boolean"
                },
                "random_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seq_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "total_explicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "total_implicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vstore_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpUserDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.SnmpUserDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "create.dto.hyperv.ConfigureHypervNodeRequestDTO$RestartConfigurationDTO": {
            "type": "object",
            "properties": {
                "delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "node_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.authconfig.DirectoryConfigDTO": {
            "type": "object",
            "description": "directory-config",
            "properties": {
                "connection_type": {
                    "enum": [
                        "LDAP"
                    ],
                    "type": "string"
                },
                "directory_type": {
                    "enum": [
                        "ACTIVE_DIRECTORY",
                        "OPEN_LDAP"
                    ],
                    "type": "string"
                },
                "directory_url": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "group_search_type": {
                    "enum": [
                        "RECURSIVE",
                        "NON_RECURSIVE"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_ldap_config": {
                    "$ref": "#/definitions/update.dto.authconfig.OpenLdapConfigDTO"
                },
                "service_account_password": {
                    "type": "string"
                },
                "service_account_username": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.KMSTypeDTO": {
            "type": "object",
            "properties": {
                "kms_type": {
                    "enum": [
                        "EKM",
                        "LKM"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.dr.SyncReplicationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.dr.VolumeGroup": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nfs_file_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.volumegroups.IscsiClientDTO": {
            "type": "object",
            "properties": {
                "client_address": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.ResultContentDescriptor": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/update.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "#/definitions/update.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.encryption.KeyBackupPasswordDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "get.dto.health.check.HealthSummaryDTO": {
            "type": "object",
            "properties": {
                "entity_type_summaries": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "health_check_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckSummaryDTO"
                    },
                    "type": "object"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.hyperv.ConfigureHypervNodeRequestDTO$FailoverClusterDTO": {
            "type": "object",
            "properties": {
                "credential": {
                    "$ref": "#/definitions/get.dto.hyperv.CredentialDTO"
                },
                "ip_address": {
                    "type": "string"
                },
                "member_nodes": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "node_to_remove": {
                    "type": "string"
                },
                "node_uuid_to_remove": {
                    "type": "string"
                },
                "node_uuids_to_add": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodes_to_add": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.uhura.VmDiskInfoDTO": {
            "type": "object",
            "properties": {
                "data_source_url": {
                    "type": "string"
                },
                "disk_address": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskAddressDTO"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "is_empty": {
                    "type": "boolean"
                },
                "is_hot_remove_enabled": {
                    "type": "boolean"
                },
                "is_scsi_passthrough": {
                    "type": "boolean"
                },
                "is_thin_provisioned": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "source_disk_address": {
                    "$ref": "#/definitions/create.dto.acropolis.VMDiskAddressDTO"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.alerts.AlertDTO$SeverityTrail": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string"
                },
                "severity_change_timestamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO$UpgradeSpec": {
            "type": "object",
            "properties": {
                "container_uuid": {
                    "type": "string"
                },
                "preserve_data": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ContainerDTO": {
            "type": "object",
            "properties": {
                "advertised_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alert_summary": {
                    "$ref": "#/definitions/update.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "compression_delay_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "container_uuid": {
                    "type": "string"
                },
                "down_migrate_times_in_secs": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "enable_software_encryption": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "erasure_code": {
                    "type": "string"
                },
                "erasure_code_delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/update.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilm_policy": {
                    "type": "string"
                },
                "is_nutanix_managed": {
                    "type": "boolean"
                },
                "mapped_remote_containers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfs_whitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfs_whitelist_inherited": {
                    "type": "boolean"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplog_replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "prefer_higher_ecfault_domain": {
                    "type": "boolean"
                },
                "random_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seq_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "total_explicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "total_implicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vstore_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.appliance.configuration.RemoteTunnelDetailsDTO": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "$ref": "#/definitions/update.dto.base.CommunicationStatusDTO"
                },
                "http_proxy": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.HttpProxyDTO"
                },
                "service_center": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.ServiceCenterDTO"
                },
                "transport_status": {
                    "$ref": "#/definitions/update.dto.base.CommunicationStatusDTO"
                }
            }
        },
        "get.dto.appliance.configuration.NodeDTO": {
            "type": "object",
            "properties": {
                "acropolis_connection_state": {
                    "type": "string"
                },
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "backplane_ip": {
                    "type": "string"
                },
                "bios_model": {
                    "type": "string"
                },
                "bios_version": {
                    "type": "string"
                },
                "block_location": {
                    "type": "string"
                },
                "block_model": {
                    "type": "string"
                },
                "block_model_name": {
                    "type": "string"
                },
                "block_serial": {
                    "type": "string"
                },
                "bmc_model": {
                    "type": "string"
                },
                "bmc_version": {
                    "type": "string"
                },
                "boot_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "controller_vm_backplane_ip": {
                    "type": "string"
                },
                "cpu_capacity_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_frequency_in_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "cpu_model": {
                    "type": "string"
                },
                "default_vhd_container_id": {
                    "type": "string"
                },
                "default_vhd_container_uuid": {
                    "type": "string"
                },
                "default_vhd_location": {
                    "type": "string"
                },
                "default_vhd_storage_container_id": {
                    "type": "string"
                },
                "default_vhd_storage_container_uuid": {
                    "type": "string"
                },
                "default_vm_container_id": {
                    "type": "string"
                },
                "default_vm_container_uuid": {
                    "type": "string"
                },
                "default_vm_location": {
                    "type": "string"
                },
                "default_vm_storage_container_id": {
                    "type": "string"
                },
                "default_vm_storage_container_uuid": {
                    "type": "string"
                },
                "disk_hardware_configs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.DiskHardwareConfigDTO"
                    },
                    "type": "object"
                },
                "dynamic_ring_changing_node": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO"
                },
                "failover_cluster_fqdn": {
                    "type": "string"
                },
                "failover_cluster_node_state": {
                    "type": "string"
                },
                "gpu_driver_version": {
                    "type": "string"
                },
                "has_csr": {
                    "type": "boolean"
                },
                "hba_firmwares_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.NodeDTO$HbaFirmware"
                    },
                    "type": "array"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "host_gpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_in_maintenance_mode": {
                    "type": "boolean"
                },
                "host_maintenance_mode_reason": {
                    "type": "string"
                },
                "host_nic_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "host_type": {
                    "enum": [
                        "HYPER_CONVERGED",
                        "COMPUTE_ONLY"
                    ],
                    "type": "string"
                },
                "hypervisor_address": {
                    "type": "string"
                },
                "hypervisor_full_name": {
                    "type": "string"
                },
                "hypervisor_key": {
                    "type": "string"
                },
                "hypervisor_password": {
                    "type": "string"
                },
                "hypervisor_state": {
                    "type": "string"
                },
                "hypervisor_type": {
                    "type": "string"
                },
                "hypervisor_username": {
                    "type": "string"
                },
                "ipmi_address": {
                    "type": "string"
                },
                "ipmi_password": {
                    "type": "string"
                },
                "ipmi_username": {
                    "type": "string"
                },
                "is_degraded": {
                    "type": "boolean"
                },
                "is_secure_booted": {
                    "type": "boolean"
                },
                "key_management_device_to_certificate_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "management_server_name": {
                    "type": "string"
                },
                "memory_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata_store_status": {
                    "type": "string"
                },
                "metadata_store_status_message": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "num_cpu_cores": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_sockets": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_cpu_threads": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vms": {
                    "format": "int64",
                    "type": "integer"
                },
                "oplog_disk_pct": {
                    "format": "float",
                    "type": "number"
                },
                "oplog_disk_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "position": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.NodePositionDTO"
                },
                "rdma_backplane_ips": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reboot_pending": {
                    "type": "boolean"
                },
                "removal_status": {
                    "items": {
                        "enum": [
                            "NA",
                            "AWAITING_CONFIG_DATA_MIGRATION",
                            "AWAITING_DATA_MIGRATION",
                            "AWAITING_HOST_EVACUATION",
                            "AWAITING_CLUSTER_RESTART",
                            "AWAITING_MASTER_KEY_MIGRATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "serial": {
                    "type": "string"
                },
                "service_vmexternal_ip": {
                    "type": "string"
                },
                "service_vmid": {
                    "type": "string"
                },
                "service_vmnat_ip": {
                    "type": "string"
                },
                "service_vmnat_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "enum": [
                        "NEW",
                        "NORMAL",
                        "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE",
                        "DETACHABLE"
                    ],
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vzone_name": {
                    "type": "string"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {
                "enable_snmpv3_only": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.alerts.AlertDTO": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledged_by_username": {
                    "type": "string"
                },
                "acknowledged_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "affected_entities": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertDTO$AffectedEntity"
                    },
                    "type": "array"
                },
                "alert_details": {
                    "$ref": "#/definitions/update.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alert_title": {
                    "type": "string"
                },
                "alert_type_uuid": {
                    "type": "string"
                },
                "auto_resolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_id": {
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "context_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "context_values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "created_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailed_message": {
                    "type": "string"
                },
                "entity_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_occurrence_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "operation_type": {
                    "type": "string"
                },
                "originating_cluster_uuid": {
                    "type": "string"
                },
                "possible_causes": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolved_by_username": {
                    "type": "string"
                },
                "resolved_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "service_vmid": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "user_defined": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.uhura.VmConfigDTO": {
            "type": "object",
            "properties": {
                "allow_live_migrate": {
                    "type": "boolean"
                },
                "boot": {
                    "$ref": "#/definitions/update.dto.acropolis.BootConfigDTO"
                },
                "cbr_not_capable_reason": {
                    "type": "string"
                },
                "clear_affinity": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "gpus_assigned": {
                    "type": "boolean"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "guest_os": {
                    "type": "string"
                },
                "ha_priority": {
                    "format": "int64",
                    "type": "integer"
                },
                "host_uuid": {
                    "type": "string"
                },
                "machine_type": {
                    "enum": [
                        "PC",
                        "PSERIES",
                        "Q35"
                    ],
                    "type": "string"
                },
                "memory_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "memory_reservation_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_cores_per_vcpu": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int32",
                    "type": "integer"
                },
                "power_state": {
                    "enum": [
                        "UNKNOWN",
                        "OFF",
                        "POWERING_ON",
                        "ON",
                        "SHUTTING_DOWN",
                        "POWERING_OFF",
                        "PAUSING",
                        "PAUSED",
                        "SUSPENDING",
                        "SUSPENDED",
                        "RESUMING",
                        "RESETTING",
                        "MIGRATING"
                    ],
                    "type": "string"
                },
                "serial_ports": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.SerialPortConfigDTO"
                    },
                    "type": "array"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "tools_installer_mounted": {
                    "type": "boolean"
                },
                "tools_running_status": {
                    "enum": [
                        "UNKNOWN",
                        "GUEST_TOOLS_EXECUTING_SCRIPTS",
                        "GUEST_TOOLS_NOT_RUNNING",
                        "GUEST_TOOLS_RUNNING"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vcpu_reservation_hz": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_customization_config": {
                    "$ref": "#/definitions/update.dto.acropolis.VMCustomizationConfigDTO"
                },
                "vm_disk_info": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.VmDiskInfoDTO"
                    },
                    "type": "array"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.VMDiskDTO"
                    },
                    "type": "array"
                },
                "vm_features": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                },
                "vm_gpus": {
                    "items": {
                        "$ref": "#/definitions/update.dto.uhura.GPUConfigDTO"
                    },
                    "type": "array"
                },
                "vm_logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_nics": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.RackableUnitDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "node_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodes": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "positions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rackable_unit_uuid": {
                    "type": "string"
                },
                "serial": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.HaConfigDTO": {
            "type": "object",
            "properties": {
                "failover_enabled": {
                    "type": "boolean"
                },
                "failover_in_progress_host_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ha_state": {
                    "enum": [
                        "HIGHLY_AVAILABLE",
                        "HEALING",
                        "BEST_EFFORT",
                        "DISABLED"
                    ],
                    "type": "string"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_host_failures_to_tolerate": {
                    "format": "int64",
                    "type": "integer"
                },
                "reservation_type": {
                    "enum": [
                        "RESERVE_HOSTS",
                        "RESERVE_SEGMENTS",
                        "NO_RESERVATIONS"
                    ],
                    "type": "string"
                },
                "reserved_host_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.acropolis.NetworkConfigDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "ip_config": {
                    "$ref": "#/definitions/create.dto.acropolis.IpConfigDTO"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "enum": [
                        "EXTERNAL",
                        "INTERNAL"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vlan_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "vswitch_name": {
                    "type": "string"
                }
            }
        },
        "get.dto.vstore.VStoreDTO": {
            "type": "object",
            "description": "vStore",
            "properties": {
                "backedup": {
                    "type": "boolean"
                },
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "is_backup": {
                    "type": "boolean"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protection_domain": {
                    "type": "string"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_level_consistent": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.multicluster.ClusterDataStateDTO": {
            "type": "object",
            "properties": {
                "cluster_available": {
                    "type": "boolean"
                },
                "cluster_data_available": {
                    "type": "boolean"
                },
                "cluster_register_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "first_unavailable_time_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_alerts_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_arithmos_data_transferred_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.CloudCredentialsDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.network.HostVirtualNicDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dhcp_enabled": {
                    "type": "boolean"
                },
                "host_id": {
                    "type": "string"
                },
                "host_nics": {
                    "items": {
                        "$ref": "#/definitions/get.dto.network.HostNicDTO"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "ipv4_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ipv6_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "link_speed_in_kbps": {
                    "format": "int32",
                    "type": "integer"
                },
                "mac_address": {
                    "type": "string"
                },
                "mtu_in_bytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vlan_id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "patch.dto.alerts.AlertSummaryDTO": {
            "type": "object",
            "properties": {
                "alert_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;"
                    },
                    "type": "object"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.PdPendingActionsDTO": {
            "type": "object",
            "properties": {
                "has_pending_actions": {
                    "type": "boolean"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "pending_change_mode": {
                    "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO$PendingChangeMode"
                },
                "pending_nfs_files_restore": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO$PendingEntityRestore"
                    },
                    "type": "array"
                },
                "pending_replications": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO$PendingReplication"
                    },
                    "type": "array"
                },
                "pending_vms_restore": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.PdPendingActionsDTO$PendingEntityRestore"
                    },
                    "type": "array"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "to_be_removed_nfs_files": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "to_be_removed_snapshots": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "to_be_removed_vms": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.SubnetDTO": {
            "type": "object",
            "properties": {
                "availability_zone": {
                    "type": "string"
                },
                "available_ip_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_avail_zone": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "subnet_cidr": {
                    "type": "string"
                },
                "subnet_id": {
                    "type": "string"
                },
                "vpc_id": {
                    "type": "string"
                },
                "vpn_state": {
                    "enum": [
                        "AVAILABLE",
                        "IMPAIRED",
                        "UNAVAILABLE",
                        "UNKNOWN"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.ReturnValueDTO$NetworkIdDTO": {
            "type": "object",
            "properties": {
                "network_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.encryption.KMSTestResultsDTO": {
            "type": "object",
            "properties": {
                "key_management_server_name": {
                    "type": "string"
                },
                "key_management_server_uuid": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "result_list": {
                    "items": {
                        "$ref": "#/definitions/get.dto.encryption.KMSStatusPerIpAddressDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.base.ParameterizedMessageDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "get.dto.uhura.GPUConfigDTO": {
            "type": "object",
            "properties": {
                "assignable": {
                    "type": "boolean"
                },
                "device_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_name": {
                    "type": "string"
                },
                "fraction": {
                    "format": "int32",
                    "type": "integer"
                },
                "frame_buffer_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "gpu_mode": {
                    "enum": [
                        "UNUSED",
                        "USED_FOR_PASSTHROUGH",
                        "USED_FOR_VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_profile": {
                    "type": "string"
                },
                "gpu_type": {
                    "enum": [
                        "PASS_THROUGH_GRAPHICS",
                        "PASS_THROUGH_COMPUTE",
                        "VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_vendor": {
                    "enum": [
                        "NVIDIA",
                        "INTEL",
                        "AMD"
                    ],
                    "type": "string"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "licenses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "max_instances_per_vm": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_resolution": {
                    "type": "string"
                },
                "num_virtual_display_heads": {
                    "format": "int32",
                    "type": "integer"
                },
                "numa_node": {
                    "format": "int32",
                    "type": "integer"
                },
                "sbdf": {
                    "type": "string"
                },
                "vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.L2NetworkMappingDTO": {
            "type": "object",
            "properties": {
                "dest_hypervisor_type": {
                    "type": "string"
                },
                "dest_network_name": {
                    "type": "string"
                },
                "src_hypervisor_type": {
                    "type": "string"
                },
                "src_network_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.ClusterDTO$PublicKeyDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.VmRecoverabilityDTO": {
            "type": "object",
            "properties": {
                "cerebro_error": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "remote_site": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.SnmpTrapDTO": {
            "type": "object",
            "properties": {
                "community_string": {
                    "type": "string"
                },
                "engine_id": {
                    "type": "string"
                },
                "inform": {
                    "type": "boolean"
                },
                "log": {
                    "$ref": "#/definitions/org.slf4j.Logger"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "receiver_name": {
                    "type": "string"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                },
                "trap_address": {
                    "type": "string"
                },
                "trap_username": {
                    "type": "string"
                },
                "version": {
                    "enum": [
                        "SNMPv2C",
                        "SNMPv3"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.health.check.HealthCheckErrorsDTO": {
            "type": "object",
            "properties": {
                "cluster_level": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                },
                "node_level": {
                    "items": {
                        "$ref": "#/definitions/update.dto.health.check.ErrorInfoDTO"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.authconfig.AutoLoginInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "service_account_dto": {
                    "$ref": "#/definitions/update.dto.authconfig.ServiceAccountDTO"
                }
            }
        },
        "create.dto.dr.ReplicationLinkDTO": {
            "type": "object",
            "properties": {
                "current_replicating_snapshot_id": {
                    "type": "string"
                },
                "current_replicating_snapshot_total_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "current_replicating_snapshot_transmitted_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_replication_end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_replication_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_replication_snapshot_id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.uhura.SerialPortConfigDTO": {
            "type": "object",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "NULL",
                        "SERVER"
                    ],
                    "type": "string"
                }
            }
        },
        "create.dto.ergon.EntityIdRequestDTO": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "enum": [
                        "NODE",
                        "VM",
                        "SNAPSHOT",
                        "DISK",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "PACKAGE",
                        "REMOTE_SITE",
                        "VOLUME_GROUP",
                        "IMAGE",
                        "CLUSTER",
                        "TAG",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "FILE_SERVER",
                        "FILE_SERVER_SHARE",
                        "VIRTUAL_NETWORK",
                        "VM_GROUP",
                        "LCM_ENTITY",
                        "MANAGEMENT_SERVER_INFO",
                        "REMOTE_CONNECTION",
                        "AFFINITY_INFO",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "SUPPORT_CASE_UPLOAD",
                        "CLOUD_TRUST",
                        "IDENTITY_PROVIDER",
                        "DUMMY_API",
                        "ABAC_ENTITY_PERMISSION",
                        "ABAC_ENTITY_ROLE",
                        "ABAC_ROLE",
                        "ABAC_CATEGORY",
                        "ABAC_USER_CAPABILITY",
                        "ABAC_ENTITY_CAPABILITY",
                        "PROJECT",
                        "TEMPLATE",
                        "WEBHOOK",
                        "CONTAINER",
                        "CONTAINER_CLUSTER",
                        "DOCKER_REGISTRY",
                        "NETWORK_FUNCTION_CHAIN",
                        "EXTENSION",
                        "RECOVERY_PLAN",
                        "CATALOG_ITEM",
                        "PROTECTION_RULE",
                        "AVAILABILITY_ZONE",
                        "RECOVERY_PLAN_JOB",
                        "ALTAS_VIRTUAL_NETWORK",
                        "FILE",
                        "ACCESS_REQUEST",
                        "JUMPBOX",
                        "SSH_USER",
                        "APP_BLUEPRINT",
                        "MARKETPLACE_ITEM",
                        "STREAMING_POLICY",
                        "DIRECTORY_SERVICE",
                        "SUBNET",
                        "AFFINITY_RULE",
                        "AGS_MANAGED_MACHINE",
                        "DIRECT_CONNECT",
                        "DIRECT_CONNECT_SP",
                        "DIRECT_CONNECT_VIF",
                        "PORT",
                        "DATACENTER",
                        "CELL",
                        "RACK",
                        "NETWORK_DEVICE",
                        "UNDERLAY_SUBNET",
                        "FLOATING_IP",
                        "NETWORK_SECURITY_RULE",
                        "DIRECT_CONNECT_PORT",
                        "CIDR",
                        "BLACKOUT",
                        "ACCESS_CONTROL_POLICY",
                        "APP",
                        "MICROSEG",
                        "ALERT",
                        "SECRET",
                        "FILE_SERVER_SHARE_SNAPSHOT",
                        "IAM_TENANT",
                        "IAM_SERVICE_ACCOUNT",
                        "IAM_SERVICE_PROVIDER",
                        "IAM_IDENTITY_PROVIDER",
                        "RECOVERY_POINT",
                        "VPN_GATEWAY",
                        "VPN_CONNECTION",
                        "ENTITY_SYNC_RULE",
                        "CLUSTER_VSWITCH",
                        "RACKABLE_UNIT",
                        "IAM_SERVICE_ACCOUNT_GROUP",
                        "QOS_POLICY",
                        "NGT_POLICY",
                        "ACTION_RULE",
                        "ACTION_TYPE",
                        "ACTION_TRIGGER_TYPE",
                        "ACTION_INSTANCE",
                        "ACTION_RULE_RESULT",
                        "ROUTING_POLICY",
                        "ID_CATEGORIZATION_MAPPING",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "OVA",
                        "CATALOG_PLACEMENT_POLICY",
                        "EXTERNAL_REPOSITORY",
                        "CLOUD_TENANT",
                        "DEDICATED_DOMAIN",
                        "VPC",
                        "ROUTING_POLICY_COLLECTION"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.upgrade.UpgradeConfigurationDTO": {
            "type": "object",
            "properties": {
                "enable_automatic_downloads": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.FileGroupDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.FileGroupDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.alerts.AlertDTO$AffectedEntity": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_type_display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.uhura.SerialPortConfigDTO": {
            "type": "object",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "NULL",
                        "SERVER"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.dr.ConsistencyGroupDTO": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group_name": {
                    "type": "string"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "nfs_file_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "total_file_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_file_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "within_snapshot": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.dr.FileGroupDTO": {
            "type": "object",
            "properties": {
                "error_details": {
                    "$ref": "#/definitions/get.dto.ErrorDetails"
                },
                "file_clone_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_group_uuid": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "snapshot_uuid": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "NOT_STARTED",
                        "IN_PROGRESS",
                        "COMPLETED"
                    ],
                    "type": "string"
                },
                "task_uuid": {
                    "type": "string"
                },
                "v_store_path_prefixes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.network.NetworkInfoDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.network.NetworkInfoDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "get.dto.network.NetworkInfoDTO": {
            "type": "object",
            "properties": {
                "hypervisor_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.NetworkConfigDTO": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "ip_config": {
                    "$ref": "#/definitions/get.dto.acropolis.IpConfigDTO"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "enum": [
                        "EXTERNAL",
                        "INTERNAL"
                    ],
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vlan_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "vswitch_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.AttachDiskDTO": {
            "type": "object",
            "properties": {
                "disk_label": {
                    "type": "string"
                },
                "snapshot_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterDTO$HypervisorSecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "get.dto.appliance.configuration.SnmpTransportDTO": {
            "type": "object",
            "properties": {
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.alerts.AlertDTO$AffectedEntity": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_type_display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO": {
            "type": "object",
            "description": "health-check",
            "properties": {
                "affected_entity_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "alert_config_exception_groups": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$AlertConfigExceptionGroup"
                    },
                    "type": "array"
                },
                "alert_configurable_parameters": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$AlertConfigParamDTO"
                    },
                    "type": "array"
                },
                "alert_type_id": {
                    "type": "string"
                },
                "applicable_for_multi_cluster": {
                    "type": "boolean"
                },
                "applicable_for_single_cluster": {
                    "type": "boolean"
                },
                "auto_resolve": {
                    "enum": [
                        "ENABLED",
                        "DISABLED",
                        "NOT_SUPPORTED"
                    ],
                    "type": "string"
                },
                "category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "causes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "check_type": {
                    "enum": [
                        "SCHEDULED",
                        "NOT_SCHEDULED",
                        "EVENT_DRIVEN"
                    ],
                    "type": "string"
                },
                "classifications": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exception_count": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "impact_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "impacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_global_config": {
                    "type": "boolean"
                },
                "is_user_defined": {
                    "type": "boolean"
                },
                "kb_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                },
                "metrics": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO"
                    },
                    "type": "array"
                },
                "modified_by_username": {
                    "type": "string"
                },
                "modified_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$HealthCheckParameterDTO"
                    },
                    "type": "object"
                },
                "policy_uuid": {
                    "type": "string"
                },
                "resolutions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedule_interval_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                },
                "severity_threshold_infos": {
                    "items": {
                        "$ref": "#/definitions/get.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO"
                    },
                    "type": "array"
                },
                "sub_category_types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.dto.uhura.VmDiskCloneExternalDTO": {
            "type": "object",
            "properties": {
                "external_disk_url": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.NfsFile": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "nfs_file_path": {
                    "type": "string"
                },
                "nfs_handle": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.VirtualMachine": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group": {
                    "type": "string"
                },
                "related_entity_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_files": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_handle": {
                    "format": "int64",
                    "type": "integer"
                },
                "vm_id": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                },
                "vm_power_state_on_recovery": {
                    "enum": [
                        "Powered Off",
                        "Powered On",
                        "Power state at time of snapshot"
                    ],
                    "type": "string"
                },
                "vm_recoverability": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.VmRecoverabilityDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.ClusterRedundancyStateDTO": {
            "type": "object",
            "properties": {
                "current_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "desired_redundancy_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "redundancy_status": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            }
        },
        "update.dto.appliance.configuration.AlertConfigDTO": {
            "type": "object",
            "description": "DTO representing the configuration of alerts",
            "properties": {
                "default_nutanix_email": {
                    "type": "string"
                },
                "email_config_rules": {
                    "items": {
                        "$ref": "#/definitions/update.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule"
                    },
                    "type": "array"
                },
                "email_contact_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "email_template": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.AlertConfigDTO$EmailTemplate"
                },
                "enable": {
                    "type": "boolean"
                },
                "enable_default_nutanix_email": {
                    "type": "boolean"
                },
                "enable_email_digest": {
                    "type": "boolean"
                },
                "skip_empty_alert_email_digest": {
                    "type": "boolean"
                },
                "smtp_server": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.SmtpServerDTO"
                },
                "tunnel_details": {
                    "$ref": "#/definitions/update.dto.appliance.configuration.RemoteTunnelDetailsDTO"
                }
            }
        },
        "update.dto.acropolis.volumegroups.VolumeDiskConfigDTO": {
            "type": "object",
            "properties": {
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_uuid": {
                    "type": "string"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "storage_container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "vmdisk_path": {
                    "type": "string"
                },
                "vmdisk_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "vmdisk_size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "vmdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.ErrorInfoDTO": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "update.dto.PrimitiveDTO&lt;java.lang.Integer&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "create.dto.authconfig.OpenLdapConfigDTO": {
            "type": "object",
            "description": "Open LDAP configuration",
            "properties": {
                "group_member_attribute": {
                    "type": "string"
                },
                "group_member_attribute_value": {
                    "type": "string"
                },
                "group_object_class": {
                    "type": "string"
                },
                "group_search_base": {
                    "type": "string"
                },
                "user_object_class": {
                    "type": "string"
                },
                "user_search_base": {
                    "type": "string"
                },
                "username_attribute": {
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "type": "object",
            "properties": {
                "metric_details": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "type": "array"
                },
                "severity_trails": {
                    "items": {
                        "$ref": "#/definitions/update.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.acropolis.VMDiskSpecCloneDTO": {
            "type": "object",
            "properties": {
                "container_uuid": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "minimum_size": {
                    "format": "int64",
                    "type": "integer"
                },
                "minimum_size_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "snapshot_group_id": {
                    "type": "string"
                },
                "vm_disk_uuid": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.acropolis.VMCustomizationConfigDTO": {
            "type": "object",
            "properties": {
                "datasource_type": {
                    "enum": [
                        "CONFIG_DRIVE_V2"
                    ],
                    "type": "string"
                },
                "files_to_inject_list": {
                    "items": {
                        "$ref": "#/definitions/update.dto.acropolis.FileToInjectDTO"
                    },
                    "type": "array"
                },
                "fresh_install": {
                    "type": "boolean"
                },
                "userdata": {
                    "type": "string"
                },
                "userdata_path": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.VmRecoverabilityDTO": {
            "type": "object",
            "properties": {
                "cerebro_error": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "remote_site": {
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertSummaryDTO": {
            "type": "object",
            "properties": {
                "alert_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;"
                    },
                    "type": "object"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.encryption.RekeyRequestDto": {
            "type": "object",
            "properties": {
                "change_wrapping_key": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.uhura.VMDiskAttachDTO": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "vm_disks": {
                    "items": {
                        "$ref": "#/definitions/create.dto.uhura.VMDiskDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.CertificateAuthorityDTO": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "patch.dto.authconfig.DirectoryConfigDTO": {
            "type": "object",
            "description": "directory-config",
            "properties": {
                "connection_type": {
                    "enum": [
                        "LDAP"
                    ],
                    "type": "string"
                },
                "directory_type": {
                    "enum": [
                        "ACTIVE_DIRECTORY",
                        "OPEN_LDAP"
                    ],
                    "type": "string"
                },
                "directory_url": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "group_search_type": {
                    "enum": [
                        "RECURSIVE",
                        "NON_RECURSIVE"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_ldap_config": {
                    "$ref": "#/definitions/patch.dto.authconfig.OpenLdapConfigDTO"
                },
                "service_account_password": {
                    "type": "string"
                },
                "service_account_username": {
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertDTO$AffectedEntity": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_type_display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.AddRemoveEntityRequestDTO": {
            "type": "object",
            "properties": {
                "app_consistent_snapshots": {
                    "type": "boolean"
                },
                "consistency_group_name": {
                    "type": "string"
                },
                "ctr_id": {
                    "type": "string"
                },
                "ctr_uuid": {
                    "type": "string"
                },
                "file_paths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "force": {
                    "type": "boolean"
                },
                "host_id": {
                    "type": "string"
                },
                "host_uuid": {
                    "type": "string"
                },
                "ignore_dup_or_missing_vms": {
                    "type": "boolean"
                },
                "protect_related_entities": {
                    "type": "boolean"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "vm_add_remove_type": {
                    "enum": [
                        "LISTED_VMS",
                        "CTR_VMS",
                        "HOST_VMS",
                        "NO_VMS"
                    ],
                    "type": "string"
                },
                "vm_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volume_group_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.ResultMetadata": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/update.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "#/definitions/update.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "delete.dto.acropolis.ReturnValueDTO$TaskIdDTO": {
            "type": "object",
            "properties": {
                "task_uuid": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.ClusterDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.ClusterDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.appliance.configuration.ClusterDTO$HypervisorLldpConfigDTO": {
            "type": "object",
            "properties": {}
        },
        "patch.dto.dr.NetworkMappingDTO": {
            "type": "object",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "properties": {
                "l2_network_mappings": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.ResultContentDescriptor": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/patch.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.prismcentral.PrismCentralSizeDTO": {
            "type": "object",
            "properties": {
                "disk_size_in_gib": {
                    "format": "int32",
                    "type": "integer"
                },
                "memory_size_in_gib": {
                    "format": "int32",
                    "type": "integer"
                },
                "num_vms_supported": {
                    "format": "int32",
                    "type": "integer"
                },
                "pc_vm_form_factor": {
                    "type": "string"
                },
                "vcpus": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "update.dto.acropolis.ReturnValueDTO$TaskIdDTO": {
            "type": "object",
            "properties": {
                "task_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.VMDiskAddressDTO": {
            "type": "object",
            "properties": {
                "device_bus": {
                    "enum": [
                        "SCSI",
                        "IDE",
                        "PCI",
                        "SATA",
                        "SPAPR"
                    ],
                    "type": "string"
                },
                "device_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_uuid": {
                    "type": "string"
                },
                "disk_label": {
                    "type": "string"
                },
                "is_cdrom": {
                    "type": "boolean"
                },
                "ndfs_filepath": {
                    "type": "string"
                },
                "vmdisk_uuid": {
                    "type": "string"
                },
                "volume_group_uuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.health.check.HealthCheckDTO$SeverityThresholdInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "patch.dto.base.ParameterizedMessageDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.DeployCloudRemoteSiteRequestDTO": {
            "type": "object",
            "properties": {
                "admin_password": {
                    "type": "string"
                },
                "bandwidth_policy": {
                    "$ref": "#/definitions/create.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "cerebro_ssh_port_lower_bound": {
                    "format": "int32",
                    "type": "integer"
                },
                "cerebro_ssh_port_upper_bound": {
                    "format": "int32",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "connectivity_type": {
                    "enum": [
                        "VPN",
                        "SSH_TUNNEL"
                    ],
                    "type": "string"
                },
                "credential_name": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "instance_name": {
                    "type": "string"
                },
                "instance_type": {
                    "type": "string"
                },
                "local_container_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "local_remote_site_name": {
                    "type": "string"
                },
                "local_storage_container_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "remote_container_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "remote_storage_container_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "remote_storage_pool_name": {
                    "type": "string"
                },
                "skip_instance_type_validation": {
                    "type": "boolean"
                },
                "snap_shot_id": {
                    "type": "string"
                },
                "ssh_tunnel_port": {
                    "format": "int32",
                    "type": "integer"
                },
                "subnet_id": {
                    "type": "string"
                },
                "vpc_id": {
                    "type": "string"
                }
            }
        },
        "patch.dto.alerts.AlertDTO$MetricValueDetails": {
            "type": "object",
            "properties": {
                "metric_threshold_value": {
                    "type": "string"
                },
                "metric_value": {
                    "type": "string"
                },
                "state_change_time_stamp_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.RemoteSiteDTO$VStoreInfo": {
            "type": "object",
            "properties": {
                "is_protected": {
                    "type": "boolean"
                },
                "is_stretch_empty": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "metro_pd": {
                    "type": "string"
                },
                "used_physical_size": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.acropolis.IpConfigDTO$IpPool": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.ProtectionDomainDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.ProtectionDomainDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.acropolis.VMCloneSpecDTO": {
            "type": "object",
            "properties": {
                "boot_config": {
                    "$ref": "#/definitions/create.dto.acropolis.BootConfigDTO"
                },
                "clone_affinity": {
                    "type": "boolean"
                },
                "memory_mb": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_cores_per_vcpu": {
                    "format": "int64",
                    "type": "integer"
                },
                "num_vcpus": {
                    "format": "int64",
                    "type": "integer"
                },
                "override_network_config": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_nics": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.VMNicSpecDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.acropolis.volumegroups.IscsiClientDTO": {
            "type": "object",
            "properties": {
                "client_address": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/get.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.appliance.configuration.SnmpTransportDTO": {
            "type": "object",
            "properties": {
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "transport_protocol": {
                    "enum": [
                        "TCP",
                        "TCP_6",
                        "UDP",
                        "UDP_6"
                    ],
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.ContainerDTO": {
            "type": "object",
            "properties": {
                "advertised_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alert_summary": {
                    "$ref": "#/definitions/patch.dto.alerts.AlertSummaryDTO"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "compression_delay_in_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "container_uuid": {
                    "type": "string"
                },
                "down_migrate_times_in_secs": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "enable_software_encryption": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "erasure_code": {
                    "type": "string"
                },
                "erasure_code_delay_secs": {
                    "format": "int32",
                    "type": "integer"
                },
                "finger_print_on_write": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/patch.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilm_policy": {
                    "type": "string"
                },
                "is_nutanix_managed": {
                    "type": "boolean"
                },
                "mapped_remote_containers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfs_whitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfs_whitelist_inherited": {
                    "type": "boolean"
                },
                "on_disk_dedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplog_replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "prefer_higher_ecfault_domain": {
                    "type": "boolean"
                },
                "random_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replication_factor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seq_io_preference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "storage_pool_id": {
                    "type": "string"
                },
                "storage_pool_uuid": {
                    "type": "string"
                },
                "total_explicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "total_implicit_reserved_capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "vstore_name_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.ResultMetadata$Filter": {
            "type": "object",
            "properties": {
                "display_for_rhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "get.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.ResultMetadata": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/create.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "#/definitions/create.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.ClientAuthenticationDTO": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "enum": [
                        "CHAP",
                        "NONE"
                    ],
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.PdPendingActionsDTO$PendingReplication": {
            "type": "object",
            "properties": {
                "remote_site": {
                    "type": "string"
                },
                "snapshot_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.acropolis.VmDiskSpecCreateDTO": {
            "type": "object",
            "properties": {
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "size_mb": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.uhura.GPUConfigDTO": {
            "type": "object",
            "properties": {
                "assignable": {
                    "type": "boolean"
                },
                "device_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "device_name": {
                    "type": "string"
                },
                "fraction": {
                    "format": "int32",
                    "type": "integer"
                },
                "frame_buffer_size_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "gpu_mode": {
                    "enum": [
                        "UNUSED",
                        "USED_FOR_PASSTHROUGH",
                        "USED_FOR_VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_profile": {
                    "type": "string"
                },
                "gpu_type": {
                    "enum": [
                        "PASS_THROUGH_GRAPHICS",
                        "PASS_THROUGH_COMPUTE",
                        "VIRTUAL"
                    ],
                    "type": "string"
                },
                "gpu_vendor": {
                    "enum": [
                        "NVIDIA",
                        "INTEL",
                        "AMD"
                    ],
                    "type": "string"
                },
                "guest_driver_version": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "licenses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "max_instances_per_vm": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_resolution": {
                    "type": "string"
                },
                "num_virtual_display_heads": {
                    "format": "int32",
                    "type": "integer"
                },
                "numa_node": {
                    "format": "int32",
                    "type": "integer"
                },
                "sbdf": {
                    "type": "string"
                },
                "vm_uuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.uhura.VmDiskCreateDTO": {
            "type": "object",
            "properties": {
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "storage_container_uuid": {
                    "type": "string"
                }
            }
        },
        "create.dto.PrimitiveDTO&lt;java.lang.Integer&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.CloudCvmDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "private_ip": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "STARTING",
                        "STARTED",
                        "RUNNING",
                        "STOPPING",
                        "STOPPED",
                        "TERMINATED"
                    ],
                    "type": "string"
                },
                "subnet_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.volumegroups.VolumeGroupCloneDTO": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "enabled_authentications": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.volumegroups.ClientAuthenticationDTO"
                    },
                    "type": "array"
                },
                "iscsi_target": {
                    "type": "string"
                },
                "iscsi_target_prefix": {
                    "type": "string"
                },
                "load_balance_vm_attachments": {
                    "type": "boolean"
                },
                "logical_timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source_volume_group_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "update.dto.dr.CronScheduleDTO": {
            "type": "object",
            "properties": {
                "app_consistent": {
                    "type": "boolean"
                },
                "duration_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "every_nth": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_rollup_sched": {
                    "type": "boolean"
                },
                "pd_name": {
                    "type": "string"
                },
                "retention_policy": {
                    "$ref": "#/definitions/update.dto.dr.RetentionPolicyDTO"
                },
                "rollup_schedule_uuid": {
                    "type": "string"
                },
                "start_times_in_usecs": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "suspended": {
                    "type": "boolean"
                },
                "timezone_offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "SECONDLY",
                        "MINUTELY",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY"
                    ],
                    "type": "string"
                },
                "user_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "values": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.ResultContentDescriptor$Perspective": {
            "type": "object",
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/update.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO$SecurityComplianceConfigDTO": {
            "type": "object",
            "properties": {
                "enable_snmpv3_only": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.PrimitiveDTO&lt;java.lang.String&gt;": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.authconfig.AuthConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "generic_dto": {
                    "$ref": "#/definitions/patch.dto.authconfig.AuthConfigDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.PendingReplicationDTO": {
            "type": "object",
            "properties": {
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "snapshot": {
                    "$ref": "#/definitions/get.dto.dr.SnapshotDTO"
                }
            }
        },
        "get.dto.base.ParameterizedMessageDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "create.dto.acropolis.SnapshotCloneDTO": {
            "type": "object",
            "properties": {
                "spec_list": {
                    "items": {
                        "$ref": "#/definitions/create.dto.acropolis.VMCloneSpecDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.dr.RemoteSiteDTO": {
            "type": "object",
            "description": "remote-site",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/patch.dto.alerts.AlertSummaryDTO"
                },
                "bandwidth_policy": {
                    "$ref": "#/definitions/patch.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_type": {
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_type": {
                    "items": {
                        "enum": [
                            "LIGHT_COMPUTE",
                            "SINGLE_NODE_BACKUP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "credential_name": {
                    "type": "string"
                },
                "cvm_name": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/patch.dto.health.check.HealthSummaryDTO"
                },
                "latency_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metro_ready": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_mapping": {
                    "$ref": "#/definitions/patch.dto.dr.NetworkMappingDTO"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "remote_dr_external_subnet": {
                    "type": "string"
                },
                "remote_ip_ports": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_vstore_info": {
                    "additionalProperties": {
                        "$ref": "#/definitions/patch.dto.dr.RemoteSiteDTO$VStoreInfo"
                    },
                    "type": "object"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "ssh_enabled": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vstore_name_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.appliance.configuration.RemoteTunnelDetailsDTO": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "$ref": "#/definitions/get.dto.base.CommunicationStatusDTO"
                },
                "http_proxy": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.HttpProxyDTO"
                },
                "service_center": {
                    "$ref": "#/definitions/get.dto.appliance.configuration.ServiceCenterDTO"
                },
                "transport_status": {
                    "$ref": "#/definitions/get.dto.base.CommunicationStatusDTO"
                }
            }
        },
        "get.dto.appliance.configuration.VirtualDiskDTO": {
            "type": "object",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/get.dto.alerts.AlertSummaryDTO"
                },
                "attached_vm_id": {
                    "type": "string"
                },
                "attached_vm_uuid": {
                    "type": "string"
                },
                "attached_vmname": {
                    "type": "string"
                },
                "attached_volume_group_id": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "data_source_url": {
                    "type": "string"
                },
                "device_uuid": {
                    "type": "string"
                },
                "disk_address": {
                    "type": "string"
                },
                "disk_capacity_in_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "flash_mode_enabled": {
                    "type": "boolean"
                },
                "health_summary": {
                    "$ref": "#/definitions/get.dto.health.check.HealthSummaryDTO"
                },
                "nutanix_nfsfile_path": {
                    "type": "string"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "storage_container_id": {
                    "type": "string"
                },
                "storage_container_uuid": {
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "virtual_disk_id": {
                    "type": "string"
                }
            }
        },
        "get.dto.acropolis.IpConfigDTO$DhcpOptions": {
            "type": "object",
            "properties": {
                "boot_file_name": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "domain_name_servers": {
                    "type": "string"
                },
                "domain_search": {
                    "type": "string"
                },
                "tftp_server_name": {
                    "type": "string"
                }
            }
        },
        "patch.dto.health.check.HealthCheckDTO$HealthCheckMetricDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "update.dto.authconfig.CertRevocationInfoDTO": {
            "type": "object",
            "properties": {
                "crl_distribution_points": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "global_crl_refresh_interval": {
                    "format": "int64",
                    "type": "integer"
                },
                "ocsp_responder": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.NetworkMappingDTO": {
            "type": "object",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "properties": {
                "l2_network_mappings": {
                    "items": {
                        "$ref": "#/definitions/get.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "patch.dto.appliance.configuration.HttpProxyDTO": {
            "type": "object",
            "description": "http-proxy",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65536,
                    "minimum": 0,
                    "type": "integer"
                },
                "proxy_types": {
                    "items": {
                        "enum": [
                            "HTTP",
                            "HTTPS",
                            "SOCKS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.WitnessSiteDTO": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "cluster_timestamp_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_uuid": {
                    "type": "string"
                },
                "ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "nos_full_version": {
                    "type": "string"
                },
                "nos_version": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "witness_name": {
                    "type": "string"
                }
            }
        },
        "patch.dto.authconfig.AuthConfigDTO": {
            "type": "object",
            "description": "auth-config",
            "properties": {
                "auth_type_list": {
                    "items": {
                        "enum": [
                            "LOCAL",
                            "DIRECTORY_SERVICE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "directory_list": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.authconfig.DirectoryConfigDTO"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.acropolis.VmDiskSpecCreateDTO": {
            "type": "object",
            "properties": {
                "container_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "container_name": {
                    "type": "string"
                },
                "container_uuid": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "size_mb": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/patch.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/patch.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/patch.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.uhura.VmConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.uhura.VmConfigDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "patch.dto.ResultContentDescriptor$Perspective": {
            "type": "object",
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/patch.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.RemoteSiteDTO": {
            "type": "object",
            "description": "remote-site",
            "properties": {
                "alert_summary": {
                    "$ref": "#/definitions/create.dto.alerts.AlertSummaryDTO"
                },
                "bandwidth_policy": {
                    "$ref": "#/definitions/create.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_type": {
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string"
                },
                "cluster_arch": {
                    "type": "string"
                },
                "cluster_external_data_services_ipaddress": {
                    "type": "string"
                },
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_type": {
                    "items": {
                        "enum": [
                            "LIGHT_COMPUTE",
                            "SINGLE_NODE_BACKUP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "credential_name": {
                    "type": "string"
                },
                "cvm_name": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "#/definitions/create.dto.health.check.HealthSummaryDTO"
                },
                "latency_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metro_ready": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_mapping": {
                    "$ref": "#/definitions/create.dto.dr.NetworkMappingDTO"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "remote_dr_external_subnet": {
                    "type": "string"
                },
                "remote_ip_ports": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "remote_vstore_info": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.dr.RemoteSiteDTO$VStoreInfo"
                    },
                    "type": "object"
                },
                "replication_links": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "ssh_enabled": {
                    "type": "boolean"
                },
                "stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usage_stats": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                },
                "vstore_name_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "get.dto.appliance.configuration.ComponentFaultToleranceStatusDTO": {
            "type": "object",
            "properties": {
                "component_type": {
                    "enum": [
                        "EXTENT_GROUPS",
                        "OPLOG",
                        "METADATA",
                        "ZOOKEEPER",
                        "FREE_SPACE",
                        "STATIC_CONFIGURATION",
                        "ERASURE_CODE_STRIP_SIZE",
                        "STARGATE_HEALTH"
                    ],
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/get.dto.base.ParameterizedMessageDTO"
                },
                "last_updated_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "number_of_failures_tolerable": {
                    "format": "int32",
                    "type": "integer"
                },
                "under_computation": {
                    "type": "boolean"
                }
            }
        },
        "create.base.EntityCollection&lt;create.dto.dr.RemoteSiteRecoverabilityDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/create.dto.dr.RemoteSiteRecoverabilityDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/create.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/create.base.Metadata"
                }
            }
        },
        "get.dto.authconfig.CaChainDTO": {
            "type": "object",
            "properties": {
                "ca_chain": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "enable_client_auth": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "create.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "type": "object",
            "properties": {
                "checks_in_error": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.health.check.HealthCheckErrorsDTO"
                    },
                    "type": "object"
                },
                "detailed_check_summary": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "type": "object"
                },
                "entity_type": {
                    "enum": [
                        "PAGE",
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "NUCALM_CONSUMPTION",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "AUDIT_EVENT_SCHEMA",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "EVENT",
                        "AUDIT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION",
                        "CLOUD_TRUST",
                        "DUMMY_API",
                        "QOS_POLICY",
                        "IDENTITY_PROVIDER",
                        "NGT_POLICY",
                        "PROTECTION_RULE",
                        "ROLE",
                        "CATEGORY",
                        "ABAC_CATEGORY",
                        "ABAC_CATEGORY_KEY",
                        "ABAC_ENTITY_CAPABILITY",
                        "NUCALM_APP_BLUEPRINT",
                        "NUCALM_APPLICATION",
                        "PROJECT",
                        "AFFINITY_RULE",
                        "MARKETPLACE_ITEM",
                        "RECOVERY_PLAN",
                        "RECOVERY_PLAN_JOB",
                        "ABAC_USER_CAPABILITY",
                        "AVAILABILITY_ZONE",
                        "VM_RECOVERY_POINT",
                        "NETWORK_SECURITY_RULE",
                        "REMOTE_SYSLOG_SERVER",
                        "REMOTE_SYSLOG_MODULE",
                        "CITRIX_ADAPTER",
                        "FAVORITE",
                        "SQL_SERVER",
                        "QUERY",
                        "DATABASE",
                        "AVAILABILITY_GROUP",
                        "FAILOVER_NODE",
                        "EXTERNAL_ENTITY_CONFIG",
                        "SUBNET",
                        "ACTION_RULE"
                    ],
                    "type": "string"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "health_summary": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            }
        },
        "create.dto.encryption.CvmCertificateTestResponseDTO": {
            "type": "object",
            "properties": {
                "key_management_server_test_response_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.encryption.KeyManagementServerTestResponseDTO"
                    },
                    "type": "object"
                },
                "node_id": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.ClusterDTO$IscsiConfig": {
            "type": "object",
            "properties": {
                "external_client_enabled": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.appliance.configuration.SnmpInfoDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "snmp_transports": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.SnmpTransportDTO"
                    },
                    "type": "array"
                },
                "snmp_traps": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.SnmpTrapDTO"
                    },
                    "type": "array"
                },
                "snmp_users": {
                    "items": {
                        "$ref": "#/definitions/get.dto.appliance.configuration.SnmpUserDTO"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.NfsFile": {
            "type": "object",
            "properties": {
                "consistency_group": {
                    "type": "string"
                },
                "nfs_file_path": {
                    "type": "string"
                },
                "nfs_handle": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.uhura.ManagementServerInfoDTO": {
            "type": "object",
            "properties": {
                "drs_enabled": {
                    "type": "boolean"
                },
                "drs_vm_behaviour": {
                    "enum": [
                        "UNKNOWN",
                        "FULL_ENABLED",
                        "ONLY_PLACEMENT_ENABLED",
                        "MANUAL"
                    ],
                    "type": "string"
                },
                "ha_enabled": {
                    "type": "boolean"
                },
                "in_use": {
                    "type": "boolean"
                },
                "ip_address": {
                    "type": "string"
                },
                "management_server_type": {
                    "enum": [
                        "VCENTER"
                    ],
                    "type": "string"
                },
                "registered": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.authconfig.DirectoryConfigDTO&gt;": {
            "type": "object",
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/get.dto.authconfig.DirectoryConfigDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "#/definitions/get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/get.base.Metadata"
                }
            }
        },
        "create.dto.health.check.HealthSummaryDTO": {
            "type": "object",
            "properties": {
                "entity_type_summaries": {
                    "items": {
                        "$ref": "#/definitions/create.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "health_check_summaries": {
                    "additionalProperties": {
                        "$ref": "#/definitions/create.dto.health.check.HealthCheckSummaryDTO"
                    },
                    "type": "object"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.appliance.configuration.SmtpServerDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email_status": {
                    "$ref": "#/definitions/update.dto.base.CommunicationStatusDTO"
                },
                "from_email_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "secure_mode": {
                    "enum": [
                        "STARTTLS",
                        "SSL",
                        "NONE"
                    ],
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}